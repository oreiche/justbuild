{ "config.h":
  { "type": "configure"
  , "target": "config_header"
  , "config":
    { "type": "let*"
    , "bindings":
      [ ["SUPPORT_PCRE8", true]
      , ["BSR_ANYCRLF", false]
      , ["NO_RECURSE", true]
      , ["PCRE_LINK_SIZE", "2"]
      , ["PCRE_PARENS_NEST_LIMIT", "250"]
      , ["PCRE_MATCH_LIMIT", "10000000"]
      , ["PCRE_MATCH_LIMIT_RECURSION", "MATCH_LIMIT"]
      , ["PCRE_NEWLINE", "LF"]
      , ["PCRE_POSIX_MALLOC_THRESHOLD", "10"]
      , ["sys_hdrs", ["stdlib.h", "string.h", "strings.h"]]
      , [ "defines"
        , [ ["MAX_NAME_SIZE", "32"]
          , ["MAX_NAME_COUNT", "10000"]
          , [ "NEWLINE"
            , { "type": "case"
              , "expr": {"type": "var", "name": "PCRE_NEWLINE"}
              , "case":
                { "LF": "10"
                , "CR": "13"
                , "CRLF": "3338"
                , "ANY": "-1"
                , "ANYCRLF": "-2"
                }
              , "default":
                { "type": "fail"
                , "msg":
                  [ "The PCRE_NEWLINE variable must be set to one of the following values:"
                  , ["LF", "CR", "CRLF", "ANY", "ANYCRLF"]
                  ]
                }
              }
            ]
          , [ "POSIX_MALLOC_THRESHOLD"
            , {"type": "var", "name": "PCRE_POSIX_MALLOC_THRESHOLD"}
            ]
          , ["LINK_SIZE", {"type": "var", "name": "PCRE_LINK_SIZE"}]
          , [ "PARENS_NEST_LIMIT"
            , {"type": "var", "name": "PCRE_PARENS_NEST_LIMIT"}
            ]
          , ["MATCH_LIMIT", {"type": "var", "name": "PCRE_MATCH_LIMIT"}]
          , [ "MATCH_LIMIT_RECURSION"
            , {"type": "var", "name": "PCRE_MATCH_LIMIT_RECURSION"}
            ]
          , [ "PCREGREP_BUFSIZE"
            , {"type": "var", "name": "PCREGREP_BUFSIZE", "default": ""}
            ]
          ]
        ]
      , [ "defines1"
        , [ ["PCRE_STATIC", {"type": "var", "name": "PCRE_STATIC"}]
          , ["SUPPORT_PCRE8", {"type": "var", "name": "SUPPORT_PCRE8"}]
          , ["SUPPORT_PCRE16", {"type": "var", "name": "SUPPORT_PCRE16"}]
          , ["SUPPORT_PCRE32", {"type": "var", "name": "SUPPORT_PCRE32"}]
          , ["SUPPORT_JIT", {"type": "var", "name": "SUPPORT_JIT"}]
          , [ "SUPPORT_PCREGREP_JIT"
            , {"type": "var", "name": "SUPPORT_PCREGREP_JIT"}
            ]
          , ["SUPPORT_UTF", {"type": "var", "name": "SUPPORT_UTF"}]
          , ["SUPPORT_UCP", {"type": "var", "name": "SUPPORT_UCP"}]
          , ["EBCDIC", {"type": "var", "name": "EBCDIC"}]
          , ["EBCDIC_NL25", {"type": "var", "name": "EBCDIC_NL25"}]
          , ["BSR_ANYCRLF", {"type": "var", "name": "BSR_ANYCRLF"}]
          , ["NO_RECURSE", {"type": "var", "name": "NO_RECURSE"}]
          , ["SUPPORT_LIBBZ2", {"type": "var", "name": "SUPPORT_LIBBZ2"}]
          , ["SUPPORT_LIBZ", {"type": "var", "name": "SUPPORT_LIBZ"}]
          , ["SUPPORT_LIBEDIT", {"type": "var", "name": "SUPPORT_LIBEDIT"}]
          , [ "SUPPORT_LIBREADLINE"
            , {"type": "var", "name": "SUPPORT_LIBREADLINE"}
            ]
          , ["SUPPORT_VALGRIND", {"type": "var", "name": "SUPPORT_VALGRIND"}]
          , ["SUPPORT_GCOV", {"type": "var", "name": "SUPPORT_GCOV"}]
          ]
        ]
      , [ "have_cfile"
        , [ ["HAVE_DIRENT_H", "dirent.h"]
          , ["HAVE_STDINT_H", "stdint.h"]
          , ["HAVE_INTTYPES_H", "inttypes.h"]
          , ["HAVE_SYS_STAT_H", "sys/stat.h"]
          , ["HAVE_SYS_TYPES_H", "sys/types.h"]
          , ["HAVE_UNISTD_H", "unistd.h"]
          , ["HAVE_WINDOWS_H", "windows.h"]
          ]
        ]
      , [ "have_ctype"
        , [ ["HAVE_LONG_LONG", "long long"]
          , ["HAVE_UNSIGNED_LONG_LONG", "unsigned long long"]
          ]
        ]
      , [ "have_csymbol"
        , [ ["HAVE_BCOPY", ["bcopy", {"type": "var", "name": "sys_hdrs"}]]
          , ["HAVE_MEMMOVE", ["memmove", {"type": "var", "name": "sys_hdrs"}]]
          , ["HAVE_STRERROR", ["bcopy", {"type": "var", "name": "sys_hdrs"}]]
          , ["HAVE_STRTOLL", ["strtoll", {"type": "var", "name": "sys_hdrs"}]]
          , ["HAVE_STRTOQ", ["strtoq", {"type": "var", "name": "sys_hdrs"}]]
          , [ "HAVE__STRTOI64"
            , ["_strtoi64", {"type": "var", "name": "sys_hdrs"}]
            ]
          ]
        ]
      ]
    , "body":
      { "type": "env"
      , "vars":
        ["defines", "defines1", "have_cfile", "have_ctype", "have_csymbol"]
      }
    }
  }
, "config_header":
  { "type": ["@", "rules", "CC/auto", "config"]
  , "name": ["config.h"]
  , "guard": ["INCLUDE_DEPS_PCRE_CONFIG_H"]
  }
, "git2_pcre":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["OS"]
  , "name": ["git2_pcre"]
  , "pure C": ["yes"]
  , "private-defines":
    { "type": "++"
    , "$1":
      [ ["HAVE_CONFIG_H"]
      , { "type": "case"
        , "expr": {"type": "var", "name": "OS"}
        , "case":
          {"windows": ["_CRT_SECURE_NO_DEPRECATE", "_CRT_SECURE_NO_WARNINGS"]}
        }
      ]
    }
  , "private-cflags": ["-Wno-unused-function", "-Wno-implicit-fallthrough"]
  , "srcs":
    [ "pcre_byte_order.c"
    , "pcre_chartables.c"
    , "pcre_compile.c"
    , "pcre_config.c"
    , "pcre_dfa_exec.c"
    , "pcre_exec.c"
    , "pcre_fullinfo.c"
    , "pcre_get.c"
    , "pcre_globals.c"
    , "pcre_jit_compile.c"
    , "pcre_maketables.c"
    , "pcre_newline.c"
    , "pcre_ord2utf8.c"
    , "pcre_refcount.c"
    , "pcre_string_utils.c"
    , "pcre_study.c"
    , "pcre_tables.c"
    , "pcre_ucd.c"
    , "pcre_valid_utf8.c"
    , "pcre_version.c"
    , "pcre_xclass.c"
    , "pcreposix.c"
    ]
  , "hdrs": ["config.h", "pcre.h", "pcre_internal.h", "ucp.h", "pcreposix.h"]
  }
}
