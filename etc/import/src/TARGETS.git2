{ "git2_private_headers":
  { "type": ["@", "rules", "data", "staged"]
  , "srcs":
    [ "alloc.h"
    , "annotated_commit.h"
    , "apply.h"
    , "array.h"
    , "assert_safe.h"
    , "attrcache.h"
    , "attr_file.h"
    , "attr.h"
    , "bitvec.h"
    , "blame_git.h"
    , "blame.h"
    , "blob.h"
    , "branch.h"
    , "buffer.h"
    , "cache.h"
    , "cc-compat.h"
    , "checkout.h"
    , "clone.h"
    , "commit.h"
    , "commit_graph.h"
    , "commit_list.h"
    , "common.h"
    , "config_backend.h"
    , "config_entries.h"
    , "config.h"
    , "config_parse.h"
    , "delta.h"
    , "diff_driver.h"
    , "diff_file.h"
    , "diff_generate.h"
    , "diff.h"
    , "diff_parse.h"
    , "diff_tform.h"
    , "diff_xdiff.h"
    , "errors.h"
    , "fetch.h"
    , "fetchhead.h"
    , "filebuf.h"
    , "filter.h"
    , "futils.h"
    , "hash.h"
    , "idxmap.h"
    , "ignore.h"
    , "indexer.h"
    , "index.h"
    , "integer.h"
    , "iterator.h"
    , "khash.h"
    , "libgit2.h"
    , "mailmap.h"
    , "map.h"
    , "merge_driver.h"
    , "merge.h"
    , "message.h"
    , "midx.h"
    , "mwindow.h"
    , "net.h"
    , "netops.h"
    , "notes.h"
    , "object.h"
    , "odb.h"
    , "offmap.h"
    , "oidarray.h"
    , "oid.h"
    , "oidmap.h"
    , "pack.h"
    , "pack-objects.h"
    , "parse.h"
    , "patch_generate.h"
    , "patch.h"
    , "patch_parse.h"
    , "path.h"
    , "pathspec.h"
    , "pool.h"
    , "posix.h"
    , "pqueue.h"
    , "proxy.h"
    , "push.h"
    , "reader.h"
    , "refdb.h"
    , "reflog.h"
    , "refs.h"
    , "refspec.h"
    , "regexp.h"
    , "remote.h"
    , "repository.h"
    , "repo_template.h"
    , "revwalk.h"
    , "runtime.h"
    , "settings.h"
    , "signature.h"
    , "sortedcache.h"
    , "status.h"
    , "stream.h"
    , "strmap.h"
    , "strnlen.h"
    , "submodule.h"
    , "sysdir.h"
    , "tag.h"
    , "thread.h"
    , "threadstate.h"
    , "trace.h"
    , "transaction.h"
    , "tree-cache.h"
    , "tree.h"
    , "userdiff.h"
    , "utf8.h"
    , "util.h"
    , "varint.h"
    , "vector.h"
    , "wildmatch.h"
    , "worktree.h"
    , "zstream.h"
    , "allocators/failalloc.h"
    , "allocators/stdalloc.h"
    , "allocators/win32_leakcheck.h"
    , "hash/sha1.h"
    , "hash/sha1/collisiondetect.h"
    , "hash/sha1/common_crypto.h"
    , "hash/sha1/generic.h"
    , "hash/sha1/mbedtls.h"
    , "hash/sha1/openssl.h"
    , "hash/sha1/win32.h"
    , "hash/sha1/sha1dc/sha1.h"
    , "hash/sha1/sha1dc/ubc_check.h"
    , "streams/mbedtls.h"
    , "streams/openssl.h"
    , "streams/openssl_dynamic.h"
    , "streams/openssl_legacy.h"
    , "streams/registry.h"
    , "streams/socket.h"
    , "streams/stransport.h"
    , "streams/tls.h"
    , "transports/auth.h"
    , "transports/auth_negotiate.h"
    , "transports/auth_ntlm.h"
    , "transports/httpclient.h"
    , "transports/http.h"
    , "transports/smart.h"
    , "transports/ssh.h"
    , "unix/posix.h"
    , "unix/pthread.h"
    , "win32/dir.h"
    , "win32/error.h"
    , "win32/findfile.h"
    , "win32/mingw-compat.h"
    , "win32/msvc-compat.h"
    , "win32/path_w32.h"
    , "win32/posix.h"
    , "win32/precompiled.h"
    , "win32/reparse.h"
    , "win32/thread.h"
    , "win32/utf-conv.h"
    , "win32/version.h"
    , "win32/w32_buffer.h"
    , "win32/w32_common.h"
    , "win32/w32_leakcheck.h"
    , "win32/w32_util.h"
    , "win32/win32-compat.h"
    , "xdiff/xdiff.h"
    , "xdiff/xdiffi.h"
    , "xdiff/xemit.h"
    , "xdiff/xinclude.h"
    , "xdiff/xmacros.h"
    , "xdiff/xprepare.h"
    , "xdiff/xtypes.h"
    , "xdiff/xutils.h"
    , ["include", "git2_public_headers"]
    ]
  }
, "git2_os_unix":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["OS", "THREADSAFE"]
  , "name": ["git2_os_unix"]
  , "pure C": ["yes"]
  , "srcs": ["unix/map.c", "unix/realpath.c"]
  , "private-hdrs": ["git2_private_headers"]
  , "private-ldflags":
    { "type": "++"
    , "$1":
      [ { "type": "if"
        , "cond": {"type": "var", "name": "THREADSAFE"}
        , "then": ["-lpthread"]
        }
      , { "type": "case"
        , "expr": {"type": "var", "name": "OS"}
        , "case":
          { "solaris": ["-lsocket", "-lnsl"]
          , "sunos": ["-lsocket", "-lnsl"]
          , "haiku": ["-lnetwork"]
          }
        }
      ]
    }
  }
, "git2_os_win32":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["git2_os_win32"]
  , "pure C": ["yes"]
  , "srcs":
    [ "win32/dir.c"
    , "win32/error.c"
    , "win32/findfile.c"
    , "win32/map.c"
    , "win32/path_w32.c"
    , "win32/posix_w32.c"
    , "win32/precompiled.c"
    , "win32/thread.c"
    , "win32/utf-conv.c"
    , "win32/w32_buffer.c"
    , "win32/w32_leakcheck.c"
    , "win32/w32_util.c"
    ]
  , "private-hdrs": ["git2_private_headers"]
  , "private-ldflags": ["-lws2_32"]
  }
, "git2_os":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["OS"]
  , "deps":
    { "type": "if"
    , "cond":
      {"type": "==", "$1": {"type": "var", "name": "OS"}, "$2": "windows"}
    , "then": ["git2_os_win32"]
    , "else": ["git2_os_unix"]
    }
  }
, "git2_hash_collision_detection":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["git2_hash_collision_detection"]
  , "pure C": ["yes"]
  , "private-defines":
    [ "SHA1DC_NO_STANDARD_INCLUDES=1"
    , "SHA1DC_CUSTOM_INCLUDE_SHA1_C=\"common.h\""
    , "SHA1DC_CUSTOM_INCLUDE_UBC_CHECK_C=\"common.h\""
    ]
  , "srcs":
    [ "hash/sha1/collisiondetect.c"
    , "hash/sha1/sha1dc/sha1.c"
    , "hash/sha1/sha1dc/ubc_check.c"
    ]
  , "private-hdrs": ["git2_private_headers"]
  }
, "git2_hash_openssl":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["USE_SYSTEM_LIBS"]
  , "name": ["git2_hash_openssl"]
  , "pure C": ["yes"]
  , "srcs": ["hash/sha1/openssl.c"]
  , "private-hdrs": ["git2_private_headers"]
  , "private-ldflags":
    { "type": "if"
    , "cond": {"type": "var", "name": "USE_SYSTEM_LIBS"}
    , "then": ["-lssl"]
    }
  , "deps":
    { "type": "if"
    , "cond": {"type": "var", "name": "USE_SYSTEM_LIBS"}
    , "then": []
    , "else": [["@", "ssl", "", "crypto"]]
    }
  }
, "git2_hash_common_crypto":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["USE_SYSTEM_LIBS"]
  , "name": ["git2_hash_common_crypto"]
  , "pure C": ["yes"]
  , "srcs": ["hash/sha1/common_crypto.c"]
  , "private-hdrs": ["git2_private_headers"]
  , "private-ldflags":
    { "type": "if"
    , "cond": {"type": "var", "name": "USE_SYSTEM_LIBS"}
    , "then": ["-lcommon_crypto"]
    }
  , "deps":
    { "type": "if"
    , "cond": {"type": "var", "name": "USE_SYSTEM_LIBS"}
    , "then": []
    , "else": [["@", "common_crypto", "", "crypto"]]
    }
  }
, "git2_hash_mbedtls":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["USE_SYSTEM_LIBS"]
  , "name": ["git2_hash_mbedtls"]
  , "pure C": ["yes"]
  , "srcs": ["hash/sha1/mbedtls.c"]
  , "private-hdrs": ["git2_private_headers"]
  , "private-ldflags":
    { "type": "if"
    , "cond": {"type": "var", "name": "USE_SYSTEM_LIBS"}
    , "then": ["-lmbedtls"]
    }
  , "deps":
    { "type": "if"
    , "cond": {"type": "var", "name": "USE_SYSTEM_LIBS"}
    , "then": []
    , "else": [["@", "mbedtls", "", "crypto"]]
    }
  }
, "git2_hash_win32":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["git2_hash_win32"]
  , "pure C": ["yes"]
  , "srcs": ["hash/sha1/win32.c"]
  , "private-hdrs": ["git2_private_headers"]
  }
, "git2_hash_generic":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["git2_hash_generic"]
  , "pure C": ["yes"]
  , "srcs": ["hash/sha1/generic.c"]
  , "private-hdrs": ["git2_private_headers"]
  }
, "git2_hash":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["USE_SHA1"]
  , "deps":
    { "type": "case*"
    , "expr": {"type": "var", "name": "USE_SHA1"}
    , "case":
      [ ["CollisionDetection", ["git2_hash_collision_detection"]]
      , ["OpenSSL", ["git2_hash_openssl"]]
      , ["CommonCrypto", ["git2_hash_common_crypto"]]
      , ["mbedTLS", ["git2_hash_mbedtls"]]
      , ["Win32", ["git2_hash_win32"]]
      , ["Generic", ["git2_hash_generic"]]
      ]
    , "default":
      {"type": "fail", "msg": "Asked for unknown SHA1 backend in `USE_SHA1`"}
    }
  }
, "git2_regex":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["USE_SYSTEM_LIBS", "REGEX_BACKEND"]
  , "name": ["git2_regex"]
  , "private-ldflags":
    { "type": "if"
    , "cond": {"type": "var", "name": "USE_SYSTEM_LIBS"}
    , "then":
      { "type": "case"
      , "expr": {"type": "var", "name": "REGEX_BACKEND"}
      , "case": {"pcre2": ["-lpcre2-8"], "pcre": ["-lpcre"]}
      }
    }
  , "deps":
    { "type": "if"
    , "cond": {"type": "var", "name": "USE_SYSTEM_LIBS"}
    , "then":
      { "type": "case*"
      , "expr": {"type": "var", "name": "REGEX_BACKEND"}
      , "case":
        [ ["builtin", [["deps/pcre", "git2_pcre"]]]
        , [null, [["deps/pcre", "git2_pcre"]]]
        ]
      }
    , "else":
      { "type": "case*"
      , "expr": {"type": "var", "name": "REGEX_BACKEND"}
      , "case":
        [ ["pcre2", [["@", "pcre2", "", "pcre2"]]]
        , ["pcre", [["@", "pcre", "", "pcre"]]]
        , ["builtin", [["deps/pcre", "git2_pcre"]]]
        , [null, [["deps/pcre", "git2_pcre"]]]
        ]
      }
    }
  }
, "git2_compress":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["USE_SYSTEM_LIBS", "USE_BUNDLED_ZLIB"]
  , "name": ["git2_compress"]
  , "private-ldflags":
    { "type": "if"
    , "cond": {"type": "var", "name": "USE_BUNDLED_ZLIB"}
    , "then": []
    , "else":
      { "type": "if"
      , "cond": {"type": "var", "name": "USE_SYSTEM_LIBS"}
      , "then": ["-lz"]
      }
    }
  , "deps":
    { "type": "if"
    , "cond": {"type": "var", "name": "USE_BUNDLED_ZLIB"}
    , "then":
      {"type": "fail", "msg": "bundled zlib from deps/zlib not supported yet."}
    , "else":
      { "type": "if"
      , "cond": {"type": "var", "name": "USE_SYSTEM_LIBS"}
      , "then": []
      , "else": [["@", "zlib", "", "zlib"]]
      }
    }
  }
, "git2_ssh":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["USE_SYSTEM_LIBS", "USE_SSH"]
  , "name": ["git2_ssh"]
  , "private-ldflags":
    { "type": "if"
    , "cond": {"type": "var", "name": "USE_SSH"}
    , "then":
      { "type": "if"
      , "cond": {"type": "var", "name": "USE_SYSTEM_LIBS"}
      , "then": ["-lssh2"]
      }
    }
  , "deps":
    { "type": "if"
    , "cond": {"type": "var", "name": "USE_SSH"}
    , "then":
      { "type": "if"
      , "cond": {"type": "var", "name": "USE_SYSTEM_LIBS"}
      , "then": []
      , "else": [["@", "ssh2", "", "ssh"]]
      }
    }
  }
, "git2_http_parser":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["USE_SYSTEM_LIBS", "USE_HTTP_PARSER"]
  , "name": ["git2_http_parser"]
  , "private-ldflags":
    { "type": "case*"
    , "expr": {"type": "var", "name": "USE_HTTP_PARSER"}
    , "case":
      [ [ "system"
        , { "type": "if"
          , "cond": {"type": "var", "name": "USE_SYSTEM_LIBS"}
          , "then": ["-lhttp_parser"]
          }
        ]
      ]
    }
  , "deps":
    { "type": "case*"
    , "expr": {"type": "var", "name": "USE_HTTP_PARSER"}
    , "case":
      [ [ "system"
        , { "type": "if"
          , "cond": {"type": "var", "name": "USE_SYSTEM_LIBS"}
          , "then": []
          , "else": [["@", "http_parser", "", "http_parser"]]
          }
        ]
      ]
    , "default": [["deps/http-parser", "git2_http_parser"]]
    }
  }
, "git2_gssapi":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["OS", "USE_SYSTEM_LIBS", "USE_GSSAPI"]
  , "name": ["git2_gssapi"]
  , "private-ldflags":
    { "type": "if"
    , "cond": {"type": "var", "name": "USE_SYSTEM_LIBS"}
    , "then":
      { "type": "case*"
      , "expr": {"type": "var", "name": "USE_GSSAPI"}
      , "case":
        [ [ true
          , { "type": "case*"
            , "expr": {"type": "var", "name": "OS"}
            , "case": [["darwin", ["-framework", "GSS"]]]
            , "default": ["-lgssapi"]
            }
          ]
        , ["gssapi", ["-lgssapi"]]
        , ["GSS.framework", ["-framework", "GSS"]]
        ]
      }
    }
  , "deps":
    { "type": "if"
    , "cond": {"type": "var", "name": "USE_SYSTEM_LIBS"}
    , "then": []
    , "else":
      { "type": "if"
      , "cond": {"type": "var", "name": "USE_GSSAPI"}
      , "then": [["@", "gssapi", "", "gssapi"]]
      }
    }
  }
, "git2_https":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["OS", "USE_SYSTEM_LIBS", "USE_HTTPS"]
  , "name": ["git2_http"]
  , "private-ldflags":
    { "type": "case*"
    , "expr": {"type": "var", "name": "USE_HTTPS"}
    , "case": [["WinHTTP", ["-lwinhttp"]]]
    , "default":
      { "type": "if"
      , "cond": {"type": "var", "name": "USE_SYSTEM_LIBS"}
      , "then":
        { "type": "case*"
        , "expr": {"type": "var", "name": "USE_HTTPS"}
        , "case":
          [ ["OpenSSL", ["-lssl"]]
          , ["mbedTLS", ["-lmbedtls"]]
          , [ "SecureTransport"
            , ["-framework", "CoreFoundation", "-framework", "Security"]
            ]
          ]
        }
      }
    }
  , "deps":
    { "type": "if"
    , "cond": {"type": "var", "name": "USE_SYSTEM_LIBS"}
    , "then": []
    , "else":
      { "type": "case*"
      , "expr": {"type": "var", "name": "USE_HTTPS"}
      , "case":
        [ ["OpenSSL", [["@", "ssl", "", "ssl"]]]
        , ["mbedTLS", [["@", "mbedtls", "", "ssl"]]]
        , ["SecureTransport", [["@", "secure_transport", "", "ssl"]]]
        ]
      }
    }
  }
, "repository.c":
  { "type": ["@", "rules", "patch", "file"]
  , "src": [["FILE", null, "repository.c"]]
  , "patch": [["@", "patches", "", "libgit2_v1.2.0_fix-fake-repo.patch"]]
  , "patch-part": ["a", "src", "repository.c"]
  }
, "remote.c":
  { "type": ["@", "rules", "patch", "file"]
  , "src": [["FILE", null, "remote.c"]]
  , "patch": [["@", "patches", "", "libgit2_v1.2.0_fix-proxy-settings.patch"]]
  , "patch-part": ["a", "src", "remote.c"]
  }
, "git2internal":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["OS", "ARCH", "TARGET_ARCH"]
  , "name": ["git2"]
  , "pure C": ["yes"]
  , "private-defines":
    { "type": "case"
    , "expr": {"type": "var", "name": "OS"}
    , "case":
      { "linux": ["HAVE_QSORT_R_GNU"]
      , "darwin": ["HAVE_QSORT_R_BSD"]
      , "bsd": ["HAVE_QSORT_R_BSD"]
      , "windows": ["HAVE_QSORT_S"]
      }
    }
  , "private-cflags":
    { "type": "case"
    , "expr":
      { "type": "var"
      , "name": "TARGET_ARCH"
      , "default": {"type": "var", "name": "ARCH"}
      }
    , "case": {"arm": ["-Wno-atomic-alignment"]}
    }
  , "srcs":
    [ "alloc.c"
    , "annotated_commit.c"
    , "apply.c"
    , "attr.c"
    , "attrcache.c"
    , "attr_file.c"
    , "blame.c"
    , "blame_git.c"
    , "blob.c"
    , "branch.c"
    , "buffer.c"
    , "cache.c"
    , "checkout.c"
    , "cherrypick.c"
    , "clone.c"
    , "commit.c"
    , "commit_graph.c"
    , "commit_list.c"
    , "config.c"
    , "config_cache.c"
    , "config_entries.c"
    , "config_file.c"
    , "config_mem.c"
    , "config_parse.c"
    , "config_snapshot.c"
    , "crlf.c"
    , "date.c"
    , "delta.c"
    , "describe.c"
    , "diff.c"
    , "diff_driver.c"
    , "diff_file.c"
    , "diff_generate.c"
    , "diff_parse.c"
    , "diff_print.c"
    , "diff_stats.c"
    , "diff_tform.c"
    , "diff_xdiff.c"
    , "errors.c"
    , "fetch.c"
    , "fetchhead.c"
    , "filebuf.c"
    , "filter.c"
    , "futils.c"
    , "graph.c"
    , "hash.c"
    , "hashsig.c"
    , "ident.c"
    , "idxmap.c"
    , "ignore.c"
    , "index.c"
    , "indexer.c"
    , "iterator.c"
    , "libgit2.c"
    , "mailmap.c"
    , "merge.c"
    , "merge_driver.c"
    , "merge_file.c"
    , "message.c"
    , "midx.c"
    , "mwindow.c"
    , "net.c"
    , "netops.c"
    , "notes.c"
    , "object_api.c"
    , "object.c"
    , "odb.c"
    , "odb_loose.c"
    , "odb_mempack.c"
    , "odb_pack.c"
    , "offmap.c"
    , "oidarray.c"
    , "oid.c"
    , "oidmap.c"
    , "pack.c"
    , "pack-objects.c"
    , "parse.c"
    , "patch.c"
    , "patch_generate.c"
    , "patch_parse.c"
    , "path.c"
    , "pathspec.c"
    , "pool.c"
    , "posix.c"
    , "pqueue.c"
    , "proxy.c"
    , "push.c"
    , "reader.c"
    , "rebase.c"
    , "refdb.c"
    , "refdb_fs.c"
    , "reflog.c"
    , "refs.c"
    , "refspec.c"
    , "regexp.c"
    , "remote.c"
    , "repository.c"
    , "reset.c"
    , "revert.c"
    , "revparse.c"
    , "revwalk.c"
    , "runtime.c"
    , "signature.c"
    , "sortedcache.c"
    , "stash.c"
    , "status.c"
    , "strarray.c"
    , "strmap.c"
    , "submodule.c"
    , "sysdir.c"
    , "tag.c"
    , "thread.c"
    , "threadstate.c"
    , "trace.c"
    , "trailer.c"
    , "transaction.c"
    , "transport.c"
    , "tree.c"
    , "tree-cache.c"
    , "tsort.c"
    , "utf8.c"
    , "util.c"
    , "varint.c"
    , "vector.c"
    , "wildmatch.c"
    , "worktree.c"
    , "zstream.c"
    , "allocators/failalloc.c"
    , "allocators/stdalloc.c"
    , "allocators/win32_leakcheck.c"
    , "streams/mbedtls.c"
    , "streams/openssl.c"
    , "streams/openssl_dynamic.c"
    , "streams/openssl_legacy.c"
    , "streams/registry.c"
    , "streams/socket.c"
    , "streams/stransport.c"
    , "streams/tls.c"
    , "transports/auth.c"
    , "transports/auth_negotiate.c"
    , "transports/auth_ntlm.c"
    , "transports/credential.c"
    , "transports/credential_helpers.c"
    , "transports/git.c"
    , "transports/http.c"
    , "transports/httpclient.c"
    , "transports/local.c"
    , "transports/smart.c"
    , "transports/smart_pkt.c"
    , "transports/smart_protocol.c"
    , "transports/ssh.c"
    , "transports/winhttp.c"
    , "xdiff/xdiffi.c"
    , "xdiff/xemit.c"
    , "xdiff/xhistogram.c"
    , "xdiff/xmerge.c"
    , "xdiff/xpatience.c"
    , "xdiff/xprepare.c"
    , "xdiff/xutils.c"
    ]
  , "hdrs": [["include", "git2_public_headers"]]
  , "private-hdrs": ["git2_private_headers"]
  , "deps":
    [ "git2_os"
    , "git2_hash"
    , "git2_regex"
    , "git2_compress"
    , "git2_ssh"
    , "git2_http_parser"
    , "git2_gssapi"
    , "git2_https"
    ]
  }
}
