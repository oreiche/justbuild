{ "well_known_protos":
  { "type": "install"
  , "deps":
    ["compiler/plugin.proto", "descriptor.proto", "well_known_type_protos"]
  }
, "well_known_type_protos":
  { "type": "install"
  , "deps":
    [ "any.proto"
    , "api.proto"
    , "duration.proto"
    , "empty.proto"
    , "field_mask.proto"
    , "source_context.proto"
    , "struct.proto"
    , "timestamp.proto"
    , "type.proto"
    , "wrappers.proto"
    ]
  }
, "protobuf_headers":
  { "type": ["@", "rules", "data", "staged"]
  , "srcs":
    [ "well_known_protos"
    , "any.h"
    , "any.pb.h"
    , "api.pb.h"
    , "arena.h"
    , "arenastring.h"
    , "arenaz_sampler.h"
    , "arena_align.h"
    , "arena_allocation_policy.h"
    , "arena_cleanup.h"
    , "arena_test_util.h"
    , "compiler/allowlists/allowlist.h"
    , "compiler/allowlists/allowlists.h"
    , "compiler/annotation_test_util.h"
    , "compiler/code_generator.h"
    , "compiler/command_line_interface.h"
    , "compiler/command_line_interface_tester.h"
    , "compiler/cpp/cpp_generator.h"
    , "compiler/cpp/enum.h"
    , "compiler/cpp/extension.h"
    , "compiler/cpp/field.h"
    , "compiler/cpp/field_generators/generators.h"
    , "compiler/cpp/file.h"
    , "compiler/cpp/generator.h"
    , "compiler/cpp/helpers.h"
    , "compiler/cpp/message.h"
    , "compiler/cpp/message_layout_helper.h"
    , "compiler/cpp/names.h"
    , "compiler/cpp/options.h"
    , "compiler/cpp/padding_optimizer.h"
    , "compiler/cpp/parse_function_generator.h"
    , "compiler/cpp/service.h"
    , "compiler/cpp/tracker.h"
    , "compiler/cpp/unittest.h"
    , "compiler/cpp/unittest.inc"
    , "compiler/csharp/csharp_doc_comment.h"
    , "compiler/csharp/csharp_enum.h"
    , "compiler/csharp/csharp_enum_field.h"
    , "compiler/csharp/csharp_field_base.h"
    , "compiler/csharp/csharp_generator.h"
    , "compiler/csharp/csharp_helpers.h"
    , "compiler/csharp/csharp_map_field.h"
    , "compiler/csharp/csharp_message.h"
    , "compiler/csharp/csharp_message_field.h"
    , "compiler/csharp/csharp_options.h"
    , "compiler/csharp/csharp_primitive_field.h"
    , "compiler/csharp/csharp_reflection_class.h"
    , "compiler/csharp/csharp_repeated_enum_field.h"
    , "compiler/csharp/csharp_repeated_message_field.h"
    , "compiler/csharp/csharp_repeated_primitive_field.h"
    , "compiler/csharp/csharp_source_generator_base.h"
    , "compiler/csharp/csharp_wrapper_field.h"
    , "compiler/csharp/names.h"
    , "compiler/importer.h"
    , "compiler/java/context.h"
    , "compiler/java/doc_comment.h"
    , "compiler/java/enum.h"
    , "compiler/java/enum_field.h"
    , "compiler/java/enum_field_lite.h"
    , "compiler/java/enum_lite.h"
    , "compiler/java/extension.h"
    , "compiler/java/extension_lite.h"
    , "compiler/java/field.h"
    , "compiler/java/file.h"
    , "compiler/java/generator.h"
    , "compiler/java/generator_factory.h"
    , "compiler/java/helpers.h"
    , "compiler/java/java_features.pb.h"
    , "compiler/java/java_generator.h"
    , "compiler/java/kotlin_generator.h"
    , "compiler/java/map_field.h"
    , "compiler/java/map_field_lite.h"
    , "compiler/java/message.h"
    , "compiler/java/message_builder.h"
    , "compiler/java/message_builder_lite.h"
    , "compiler/java/message_field.h"
    , "compiler/java/message_field_lite.h"
    , "compiler/java/message_lite.h"
    , "compiler/java/message_serialization.h"
    , "compiler/java/names.h"
    , "compiler/java/name_resolver.h"
    , "compiler/java/options.h"
    , "compiler/java/primitive_field.h"
    , "compiler/java/primitive_field_lite.h"
    , "compiler/java/service.h"
    , "compiler/java/shared_code_generator.h"
    , "compiler/java/string_field.h"
    , "compiler/java/string_field_lite.h"
    , "compiler/mock_code_generator.h"
    , "compiler/objectivec/enum.h"
    , "compiler/objectivec/enum_field.h"
    , "compiler/objectivec/extension.h"
    , "compiler/objectivec/field.h"
    , "compiler/objectivec/file.h"
    , "compiler/objectivec/generator.h"
    , "compiler/objectivec/helpers.h"
    , "compiler/objectivec/import_writer.h"
    , "compiler/objectivec/line_consumer.h"
    , "compiler/objectivec/map_field.h"
    , "compiler/objectivec/message.h"
    , "compiler/objectivec/message_field.h"
    , "compiler/objectivec/names.h"
    , "compiler/objectivec/nsobject_methods.h"
    , "compiler/objectivec/oneof.h"
    , "compiler/objectivec/options.h"
    , "compiler/objectivec/primitive_field.h"
    , "compiler/objectivec/text_format_decode_data.h"
    , "compiler/package_info.h"
    , "compiler/parser.h"
    , "compiler/php/names.h"
    , "compiler/php/php_generator.h"
    , "compiler/plugin.h"
    , "compiler/plugin.pb.h"
    , "compiler/python/generator.h"
    , "compiler/python/helpers.h"
    , "compiler/python/pyi_generator.h"
    , "compiler/python/python_generator.h"
    , "compiler/retention.h"
    , "compiler/ruby/ruby_generator.h"
    , "compiler/rust/accessors/accessors.h"
    , "compiler/rust/accessors/accessor_generator.h"
    , "compiler/rust/context.h"
    , "compiler/rust/generator.h"
    , "compiler/rust/message.h"
    , "compiler/rust/naming.h"
    , "compiler/rust/oneof.h"
    , "compiler/rust/relative_path.h"
    , "compiler/scc.h"
    , "compiler/subprocess.h"
    , "compiler/versions.h"
    , "compiler/versions_suffix.h"
    , "compiler/zip_writer.h"
    , "cpp_edition_defaults.h"
    , "cpp_features.pb.h"
    , "descriptor.h"
    , "descriptor.pb.h"
    , "descriptor_database.h"
    , "descriptor_legacy.h"
    , "descriptor_visitor.h"
    , "duration.pb.h"
    , "dynamic_message.h"
    , "empty.pb.h"
    , "endian.h"
    , "explicitly_constructed.h"
    , "extension_set.h"
    , "extension_set_inl.h"
    , "feature_resolver.h"
    , "field_access_listener.h"
    , "field_mask.pb.h"
    , "generated_enum_reflection.h"
    , "generated_enum_util.h"
    , "generated_message_bases.h"
    , "generated_message_reflection.h"
    , "generated_message_tctable_decl.h"
    , "generated_message_tctable_gen.h"
    , "generated_message_tctable_impl.h"
    , "generated_message_util.h"
    , "has_bits.h"
    , "implicit_weak_message.h"
    , "inlined_string_field.h"
    , "internal_message_util.h"
    , "internal_visibility.h"
    , "internal_visibility_for_testing.h"
    , "io/coded_stream.h"
    , "io/gzip_stream.h"
    , "io/io_win32.h"
    , "io/package_info.h"
    , "io/printer.h"
    , "io/strtod.h"
    , "io/test_zero_copy_stream.h"
    , "io/tokenizer.h"
    , "io/zero_copy_sink.h"
    , "io/zero_copy_stream.h"
    , "io/zero_copy_stream_impl.h"
    , "io/zero_copy_stream_impl_lite.h"
    , "json/internal/descriptor_traits.h"
    , "json/internal/lexer.h"
    , "json/internal/message_path.h"
    , "json/internal/parser.h"
    , "json/internal/parser_traits.h"
    , "json/internal/unparser.h"
    , "json/internal/unparser_traits.h"
    , "json/internal/untyped_message.h"
    , "json/internal/writer.h"
    , "json/internal/zero_copy_buffered_stream.h"
    , "json/json.h"
    , "map.h"
    , "map_entry.h"
    , "map_field.h"
    , "map_field_inl.h"
    , "map_field_lite.h"
    , "map_lite_test_util.h"
    , "map_test.inc"
    , "map_test_util.h"
    , "map_test_util.inc"
    , "map_test_util_impl.h"
    , "map_type_handler.h"
    , "message.h"
    , "message_lite.h"
    , "message_unittest.inc"
    , "metadata.h"
    , "metadata_lite.h"
    , "package_info.h"
    , "parse_context.h"
    , "port.h"
    , "port_def.inc"
    , "port_undef.inc"
    , "proto3_lite_unittest.inc"
    , "raw_ptr.h"
    , "reflection.h"
    , "reflection_internal.h"
    , "reflection_mode.h"
    , "reflection_ops.h"
    , "reflection_tester.h"
    , "repeated_field.h"
    , "repeated_ptr_field.h"
    , "serial_arena.h"
    , "service.h"
    , "source_context.pb.h"
    , "string_block.h"
    , "string_member_robber.h"
    , "struct.pb.h"
    , "stubs/callback.h"
    , "stubs/common.h"
    , "stubs/platform_macros.h"
    , "stubs/port.h"
    , "stubs/status_macros.h"
    , "testing/file.h"
    , "testing/googletest.h"
    , "test_textproto.h"
    , "test_util.h"
    , "test_util.inc"
    , "test_util2.h"
    , "test_util_lite.h"
    , "text_format.h"
    , "thread_safe_arena.h"
    , "timestamp.pb.h"
    , "type.pb.h"
    , "unknown_field_set.h"
    , "util/delimited_message_util.h"
    , "util/field_comparator.h"
    , "util/field_mask_util.h"
    , "util/json_util.h"
    , "util/message_differencer.h"
    , "util/package_info.h"
    , "util/time_util.h"
    , "util/type_resolver.h"
    , "util/type_resolver_util.h"
    , "varint_shuffle.h"
    , "wire_format.h"
    , "wire_format_lite.h"
    , "wire_format_unittest.inc"
    , "wrappers.pb.h"
    ]
  , "stage": ["google", "protobuf"]
  }
, "libprotobuf_lite":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["TOOLCHAIN_CONFIG"]
  , "name": ["protobuf-lite"]
  , "cflags":
    { "type": "case"
    , "expr":
      { "type": "lookup"
      , "map":
        { "type": "var"
        , "name": "TOOLCHAIN_CONFIG"
        , "default": {"type": "empty_map"}
        }
      , "key": "FAMILY"
      , "default": "unknown"
      }
    , "case":
      { "gnu":
        [ "-Wno-sign-compare"
        , "-Wno-sign-conversion"
        , "-Wno-unused-function"
        , "-Wno-deprecated-declarations"
        ]
      }
    , "default":
      [ "-Wno-sign-compare"
      , "-Wno-sign-conversion"
      , "-Wno-unused-function"
      , "-Wno-zero-length-array"
      , "-Wno-deprecated-declarations"
      , "-Wno-invalid-noreturn"
      ]
    }
  , "hdrs": ["protobuf_headers"]
  , "srcs":
    [ "any_lite.cc"
    , "arena.cc"
    , "arena_align.cc"
    , "arenastring.cc"
    , "arenaz_sampler.cc"
    , "extension_set.cc"
    , "generated_enum_util.cc"
    , "generated_message_tctable_lite.cc"
    , "generated_message_util.cc"
    , "implicit_weak_message.cc"
    , "inlined_string_field.cc"
    , "io/coded_stream.cc"
    , "io/io_win32.cc"
    , "io/zero_copy_stream.cc"
    , "io/zero_copy_stream_impl.cc"
    , "io/zero_copy_stream_impl_lite.cc"
    , "map.cc"
    , "message_lite.cc"
    , "parse_context.cc"
    , "port.cc"
    , "raw_ptr.cc"
    , "repeated_field.cc"
    , "repeated_ptr_field.cc"
    , "stubs/common.cc"
    , "wire_format_lite.cc"
    ]
  , "deps":
    [ ["@", "absl", "absl/base", "base"]
    , ["@", "absl", "absl/container", "btree"]
    , ["@", "absl", "absl/container", "flat_hash_set"]
    , ["@", "absl", "absl/hash", "hash"]
    , ["@", "absl", "absl/log", "absl_check"]
    , ["@", "absl", "absl/log", "absl_log"]
    , ["@", "absl", "absl/meta", "type_traits"]
    , ["@", "absl", "absl/numeric", "bits"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/strings", "internal"]
    , ["@", "absl", "absl/synchronization", "synchronization"]
    , ["@", "absl", "absl/time", "time"]
    , ["third_party/utf8_range", "utf8_validity"]
    ]
  }
, "libprotobuf":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["protobuf"]
  , "hdrs": ["protobuf_headers"]
  , "srcs":
    [ "any.pb.cc"
    , "api.pb.cc"
    , "duration.pb.cc"
    , "empty.pb.cc"
    , "field_mask.pb.cc"
    , "source_context.pb.cc"
    , "struct.pb.cc"
    , "timestamp.pb.cc"
    , "type.pb.cc"
    , "wrappers.pb.cc"
    , "any.cc"
    , "any_lite.cc"
    , "arena.cc"
    , "arena_align.cc"
    , "arenastring.cc"
    , "arenaz_sampler.cc"
    , "compiler/importer.cc"
    , "compiler/parser.cc"
    , "cpp_features.pb.cc"
    , "descriptor.cc"
    , "descriptor.pb.cc"
    , "descriptor_database.cc"
    , "dynamic_message.cc"
    , "extension_set.cc"
    , "extension_set_heavy.cc"
    , "feature_resolver.cc"
    , "generated_enum_util.cc"
    , "generated_message_bases.cc"
    , "generated_message_reflection.cc"
    , "generated_message_tctable_full.cc"
    , "generated_message_tctable_gen.cc"
    , "generated_message_tctable_lite.cc"
    , "generated_message_util.cc"
    , "implicit_weak_message.cc"
    , "inlined_string_field.cc"
    , "internal_message_util.cc"
    , "io/coded_stream.cc"
    , "io/gzip_stream.cc"
    , "io/io_win32.cc"
    , "io/printer.cc"
    , "io/strtod.cc"
    , "io/tokenizer.cc"
    , "io/zero_copy_sink.cc"
    , "io/zero_copy_stream.cc"
    , "io/zero_copy_stream_impl.cc"
    , "io/zero_copy_stream_impl_lite.cc"
    , "json/internal/lexer.cc"
    , "json/internal/message_path.cc"
    , "json/internal/parser.cc"
    , "json/internal/unparser.cc"
    , "json/internal/untyped_message.cc"
    , "json/internal/writer.cc"
    , "json/internal/zero_copy_buffered_stream.cc"
    , "json/json.cc"
    , "map.cc"
    , "map_field.cc"
    , "message.cc"
    , "message_lite.cc"
    , "parse_context.cc"
    , "port.cc"
    , "raw_ptr.cc"
    , "reflection_mode.cc"
    , "reflection_ops.cc"
    , "repeated_field.cc"
    , "repeated_ptr_field.cc"
    , "service.cc"
    , "stubs/common.cc"
    , "text_format.cc"
    , "unknown_field_set.cc"
    , "util/delimited_message_util.cc"
    , "util/field_comparator.cc"
    , "util/field_mask_util.cc"
    , "util/message_differencer.cc"
    , "util/time_util.cc"
    , "util/type_resolver_util.cc"
    , "wire_format.cc"
    , "wire_format_lite.cc"
    ]
  , "deps":
    [ ["", "libprotobuf_lite"]
    , ["@", "absl", "absl/base", "base"]
    , ["@", "absl", "absl/base", "dynamic_annotations"]
    , ["@", "absl", "absl/container", "btree"]
    , ["@", "absl", "absl/container", "flat_hash_map"]
    , ["@", "absl", "absl/container", "flat_hash_set"]
    , ["@", "absl", "absl/hash", "hash"]
    , ["@", "absl", "absl/log", "absl_check"]
    , ["@", "absl", "absl/log", "absl_log"]
    , ["@", "absl", "absl/log", "die_if_null"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "internal"]
    , ["@", "absl", "absl/synchronization", "synchronization"]
    , ["@", "absl", "absl/time", "time"]
    , ["third_party/utf8_range", "utf8_validity"]
    , ["@", "zlib", "", "zlib"]
    ]
  }
, "libprotoc":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["libprotoc"]
  , "srcs":
    [ "compiler/main.cc"
    , "compiler/allowlists/editions.cc"
    , "compiler/allowlists/empty_package.cc"
    , "compiler/allowlists/open_enum.cc"
    , "compiler/allowlists/unused_imports.cc"
    , "compiler/allowlists/weak_imports.cc"
    , "compiler/code_generator.cc"
    , "compiler/command_line_interface.cc"
    , "compiler/cpp/enum.cc"
    , "compiler/cpp/extension.cc"
    , "compiler/cpp/field.cc"
    , "compiler/cpp/field_generators/cord_field.cc"
    , "compiler/cpp/field_generators/enum_field.cc"
    , "compiler/cpp/field_generators/map_field.cc"
    , "compiler/cpp/field_generators/message_field.cc"
    , "compiler/cpp/field_generators/primitive_field.cc"
    , "compiler/cpp/field_generators/string_field.cc"
    , "compiler/cpp/file.cc"
    , "compiler/cpp/generator.cc"
    , "compiler/cpp/helpers.cc"
    , "compiler/cpp/message.cc"
    , "compiler/cpp/padding_optimizer.cc"
    , "compiler/cpp/parse_function_generator.cc"
    , "compiler/cpp/service.cc"
    , "compiler/cpp/tracker.cc"
    , "compiler/csharp/csharp_doc_comment.cc"
    , "compiler/csharp/csharp_enum.cc"
    , "compiler/csharp/csharp_enum_field.cc"
    , "compiler/csharp/csharp_field_base.cc"
    , "compiler/csharp/csharp_generator.cc"
    , "compiler/csharp/csharp_helpers.cc"
    , "compiler/csharp/csharp_map_field.cc"
    , "compiler/csharp/csharp_message.cc"
    , "compiler/csharp/csharp_message_field.cc"
    , "compiler/csharp/csharp_primitive_field.cc"
    , "compiler/csharp/csharp_reflection_class.cc"
    , "compiler/csharp/csharp_repeated_enum_field.cc"
    , "compiler/csharp/csharp_repeated_message_field.cc"
    , "compiler/csharp/csharp_repeated_primitive_field.cc"
    , "compiler/csharp/csharp_source_generator_base.cc"
    , "compiler/csharp/csharp_wrapper_field.cc"
    , "compiler/csharp/names.cc"
    , "compiler/java/context.cc"
    , "compiler/java/doc_comment.cc"
    , "compiler/java/enum.cc"
    , "compiler/java/enum_field.cc"
    , "compiler/java/enum_field_lite.cc"
    , "compiler/java/enum_lite.cc"
    , "compiler/java/extension.cc"
    , "compiler/java/extension_lite.cc"
    , "compiler/java/field.cc"
    , "compiler/java/file.cc"
    , "compiler/java/generator.cc"
    , "compiler/java/generator_factory.cc"
    , "compiler/java/helpers.cc"
    , "compiler/java/java_features.pb.cc"
    , "compiler/java/kotlin_generator.cc"
    , "compiler/java/map_field.cc"
    , "compiler/java/map_field_lite.cc"
    , "compiler/java/message.cc"
    , "compiler/java/message_builder.cc"
    , "compiler/java/message_builder_lite.cc"
    , "compiler/java/message_field.cc"
    , "compiler/java/message_field_lite.cc"
    , "compiler/java/message_lite.cc"
    , "compiler/java/message_serialization.cc"
    , "compiler/java/name_resolver.cc"
    , "compiler/java/names.cc"
    , "compiler/java/primitive_field.cc"
    , "compiler/java/primitive_field_lite.cc"
    , "compiler/java/service.cc"
    , "compiler/java/shared_code_generator.cc"
    , "compiler/java/string_field.cc"
    , "compiler/java/string_field_lite.cc"
    , "compiler/objectivec/enum.cc"
    , "compiler/objectivec/enum_field.cc"
    , "compiler/objectivec/extension.cc"
    , "compiler/objectivec/field.cc"
    , "compiler/objectivec/file.cc"
    , "compiler/objectivec/generator.cc"
    , "compiler/objectivec/helpers.cc"
    , "compiler/objectivec/import_writer.cc"
    , "compiler/objectivec/line_consumer.cc"
    , "compiler/objectivec/map_field.cc"
    , "compiler/objectivec/message.cc"
    , "compiler/objectivec/message_field.cc"
    , "compiler/objectivec/names.cc"
    , "compiler/objectivec/oneof.cc"
    , "compiler/objectivec/primitive_field.cc"
    , "compiler/objectivec/text_format_decode_data.cc"
    , "compiler/php/names.cc"
    , "compiler/php/php_generator.cc"
    , "compiler/plugin.cc"
    , "compiler/plugin.pb.cc"
    , "compiler/python/generator.cc"
    , "compiler/python/helpers.cc"
    , "compiler/python/pyi_generator.cc"
    , "compiler/retention.cc"
    , "compiler/ruby/ruby_generator.cc"
    , "compiler/rust/accessors/accessors.cc"
    , "compiler/rust/accessors/singular_message.cc"
    , "compiler/rust/accessors/singular_scalar.cc"
    , "compiler/rust/accessors/singular_string.cc"
    , "compiler/rust/accessors/unsupported_field.cc"
    , "compiler/rust/context.cc"
    , "compiler/rust/generator.cc"
    , "compiler/rust/message.cc"
    , "compiler/rust/naming.cc"
    , "compiler/rust/oneof.cc"
    , "compiler/rust/relative_path.cc"
    , "compiler/subprocess.cc"
    , "compiler/zip_writer.cc"
    ]
  , "deps": [["", "libprotobuf"], ["@", "absl", "absl/log", "initialize"]]
  }
, "protoc":
  { "type": ["@", "rules", "CC", "binary"]
  , "name": ["protoc"]
  , "private-deps": [["", "libprotoc"]]
  }
}
