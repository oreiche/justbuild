{ "base":
  { "type": "export"
  , "target": "base (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "base (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["OS", "TOOLCHAIN_CONFIG", "ARCH", "TARGET_ARCH"]
  , "name": ["base"]
  , "stage": ["absl", "base"]
  , "hdrs":
    [ "call_once.h"
    , "casts.h"
    , "internal/cycleclock.h"
    , "internal/cycleclock_config.h"
    , "internal/low_level_scheduling.h"
    , "internal/per_thread_tls.h"
    , "internal/spinlock.h"
    , "internal/sysinfo.h"
    , "internal/thread_identity.h"
    , "internal/tsan_mutex_interface.h"
    , "internal/unscaledcycleclock.h"
    , "internal/unscaledcycleclock_config.h"
    ]
  , "srcs":
    [ "internal/cycleclock.cc"
    , "internal/spinlock.cc"
    , "internal/sysinfo.cc"
    , "internal/thread_identity.cc"
    , "internal/unscaledcycleclock.cc"
    ]
  , "private-ldflags":
    { "type": "++"
    , "$1":
      [ ["-pthread", "-Wl,--whole-archive,-lpthread,--no-whole-archive"]
      , { "type": "case*"
        , "expr":
          { "type": "lookup"
          , "map":
            { "type": "var"
            , "name": "TOOLCHAIN_CONFIG"
            , "default": {"type": "empty_map"}
            }
          , "key": "FAMILY"
          }
        , "case": [["mingw", ["-ladvapi32"]]]
        }
      , { "type": "case"
        , "expr": {"type": "var", "name": "OS", "default": "linux"}
        , "case": {"linux": ["-lrt"]}
        }
      , { "type": "case"
        , "expr":
          { "type": "var"
          , "name": "TARGET_ARCH"
          , "default": {"type": "var", "name": "ARCH", "default": "unknown"}
          }
        , "case": {"arm": ["-latomic"], "unknown": ["-latomic"]}
        }
      ]
    }
  , "deps":
    [ "atomic_hook"
    , "base_internal"
    , "config"
    , "core_headers"
    , "cycleclock_internal"
    , "dynamic_annotations"
    , "log_severity"
    , "nullability"
    , "raw_logging_internal"
    , "spinlock_wait"
    , ["absl/meta", "type_traits"]
    ]
  }
, "atomic_hook":
  { "type": "export"
  , "target": "atomic_hook (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "atomic_hook (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["ARCH", "TARGET_ARCH"]
  , "name": ["atomic_hook"]
  , "stage": ["absl", "base"]
  , "hdrs": ["internal/atomic_hook.h"]
  , "private-ldflags":
    { "type": "case"
    , "expr":
      { "type": "var"
      , "name": "TARGET_ARCH"
      , "default": {"type": "var", "name": "ARCH", "default": "unknown"}
      }
    , "case": {"arm": ["-latomic"], "unknown": ["-latomic"]}
    }
  , "deps": ["config", "core_headers"]
  }
, "base_internal":
  { "type": "export"
  , "target": "base_internal (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "base_internal (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["base_internal"]
  , "stage": ["absl", "base"]
  , "hdrs":
    [ "internal/hide_ptr.h"
    , "internal/identity.h"
    , "internal/inline_variable.h"
    , "internal/invoke.h"
    , "internal/scheduling_mode.h"
    ]
  , "deps": ["config", ["absl/meta", "type_traits"]]
  }
, "config":
  { "type": "export"
  , "target": "config (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "config (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["config"]
  , "stage": ["absl", "base"]
  , "hdrs": ["config.h", "options.h", "policy_checks.h"]
  }
, "options.h":
  { "type": ["@", "rules", "patch", "file"]
  , "src": [["FILE", null, "options.h"]]
  , "patch": [["@", "patches", "", "options.h.diff"]]
  }
, "core_headers":
  { "type": "export"
  , "target": "core_headers (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "core_headers (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["core_headers"]
  , "stage": ["absl", "base"]
  , "hdrs":
    [ "attributes.h"
    , "const_init.h"
    , "macros.h"
    , "optimization.h"
    , "port.h"
    , "thread_annotations.h"
    ]
  , "deps": ["config"]
  }
, "cycleclock_internal":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["cycleclock_internal"]
  , "stage": ["absl", "base"]
  , "hdrs":
    ["internal/cycleclock_config.h", "internal/unscaledcycleclock_config.h"]
  , "deps": ["base_internal", "config"]
  }
, "dynamic_annotations":
  { "type": "export"
  , "target": "dynamic_annotations (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "dynamic_annotations (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["dynamic_annotations"]
  , "stage": ["absl", "base"]
  , "hdrs": ["dynamic_annotations.h", "internal/dynamic_annotations.h"]
  , "deps": ["config", "core_headers"]
  }
, "log_severity":
  { "type": "export"
  , "target": "log_severity (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "log_severity (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["log_severity"]
  , "stage": ["absl", "base"]
  , "hdrs": ["log_severity.h"]
  , "srcs": ["log_severity.cc"]
  , "deps": ["config", "core_headers"]
  }
, "no_destructor":
  { "type": "export"
  , "target": "no_destructor (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "no_destructor (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["no_destructor"]
  , "stage": ["absl", "base"]
  , "hdrs": ["no_destructor.h"]
  , "deps": ["config", "nullability"]
  }
, "nullability":
  { "type": "export"
  , "target": "nullability (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "nullability (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["nullability"]
  , "stage": ["absl", "base"]
  , "hdrs": ["nullability.h", "internal/nullability_impl.h"]
  , "deps": ["config", "core_headers", ["absl/meta", "type_traits"]]
  }
, "raw_logging_internal":
  { "type": "export"
  , "target": "raw_logging_internal (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "raw_logging_internal (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["ARCH", "TARGET_ARCH"]
  , "name": ["raw_logging_internal"]
  , "stage": ["absl", "base"]
  , "hdrs": ["internal/raw_logging.h"]
  , "srcs": ["internal/raw_logging.cc"]
  , "private-ldflags":
    { "type": "case"
    , "expr":
      { "type": "var"
      , "name": "TARGET_ARCH"
      , "default": {"type": "var", "name": "ARCH", "default": "unknown"}
      }
    , "case": {"arm": ["-latomic"], "unknown": ["-latomic"]}
    }
  , "deps":
    ["atomic_hook", "config", "core_headers", "errno_saver", "log_severity"]
  }
, "spinlock_wait":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["spinlock_wait"]
  , "stage": ["absl", "base"]
  , "hdrs": ["internal/spinlock_wait.h"]
  , "srcs": ["internal/spinlock_wait.cc"]
  , "private-hdrs":
    [ "internal/spinlock_akaros.inc"
    , "internal/spinlock_linux.inc"
    , "internal/spinlock_posix.inc"
    , "internal/spinlock_win32.inc"
    ]
  , "deps": ["base_internal", "core_headers", "errno_saver"]
  }
, "errno_saver":
  { "type": "export"
  , "target": "errno_saver (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "errno_saver (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["errno_saver"]
  , "stage": ["absl", "base"]
  , "hdrs": ["internal/errno_saver.h"]
  , "deps": ["config"]
  }
, "endian":
  { "type": "export"
  , "target": "endian (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "endian (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["endian"]
  , "stage": ["absl", "base"]
  , "hdrs": ["internal/endian.h", "internal/unaligned_access.h"]
  , "deps": ["base", "config", "core_headers", "nullability"]
  }
, "fast_type_id":
  { "type": "export"
  , "target": "fast_type_id (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "fast_type_id (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["fast_type_id"]
  , "stage": ["absl", "base"]
  , "hdrs": ["internal/fast_type_id.h"]
  , "deps": ["config"]
  }
, "strerror":
  { "type": "export"
  , "target": "strerror (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "strerror (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["strerror"]
  , "stage": ["absl", "base"]
  , "hdrs": ["internal/strerror.h"]
  , "srcs": ["internal/strerror.cc"]
  , "deps": ["config", "core_headers", "errno_saver"]
  }
, "throw_delegate":
  { "type": "export"
  , "target": "throw_delegate (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "throw_delegate (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["throw_delegate"]
  , "stage": ["absl", "base"]
  , "hdrs": ["internal/throw_delegate.h"]
  , "srcs": ["internal/throw_delegate.cc"]
  , "deps": ["config", "raw_logging_internal"]
  }
, "malloc_internal":
  { "type": "export"
  , "target": "malloc_internal (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "PATCH"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "malloc_internal (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["ARCH", "TARGET_ARCH"]
  , "name": ["malloc_internal"]
  , "stage": ["absl", "base"]
  , "hdrs": ["internal/direct_mmap.h", "internal/low_level_alloc.h"]
  , "srcs": ["internal/low_level_alloc.cc"]
  , "private-ldflags":
    { "type": "++"
    , "$1":
      [ ["-pthread", "-Wl,--whole-archive,-lpthread,--no-whole-archive"]
      , { "type": "case"
        , "expr":
          { "type": "var"
          , "name": "TARGET_ARCH"
          , "default": {"type": "var", "name": "ARCH", "default": "unknown"}
          }
        , "case": {"arm": ["-latomic"], "unknown": ["-latomic"]}
        }
      ]
    }
  , "deps":
    [ "base"
    , "base_internal"
    , "config"
    , "core_headers"
    , "dynamic_annotations"
    , "raw_logging_internal"
    ]
  }
, "prefetch":
  { "type": "export"
  , "target": "prefetch (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "prefetch (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["prefetch"]
  , "stage": ["absl", "base"]
  , "hdrs": ["prefetch.h"]
  , "deps": ["config", "core_headers"]
  }
, "poison":
  { "type": "export"
  , "target": "poison (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "poison (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["poison"]
  , "stage": ["absl", "base"]
  , "srcs": ["internal/poison.cc"]
  , "hdrs": ["internal/poison.h"]
  , "deps": ["config", "core_headers", "malloc_internal"]
  }
}
