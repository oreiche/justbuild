{ "symbolize":
  { "type": "export"
  , "target": "symbolize (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "symbolize (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["TOOLCHAIN_CONFIG", "ARCH", "TARGET_ARCH"]
  , "name": ["symbolize"]
  , "stage": ["absl", "debugging"]
  , "hdrs": ["internal/symbolize.h", "symbolize.h"]
  , "srcs": ["symbolize.cc"]
  , "private-hdrs":
    [ "symbolize_darwin.inc"
    , "symbolize_elf.inc"
    , "symbolize_emscripten.inc"
    , "symbolize_unimplemented.inc"
    , "symbolize_win32.inc"
    ]
  , "private-ldflags":
    { "type": "++"
    , "$1":
      [ { "type": "case*"
        , "expr":
          { "type": "lookup"
          , "map":
            { "type": "var"
            , "name": "TOOLCHAIN_CONFIG"
            , "default": {"type": "empty_map"}
            }
          , "key": "FAMILY"
          }
        , "case": [["mingw", ["-ladvapi32"]]]
        }
      , { "type": "case"
        , "expr":
          { "type": "var"
          , "name": "TARGET_ARCH"
          , "default": {"type": "var", "name": "ARCH", "default": "unknown"}
          }
        , "case": {"arm": ["-latomic"], "unknown": ["-latomic"]}
        }
      ]
    }
  , "deps":
    [ "debugging_internal"
    , "demangle_internal"
    , ["absl/base", "base"]
    , ["absl/base", "config"]
    , ["absl/base", "core_headers"]
    , ["absl/base", "dynamic_annotations"]
    , ["absl/base", "malloc_internal"]
    , ["absl/base", "raw_logging_internal"]
    , ["absl/strings", "strings"]
    ]
  }
, "examine_stack":
  { "type": "export"
  , "target": "examine_stack (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "examine_stack (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["log_message"]
  , "stage": ["absl", "debugging"]
  , "srcs": ["internal/examine_stack.cc"]
  , "hdrs": ["internal/examine_stack.h"]
  , "deps":
    [ "stacktrace"
    , "symbolize"
    , ["absl/base", "config"]
    , ["absl/base", "core_headers"]
    , ["absl/base", "raw_logging_internal"]
    ]
  }
, "stacktrace":
  { "type": "export"
  , "target": "stacktrace (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "stacktrace (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["stacktrace"]
  , "stage": ["absl", "debugging"]
  , "hdrs": ["stacktrace.h", "internal/stacktrace_x86-inl.inc"]
  , "srcs": ["stacktrace.cc"]
  , "private-hdrs":
    [ "internal/stacktrace_config.h"
    , "internal/stacktrace_aarch64-inl.inc"
    , "internal/stacktrace_arm-inl.inc"
    , "internal/stacktrace_emscripten-inl.inc"
    , "internal/stacktrace_generic-inl.inc"
    , "internal/stacktrace_powerpc-inl.inc"
    , "internal/stacktrace_riscv-inl.inc"
    , "internal/stacktrace_unimplemented-inl.inc"
    , "internal/stacktrace_win32-inl.inc"
    ]
  , "deps":
    [ "debugging_internal"
    , ["absl/base", "config"]
    , ["absl/base", "core_headers"]
    , ["absl/base", "dynamic_annotations"]
    , ["absl/base", "raw_logging_internal"]
    ]
  }
, "debugging_internal":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["debugging_internal"]
  , "stage": ["absl", "debugging"]
  , "hdrs":
    [ "internal/address_is_readable.h"
    , "internal/elf_mem_image.h"
    , "internal/vdso_support.h"
    ]
  , "srcs":
    [ "internal/address_is_readable.cc"
    , "internal/elf_mem_image.cc"
    , "internal/vdso_support.cc"
    ]
  , "deps":
    [ ["absl/base", "config"]
    , ["absl/base", "core_headers"]
    , ["absl/base", "dynamic_annotations"]
    , ["absl/base", "errno_saver"]
    , ["absl/base", "raw_logging_internal"]
    ]
  }
, "demangle_internal":
  { "type": "export"
  , "target": "demangle_internal (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "demangle_internal (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["demangle_internal"]
  , "stage": ["absl", "debugging"]
  , "hdrs": ["internal/demangle.h"]
  , "srcs": ["internal/demangle.cc"]
  , "deps":
    [ "demangle_rust"
    , ["absl/base", "base"]
    , ["absl/base", "config"]
    , ["absl/base", "core_headers"]
    , ["absl/base", "nullability"]
    , ["absl/numeric", "bits"]
    ]
  }
, "bounded_utf8_length_sequence":
  { "type": "export"
  , "target": "bounded_utf8_length_sequence (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "bounded_utf8_length_sequence (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["bounded_utf8_length_sequence"]
  , "stage": ["absl", "debugging"]
  , "hdrs": ["internal/bounded_utf8_length_sequence.h"]
  , "deps": [["absl/base", "config"], ["absl/numeric", "bits"]]
  }
, "decode_rust_punycode":
  { "type": "export"
  , "target": "decode_rust_punycode (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "decode_rust_punycode (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["decode_rust_punycode"]
  , "stage": ["absl", "debugging"]
  , "hdrs": ["internal/decode_rust_punycode.h"]
  , "srcs": ["internal/decode_rust_punycode.cc"]
  , "deps":
    [ "bounded_utf8_length_sequence"
    , "utf8_for_code_point"
    , ["absl/base", "config"]
    , ["absl/base", "nullability"]
    ]
  }
, "demangle_rust":
  { "type": "export"
  , "target": "demangle_rust (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "demangle_rust (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["demangle_rust"]
  , "stage": ["absl", "debugging"]
  , "hdrs": ["internal/demangle_rust.h"]
  , "srcs": ["internal/demangle_rust.cc"]
  , "deps":
    [ "decode_rust_punycode"
    , ["absl/base", "config"]
    , ["absl/base", "core_headers"]
    ]
  }
, "utf8_for_code_point":
  { "type": "export"
  , "target": "utf8_for_code_point (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "utf8_for_code_point (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["utf8_for_code_point"]
  , "stage": ["absl", "debugging"]
  , "hdrs": ["internal/utf8_for_code_point.h"]
  , "srcs": ["internal/utf8_for_code_point.cc"]
  , "deps": [["absl/base", "config"]]
  }
}
