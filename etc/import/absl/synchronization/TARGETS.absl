{ "synchronization":
  { "type": "export"
  , "target": "synchronization (unexported)"
  , "flexible_config":
    [ "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ARCH"
    , "CC"
    , "CFLAGS"
    , "CXX"
    , "CXXFLAGS"
    , "DEBUG"
    , "ENV"
    , "HOST_ARCH"
    , "OS"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    ]
  }
, "synchronization (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "arguments_config": ["ARCH", "TARGET_ARCH"]
  , "name": ["synchronization"]
  , "stage": ["absl", "synchronization"]
  , "hdrs":
    [ "barrier.h"
    , "blocking_counter.h"
    , "internal/create_thread_identity.h"
    , "internal/futex.h"
    , "internal/futex_waiter.h"
    , "internal/per_thread_sem.h"
    , "internal/pthread_waiter.h"
    , "internal/sem_waiter.h"
    , "internal/stdcpp_waiter.h"
    , "internal/waiter.h"
    , "internal/waiter_base.h"
    , "internal/win32_waiter.h"
    , "mutex.h"
    , "notification.h"
    ]
  , "srcs":
    [ "barrier.cc"
    , "blocking_counter.cc"
    , "internal/create_thread_identity.cc"
    , "internal/futex_waiter.cc"
    , "internal/per_thread_sem.cc"
    , "internal/pthread_waiter.cc"
    , "internal/sem_waiter.cc"
    , "internal/stdcpp_waiter.cc"
    , "internal/waiter_base.cc"
    , "internal/win32_waiter.cc"
    , "mutex.cc"
    , "notification.cc"
    ]
  , "private-ldflags":
    { "type": "++"
    , "$1":
      [ ["-pthread", "-Wl,--whole-archive,-lpthread,--no-whole-archive"]
      , { "type": "case"
        , "expr":
          { "type": "var"
          , "name": "TARGET_ARCH"
          , "default": {"type": "var", "name": "ARCH", "default": "unknown"}
          }
        , "case": {"arm": ["-latomic"], "unknown": ["-latomic"]}
        }
      ]
    }
  , "deps":
    [ "graphcycles_internal"
    , "kernel_timeout_internal"
    , ["absl/base", "base"]
    , ["absl/base", "atomic_hook"]
    , ["absl/base", "base_internal"]
    , ["absl/base", "config"]
    , ["absl/base", "core_headers"]
    , ["absl/base", "dynamic_annotations"]
    , ["absl/base", "malloc_internal"]
    , ["absl/base", "raw_logging_internal"]
    , ["absl/debugging", "stacktrace"]
    , ["absl/debugging", "symbolize"]
    , ["absl/time", "time"]
    ]
  }
, "graphcycles_internal":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["graphcycles_internal"]
  , "stage": ["absl", "synchronization"]
  , "hdrs": ["internal/graphcycles.h"]
  , "srcs": ["internal/graphcycles.cc"]
  , "deps":
    [ ["absl/base", "base"]
    , ["absl/base", "base_internal"]
    , ["absl/base", "config"]
    , ["absl/base", "core_headers"]
    , ["absl/base", "malloc_internal"]
    , ["absl/base", "raw_logging_internal"]
    ]
  }
, "kernel_timeout_internal":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["kernel_timeout_internal"]
  , "stage": ["absl", "synchronization"]
  , "srcs": ["internal/kernel_timeout.cc"]
  , "hdrs": ["internal/kernel_timeout.h"]
  , "deps":
    [ ["absl/base", "base"]
    , ["absl/base", "config"]
    , ["absl/base", "core_headers"]
    , ["absl/base", "raw_logging_internal"]
    , ["absl/time", "time"]
    ]
  }
}
