{ "sys/features.h":
  { "type": "configure"
  , "arguments_config":
    [ "OS"
    , "ARCH"
    , "TARGET_ARCH"
    , "DEBUG_POOL"
    , "ENABLE_TRACE"
    , "THREADSAFE"
    , "REGEX_BACKEND"
    , "USE_ICONV"
    , "USE_NSEC"
    , "USE_SSH"
    , "USE_NTLMCLIENT"
    , "USE_GSSAPI"
    , "USE_SHA1"
    , "USE_HTTPS"
    ]
  , "target": "feature_header"
  , "config":
    { "type": "let*"
    , "bindings":
      [ [ "TARGET_ARCH"
        , { "type": "var"
          , "name": "TARGET_ARCH"
          , "default": {"type": "var", "name": "ARCH"}
          }
        ]
      , [ "IS_BSD"
        , { "type": "case"
          , "expr": {"type": "var", "name": "OS"}
          , "case": {"darwin": true, "bsd": true}
          }
        ]
      , [ "IS_32BIT"
        , { "type": "case"
          , "expr":
            { "type": "var"
            , "name": "TARGET_ARCH"
            , "default": {"type": "var", "name": "ARCH"}
            }
          , "case": {"x86": true, "arm": true}
          }
        ]
      , [ "defines1"
        , { "type": "++"
          , "$1":
            [ [ ["GIT_DEBUG_POOL", {"type": "var", "name": "DEBUG_POOL"}]
              , ["GIT_TRACE", {"type": "var", "name": "ENABLE_TRACE"}]
              , ["GIT_THREADS", {"type": "var", "name": "THREADSAFE"}]
              , { "type": "if"
                , "cond": {"type": "var", "name": "IS_32BIT"}
                , "then": ["GIT_ARCH_32", 1]
                , "else": ["GIT_ARCH_64", 1]
                }
              , ["GIT_USE_ICONV", {"type": "var", "name": "USE_ICONV"}]
              , ["GIT_SSH", {"type": "var", "name": "USE_SSH"}]
              , [ "GIT_SSH_MEMORY_CREDENTIALS"
                , {"type": "var", "name": "USE_SSH"}
                ]
              , ["GIT_NTLM", {"type": "var", "name": "USE_NTLMCLIENT"}]
              ]
            , { "type": "if"
              , "cond": {"type": "var", "name": "USE_NSEC"}
              , "then":
                [ ["GIT_USE_NSEC", 1]
                , ["GIT_USE_FUTIMENS", 1]
                , ["GIT_USE_STAT_MTIME_NSEC", 1]
                , { "type": "if"
                  , "cond": {"type": "var", "name": "IS_BSD"}
                  , "then": ["GIT_USE_STAT_MTIMESPEC", 1]
                  , "else": ["GIT_USE_STAT_MTIM", 1]
                  }
                ]
              }
            , [ { "type": "case*"
                , "expr": {"type": "var", "name": "REGEX_BACKEND"}
                , "case":
                  [ ["regcomp_l", ["GIT_REGEX_REGCOMP_L", 1]]
                  , ["regcomp", ["GIT_REGEX_REGCOMP", 1]]
                  , ["pcre", ["GIT_REGEX_PCRE", 1]]
                  , ["pcre2", ["GIT_REGEX_PCRE2", 1]]
                  , ["builtin", ["GIT_REGEX_BUILTIN", 1]]
                  , [null, ["GIT_REGEX_BUILTIN", 1]]
                  ]
                , "default":
                  { "type": "fail"
                  , "msg": "The REGEX_BACKEND option provided is not supported"
                  }
                }
              ]
            , { "type": "case*"
              , "expr": {"type": "var", "name": "USE_GSSAPI"}
              , "case":
                [ ["GSS.framework", [["GIT_GSSFRAMEWORK", 1]]]
                , ["gssapi", [["GIT_GSSAPI", 1]]]
                , [false, []]
                ]
              , "default":
                { "type": "fail"
                , "msg": "Backend asked for in USE_GSSAPI is not supported"
                }
              }
            , { "type": "if"
              , "cond": {"type": "var", "name": "USE_HTTPS"}
              , "then":
                [ ["GIT_HTTPS", 1]
                , { "type": "case*"
                  , "expr": {"type": "var", "name": "USE_HTTPS"}
                  , "case":
                    [ ["SecureTransport", ["GIT_SECURE_TRANSPORT", 1]]
                    , ["OpenSSL", ["GIT_OPENSSL", 1]]
                    , ["mbedTLS", ["GIT_MBEDTLS", 1]]
                    , ["WinHTTP", ["GIT_WINHTTP", 1]]
                    ]
                  , "default":
                    { "type": "fail"
                    , "msg": "Backend asked for in USE_HTTPS is not supported"
                    }
                  }
                ]
              }
            , { "type": "case*"
              , "expr": {"type": "var", "name": "USE_SHA1"}
              , "case":
                [ ["CollisionDetection", [["GIT_SHA1_COLLISIONDETECT", 1]]]
                , ["Win32", [["GIT_SHA1_WIN32", 1]]]
                , ["CommonCrypto", [["GIT_SHA1_COMMON_CRYPTO", 1]]]
                , ["OpenSSL", [["GIT_SHA1_OPENSSL", 1]]]
                , ["mbedTLS", [["GIT_SHA1_MBEDTLS", 1]]]
                ]
              }
            ]
          }
        ]
      ]
    , "body": {"type": "env", "vars": ["defines1"]}
    }
  }
, "feature_header":
  { "type": ["@", "rules", "CC/auto", "config"]
  , "name": ["features.h"]
  , "guard": ["INCLUDE_features_h__"]
  , "stage": ["sys"]
  }
, "sys/repository.h":
  { "type": ["@", "rules", "patch", "file"]
  , "src": [["FILE", null, "sys/repository.h"]]
  , "patch": [["@", "patches", "", "libgit2_v1.2.0_fix-fake-repo.patch"]]
  , "patch-part": ["a", "include", "git2", "sys", "repository.h"]
  }
, "TREE":
  { "type": "tree"
  , "name": "git2"
  , "deps":
    [ "annotated_commit.h"
    , "apply.h"
    , "attr.h"
    , "blame.h"
    , "blob.h"
    , "branch.h"
    , "buffer.h"
    , "cert.h"
    , "checkout.h"
    , "cherrypick.h"
    , "clone.h"
    , "commit.h"
    , "common.h"
    , "config.h"
    , "credential.h"
    , "credential_helpers.h"
    , "cred_helpers.h"
    , "deprecated.h"
    , "describe.h"
    , "diff.h"
    , "errors.h"
    , "filter.h"
    , "global.h"
    , "graph.h"
    , "ignore.h"
    , "indexer.h"
    , "index.h"
    , "mailmap.h"
    , "merge.h"
    , "message.h"
    , "net.h"
    , "notes.h"
    , "object.h"
    , "odb_backend.h"
    , "odb.h"
    , "oidarray.h"
    , "oid.h"
    , "pack.h"
    , "patch.h"
    , "pathspec.h"
    , "proxy.h"
    , "rebase.h"
    , "refdb.h"
    , "reflog.h"
    , "refs.h"
    , "refspec.h"
    , "remote.h"
    , "repository.h"
    , "reset.h"
    , "revert.h"
    , "revparse.h"
    , "revwalk.h"
    , "signature.h"
    , "stash.h"
    , "status.h"
    , "stdint.h"
    , "strarray.h"
    , "submodule.h"
    , "tag.h"
    , "trace.h"
    , "transaction.h"
    , "transport.h"
    , "tree.h"
    , "types.h"
    , "version.h"
    , "worktree.h"
    , "sys/alloc.h"
    , "sys/commit.h"
    , "sys/commit_graph.h"
    , "sys/config.h"
    , "sys/credential.h"
    , "sys/cred.h"
    , "sys/diff.h"
    , "sys/filter.h"
    , "sys/hashsig.h"
    , "sys/index.h"
    , "sys/mempack.h"
    , "sys/merge.h"
    , "sys/midx.h"
    , "sys/odb_backend.h"
    , "sys/openssl.h"
    , "sys/path.h"
    , "sys/refdb_backend.h"
    , "sys/reflog.h"
    , "sys/refs.h"
    , "sys/repository.h"
    , "sys/stream.h"
    , "sys/transport.h"
    , "sys/features.h"
    ]
  }
}
