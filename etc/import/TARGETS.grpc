{ "grpcxx_sources":
  { "type": ["@", "rules", "data", "staged"]
  , "srcs":
    [ "src/cpp/client/call_credentials.cc"
    , "src/cpp/client/channel_cc.cc"
    , "src/cpp/client/channel_credentials.cc"
    , "src/cpp/client/client_callback.cc"
    , "src/cpp/client/client_context.cc"
    , "src/cpp/client/client_interceptor.cc"
    , "src/cpp/client/client_stats_interceptor.cc"
    , "src/cpp/client/create_channel.cc"
    , "src/cpp/client/create_channel_internal.cc"
    , "src/cpp/client/create_channel_posix.cc"
    , "src/cpp/common/alarm.cc"
    , "src/cpp/common/channel_arguments.cc"
    , "src/cpp/common/completion_queue_cc.cc"
    , "src/cpp/common/resource_quota_cc.cc"
    , "src/cpp/common/rpc_method.cc"
    , "src/cpp/common/version_cc.cc"
    , "src/cpp/common/validate_service_config.cc"
    , "src/cpp/server/async_generic_service.cc"
    , "src/cpp/server/channel_argument_option.cc"
    , "src/cpp/server/create_default_thread_pool.cc"
    , "src/cpp/server/external_connection_acceptor_impl.cc"
    , "src/cpp/server/health/default_health_check_service.cc"
    , "src/cpp/server/health/health_check_service.cc"
    , "src/cpp/server/health/health_check_service_server_builder_option.cc"
    , "src/cpp/server/server_builder.cc"
    , "src/cpp/server/server_callback.cc"
    , "src/cpp/server/server_cc.cc"
    , "src/cpp/server/server_context.cc"
    , "src/cpp/server/server_credentials.cc"
    , "src/cpp/server/server_posix.cc"
    , "src/cpp/thread_manager/thread_manager.cc"
    , "src/cpp/util/byte_buffer_cc.cc"
    , "src/cpp/util/string_ref.cc"
    , "src/cpp/util/time_cc.cc"
    ]
  }
, "grpcxx_headers":
  { "type": ["@", "rules", "data", "staged"]
  , "srcs":
    [ "src/cpp/client/create_channel_internal.h"
    , "src/cpp/client/client_stats_interceptor.h"
    , "src/cpp/server/dynamic_thread_pool.h"
    , "src/cpp/server/external_connection_acceptor_impl.h"
    , "src/cpp/server/health/default_health_check_service.h"
    , "src/cpp/server/thread_pool_interface.h"
    , "src/cpp/thread_manager/thread_manager.h"
    ]
  }
, "grpc_unsecure":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_unsecure"]
  , "srcs":
    [ "src/core/lib/surface/init.cc"
    , "src/core/plugin_registry/grpc_plugin_registry.cc"
    , "src/core/plugin_registry/grpc_plugin_registry_noextra.cc"
    ]
  , "hdrs": [["include/grpc", "grpc_public_headers"]]
  , "deps":
    [ "channel_arg_names"
    , "channel_stack_builder"
    , "config"
    , "exec_ctx"
    , "gpr"
    , "grpc_base"
    , "grpc_client_channel"
    , "grpc_common"
    , "grpc_core_credentials_header"
    , "grpc_http_filters"
    , "grpc_security_base"
    , "grpc_trace"
    , "http_connect_handshaker"
    , "iomgr_timer"
    , "server"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/time", "time"]
    , ["src/core", "channel_args"]
    , ["src/core", "channel_init"]
    , ["src/core", "channel_stack_type"]
    , ["src/core", "client_channel_backup_poller"]
    , ["src/core", "default_event_engine"]
    , ["src/core", "endpoint_info_handshaker"]
    , ["src/core", "experiments"]
    , ["src/core", "forkable"]
    , ["src/core", "grpc_authorization_base"]
    , ["src/core", "http_proxy_mapper"]
    , ["src/core", "init_internally"]
    , ["src/core", "posix_event_engine_timer_manager"]
    , ["src/core", "server_call_tracer_filter"]
    , ["src/core", "service_config_channel_arg_filter"]
    , ["src/core", "slice"]
    , ["src/core", "tcp_connect_handshaker"]
    , ["third_party/address_sorting", "address_sorting"]
    ]
  }
, "grpc":
  { "type": "export"
  , "target": "grpc_internal"
  , "flexible_config":
    [ "OS"
    , "ARCH"
    , "HOST_ARCH"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    , "DEBUG"
    , "CC"
    , "CXX"
    , "CFLAGS"
    , "CXXFLAGS"
    , "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ENV"
    , "PKG_CONFIG_ARGS"
    ]
  }
, "grpc_internal":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc"]
  , "srcs":
    [ "src/core/lib/surface/init.cc"
    , "src/core/plugin_registry/grpc_plugin_registry.cc"
    , "src/core/plugin_registry/grpc_plugin_registry_extra.cc"
    ]
  , "hdrs": [["include/grpc", "grpc_public_headers"]]
  , "deps":
    [ "channel_arg_names"
    , "channel_stack_builder"
    , "config"
    , "exec_ctx"
    , "gpr"
    , "grpc_alts_credentials"
    , "grpc_base"
    , "grpc_client_channel"
    , "grpc_common"
    , "grpc_core_credentials_header"
    , "grpc_credentials_util"
    , "grpc_http_filters"
    , "grpc_jwt_credentials"
    , "grpc_public_hdrs"
    , "grpc_security_base"
    , "grpc_trace"
    , "http_connect_handshaker"
    , "httpcli"
    , "iomgr_timer"
    , "promise"
    , "ref_counted_ptr"
    , "server"
    , "sockaddr_utils"
    , "tsi_base"
    , "uri"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/time", "time"]
    , ["src/core", "channel_args"]
    , ["src/core", "channel_creds_registry_init"]
    , ["src/core", "channel_init"]
    , ["src/core", "channel_stack_type"]
    , ["src/core", "client_channel_backup_poller"]
    , ["src/core", "default_event_engine"]
    , ["src/core", "endpoint_info_handshaker"]
    , ["src/core", "experiments"]
    , ["src/core", "forkable"]
    , ["src/core", "grpc_authorization_base"]
    , ["src/core", "grpc_external_account_credentials"]
    , ["src/core", "grpc_fake_credentials"]
    , ["src/core", "grpc_google_default_credentials"]
    , ["src/core", "grpc_iam_credentials"]
    , ["src/core", "grpc_insecure_credentials"]
    , ["src/core", "grpc_lb_policy_cds"]
    , ["src/core", "grpc_lb_policy_ring_hash"]
    , ["src/core", "grpc_lb_policy_xds_cluster_impl"]
    , ["src/core", "grpc_lb_policy_xds_cluster_manager"]
    , ["src/core", "grpc_lb_policy_xds_override_host"]
    , ["src/core", "grpc_lb_policy_xds_wrr_locality"]
    , ["src/core", "grpc_local_credentials"]
    , ["src/core", "grpc_oauth2_credentials"]
    , ["src/core", "grpc_resolver_c2p"]
    , ["src/core", "grpc_resolver_xds"]
    , ["src/core", "grpc_ssl_credentials"]
    , ["src/core", "grpc_stateful_session_filter"]
    , ["src/core", "grpc_tls_credentials"]
    , ["src/core", "grpc_transport_chttp2_alpn"]
    , ["src/core", "grpc_xds_server_config_fetcher"]
    , ["src/core", "http_proxy_mapper"]
    , ["src/core", "httpcli_ssl_credentials"]
    , ["src/core", "init_internally"]
    , ["src/core", "json"]
    , ["src/core", "posix_event_engine_timer_manager"]
    , ["src/core", "ref_counted"]
    , ["src/core", "server_call_tracer_filter"]
    , ["src/core", "service_config_channel_arg_filter"]
    , ["src/core", "slice"]
    , ["src/core", "slice_refcount"]
    , ["src/core", "tcp_connect_handshaker"]
    , ["src/core", "useful"]
    , ["src/core", "xds_http_proxy_mapper"]
    , ["third_party/address_sorting", "address_sorting"]
    ]
  }
, "gpr":
  { "type": "export"
  , "target": "gpr_internal"
  , "flexible_config":
    [ "OS"
    , "ARCH"
    , "HOST_ARCH"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    , "DEBUG"
    , "CC"
    , "CXX"
    , "CFLAGS"
    , "CXXFLAGS"
    , "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ENV"
    , "PKG_CONFIG_ARGS"
    ]
  }
, "gpr_internal":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["gpr"]
  , "srcs":
    [ "src/core/util/alloc.cc"
    , "src/core/util/crash.cc"
    , "src/core/util/fork.cc"
    , "src/core/util/gpr_time.cc"
    , "src/core/util/host_port.cc"
    , "src/core/util/iphone/cpu.cc"
    , "src/core/util/linux/cpu.cc"
    , "src/core/util/log.cc"
    , "src/core/util/mpscq.cc"
    , "src/core/util/msys/tmpfile.cc"
    , "src/core/util/posix/cpu.cc"
    , "src/core/util/posix/stat.cc"
    , "src/core/util/posix/string.cc"
    , "src/core/util/posix/sync.cc"
    , "src/core/util/posix/thd.cc"
    , "src/core/util/posix/time.cc"
    , "src/core/util/posix/tmpfile.cc"
    , "src/core/util/string.cc"
    , "src/core/util/sync.cc"
    , "src/core/util/sync_abseil.cc"
    , "src/core/util/time_precise.cc"
    , "src/core/util/time_util.cc"
    , "src/core/util/windows/cpu.cc"
    , "src/core/util/windows/stat.cc"
    , "src/core/util/windows/string.cc"
    , "src/core/util/windows/string_util.cc"
    , "src/core/util/windows/sync.cc"
    , "src/core/util/windows/thd.cc"
    , "src/core/util/windows/time.cc"
    , "src/core/util/windows/tmpfile.cc"
    ]
  , "hdrs":
    [ "src/core/util/alloc.h"
    , "src/core/util/crash.h"
    , "src/core/util/fork.h"
    , "src/core/util/host_port.h"
    , "src/core/util/memory.h"
    , "src/core/util/mpscq.h"
    , "src/core/util/stat.h"
    , "src/core/util/string.h"
    , "src/core/util/sync.h"
    , "src/core/util/thd.h"
    , "src/core/util/time_precise.h"
    , "src/core/util/time_util.h"
    , "src/core/util/tmpfile.h"
    , ["include/grpc", "gpr_public_headers"]
    ]
  , "deps":
    [ "config_vars"
    , "debug_location"
    , ["@", "absl", "absl/base", "base"]
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/base", "log_severity"]
    , ["@", "absl", "absl/functional", "any_invocable"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "globals"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/memory", "memory"]
    , ["@", "absl", "absl/random", "random"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/strings", "cord"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/synchronization", "synchronization"]
    , ["@", "absl", "absl/time", "time"]
    , ["@", "absl", "absl/types", "optional"]
    , ["@", "absl", "absl/types", "variant"]
    , ["src/core", "construct_destruct"]
    , ["src/core", "env"]
    , ["src/core", "event_engine_thread_local"]
    , ["src/core", "examine_stack"]
    , ["src/core", "gpr_atm"]
    , ["src/core", "no_destruct"]
    , ["src/core", "strerror"]
    , ["src/core", "tchar"]
    , ["src/core", "useful"]
    ]
  }
, "gpr_public_hdrs":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["gpr_public_hdrs"]
  , "hdrs": [["include/grpc", "gpr_public_headers"]]
  , "deps":
    [ ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "variant"]
    ]
  }
, "cpp_impl_of":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["cpp_impl_of"]
  , "hdrs": ["src/core/util/cpp_impl_of.h"]
  }
, "grpc_common":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_common"]
  , "deps":
    [ "census"
    , "grpc_base"
    , "grpc_resolver_dns_ares"
    , "grpc_resolver_fake"
    , ["src/core", "grpc_backend_metric_filter"]
    , ["src/core", "grpc_channel_idle_filter"]
    , ["src/core", "grpc_client_authority_filter"]
    , ["src/core", "grpc_fault_injection_filter"]
    , ["src/core", "grpc_lb_policy_grpclb"]
    , ["src/core", "grpc_lb_policy_outlier_detection"]
    , ["src/core", "grpc_lb_policy_pick_first"]
    , ["src/core", "grpc_lb_policy_priority"]
    , ["src/core", "grpc_lb_policy_rls"]
    , ["src/core", "grpc_lb_policy_round_robin"]
    , ["src/core", "grpc_lb_policy_weighted_round_robin"]
    , ["src/core", "grpc_lb_policy_weighted_target"]
    , ["src/core", "grpc_message_size_filter"]
    , ["src/core", "grpc_resolver_dns_native"]
    , ["src/core", "grpc_resolver_dns_plugin"]
    , ["src/core", "grpc_resolver_sockaddr"]
    , ["src/core", "grpc_transport_chttp2_client_connector"]
    , ["src/core", "grpc_transport_chttp2_server"]
    , ["src/core", "grpc_transport_inproc"]
    ]
  }
, "grpc_public_hdrs":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_public_hdrs"]
  , "hdrs":
    [ ["include/grpc", "grpc_public_headers"]
    , ["include/grpc", "grpc_public_event_engine_headers"]
    ]
  , "deps":
    [ "channel_arg_names"
    , "gpr_public_hdrs"
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "strings"]
    ]
  }
, "grpc++_public_hdrs":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc++_public_hdrs"]
  , "hdrs":
    [ ["include/grpc++", "grpc++_public_headers"]
    , ["include/grpcpp", "grpcpp_public_headers"]
    ]
  , "deps":
    [ "global_callback_hook"
    , "grpc_public_hdrs"
    , ["@", "absl", "absl/log", "absl_check"]
    , ["@", "absl", "absl/log", "absl_log"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "cord"]
    , ["@", "absl", "absl/synchronization", "synchronization"]
    , ["@", "protobuf", "", "libprotobuf"]
    , ["src/core", "gpr_atm"]
    ]
  }
, "channel_arg_names":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["channel_arg_names"]
  , "hdrs": [["include/grpc", "channel_arg_names_headers"]]
  }
, "grpc_slice":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_slice"]
  , "hdrs": ["include/grpc/slice.h", "include/grpc/slice_buffer.h"]
  , "deps": [["src/core", "slice"], ["src/core", "slice_buffer"]]
  }
, "grpc++":
  { "type": "export"
  , "target": "grpc++_internal"
  , "flexible_config":
    [ "OS"
    , "ARCH"
    , "HOST_ARCH"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    , "DEBUG"
    , "CC"
    , "CXX"
    , "CFLAGS"
    , "CXXFLAGS"
    , "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ENV"
    , "PKG_CONFIG_ARGS"
    ]
  }
, "grpc++_internal":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc++"]
  , "hdrs":
    [ "src/cpp/client/secure_credentials.h"
    , "src/cpp/common/secure_auth_context.h"
    , "src/cpp/server/secure_server_credentials.h"
    , ["include/grpc++", "grpc++_public_headers"]
    , ["include/grpcpp", "grpcpp_public_headers"]
    ]
  , "deps":
    [ "global_callback_hook"
    , "grpc++_base"
    , "grpc++_xds_client"
    , "grpc++_xds_server"
    , ["@", "absl", "absl/log", "absl_check"]
    , ["@", "absl", "absl/log", "absl_log"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/strings", "cord"]
    , ["src/core", "gpr_atm"]
    , ["src/core", "slice"]
    ]
  }
, "grpc_cronet_hdrs":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_cronet_hdrs"]
  , "hdrs": ["include/grpc/grpc_cronet.h"]
  , "deps": ["gpr_public_hdrs", "grpc_base"]
  }
, "grpc++_cronet_credentials":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc++_cronet_credentials"]
  , "srcs": ["src/cpp/client/cronet_credentials.cc"]
  , "hdrs": ["include/grpcpp/security/cronet_credentials.h"]
  , "deps": ["grpc++_base", "grpc_cronet_hdrs", "grpc_public_hdrs"]
  }
, "grpc_authorization_provider":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_authorization_provider"]
  , "srcs":
    [ "src/core/lib/security/authorization/grpc_authorization_policy_provider.cc"
    , "src/core/lib/security/authorization/rbac_translator.cc"
    ]
  , "hdrs":
    [ "src/core/lib/security/authorization/grpc_authorization_policy_provider.h"
    , "src/core/lib/security/authorization/rbac_translator.h"
    ]
  , "deps":
    [ "gpr"
    , "grpc_base"
    , "grpc_public_hdrs"
    , "grpc_trace"
    , "ref_counted_ptr"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    , ["src/core", "error"]
    , ["src/core", "grpc_audit_logging"]
    , ["src/core", "grpc_authorization_base"]
    , ["src/core", "grpc_matchers"]
    , ["src/core", "grpc_rbac_engine"]
    , ["src/core", "json"]
    , ["src/core", "json_reader"]
    , ["src/core", "load_file"]
    , ["src/core", "slice"]
    , ["src/core", "slice_refcount"]
    , ["src/core", "status_helper"]
    , ["src/core", "useful"]
    ]
  }
, "grpc++_authorization_provider":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc++_authorization_provider"]
  , "srcs": ["src/cpp/server/authorization_policy_provider.cc"]
  , "hdrs": ["include/grpcpp/security/authorization_policy_provider.h"]
  , "deps":
    [ "gpr"
    , "grpc++"
    , "grpc++_public_hdrs"
    , "grpc_authorization_provider"
    , "grpc_public_hdrs"
    ]
  }
, "grpc_cel_engine":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_cel_engine"]
  , "srcs": ["src/core/lib/security/authorization/cel_authorization_engine.cc"]
  , "hdrs": ["src/core/lib/security/authorization/cel_authorization_engine.h"]
  , "deps":
    [ "gpr"
    , "grpc_mock_cel"
    , ["@", "absl", "absl/container", "flat_hash_set"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    , ["@", "absl", "absl/types", "span"]
    , ["src/core", "grpc_authorization_base"]
    , ["src/core/ext/upb-gen", "upb-gen-lib"]
    , ["third_party/upb", "base"]
    , ["third_party/upb", "mem"]
    , ["third_party/upb", "message"]
    ]
  }
, "grpc++_xds_client":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc++_xds_client"]
  , "srcs": ["src/cpp/client/xds_credentials.cc"]
  , "hdrs": ["src/cpp/client/secure_credentials.h"]
  , "deps":
    [ "exec_ctx"
    , "gpr"
    , "grpc"
    , "grpc++_base"
    , "grpc_base"
    , "grpc_public_hdrs"
    , "grpc_security_base"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/strings", "strings"]
    ]
  }
, "grpc++_xds_server":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc++_xds_server"]
  , "srcs":
    [ "src/cpp/server/xds_server_builder.cc"
    , "src/cpp/server/xds_server_credentials.cc"
    ]
  , "hdrs":
    [ "src/cpp/server/secure_server_credentials.h"
    , ["include/grpcpp", "grpcpp_xds_server_builder_headers"]
    ]
  , "deps":
    [ "channel_arg_names"
    , "gpr"
    , "grpc"
    , "grpc++_base"
    , ["@", "absl", "absl/log", "check"]
    , ["src/core", "xds_enabled_server"]
    ]
  }
, "grpc++_unsecure":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc++_unsecure"]
  , "srcs":
    [ "src/cpp/client/insecure_credentials.cc"
    , "src/cpp/common/insecure_create_auth_context.cc"
    , "src/cpp/server/insecure_server_credentials.cc"
    ]
  , "hdrs":
    [ ["include/grpc++", "grpc++_public_headers"]
    , ["include/grpcpp", "grpcpp_public_headers"]
    ]
  , "deps":
    [ "channel_arg_names"
    , "generic_stub_internal"
    , "global_callback_hook"
    , "gpr"
    , "grpc++_base_unsecure"
    , "grpc++_codegen_proto"
    , "grpc++_config_proto"
    , "grpc_core_credentials_header"
    , "grpc_public_hdrs"
    , "grpc_security_base"
    , "grpc_unsecure"
    , ["@", "absl", "absl/functional", "any_invocable"]
    , ["@", "absl", "absl/log", "absl_check"]
    , ["@", "absl", "absl/log", "absl_log"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "cord"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/synchronization", "synchronization"]
    , ["src/core", "gpr_atm"]
    , ["src/core", "grpc_insecure_credentials"]
    ]
  }
, "grpc++_error_details":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc++_error_details"]
  , "srcs": ["src/cpp/util/error_details.cc"]
  , "hdrs":
    [ "include/grpc++/support/error_details.h"
    , "include/grpcpp/support/error_details.h"
    ]
  , "deps": ["grpc++"]
  }
, "grpc++_alts":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc++_alts"]
  , "srcs": ["src/cpp/common/alts_context.cc", "src/cpp/common/alts_util.cc"]
  , "hdrs":
    [ "include/grpcpp/security/alts_context.h"
    , "include/grpcpp/security/alts_util.h"
    ]
  , "deps":
    [ "gpr"
    , "grpc++"
    , "grpc_base"
    , "tsi_alts_credentials"
    , ["@", "absl", "absl/log", "log"]
    , ["third_party/upb", "base"]
    , ["third_party/upb", "mem"]
    , ["third_party/upb", "message"]
    ]
  }
, "census":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["census"]
  , "srcs": ["src/core/ext/filters/census/grpc_context.cc"]
  , "hdrs": [["include/grpc", "census_headers"]]
  , "deps":
    [ "gpr"
    , "grpc_base"
    , "grpc_public_hdrs"
    , "grpc_trace"
    , ["src/core", "arena"]
    ]
  }
, "gpr_platform":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["gpr_platform"]
  , "hdrs":
    [ "include/grpc/impl/codegen/port_platform.h"
    , "include/grpc/support/port_platform.h"
    , ["./", "include/grpc", "gpr_public_headers"]
    ]
  }
, "event_engine_base_hdrs":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["event_engine_base_hdrs"]
  , "hdrs":
    [ ["include/grpc", "grpc_public_event_engine_headers"]
    , ["include/grpc", "grpc_public_headers"]
    ]
  , "deps":
    [ "channel_arg_names"
    , "gpr"
    , ["@", "absl", "absl/functional", "any_invocable"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/time", "time"]
    , ["@", "absl", "absl/types", "optional"]
    ]
  }
, "channelz":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["channelz"]
  , "srcs":
    [ "src/core/channelz/channel_trace.cc"
    , "src/core/channelz/channelz.cc"
    , "src/core/channelz/channelz_registry.cc"
    ]
  , "hdrs":
    [ "src/core/channelz/channel_trace.h"
    , "src/core/channelz/channelz.h"
    , "src/core/channelz/channelz_registry.h"
    ]
  , "deps":
    [ "exec_ctx"
    , "gpr"
    , "grpc_public_hdrs"
    , "parse_address"
    , "ref_counted_ptr"
    , "sockaddr_utils"
    , "uri"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    , ["src/core", "channel_args"]
    , ["src/core", "connectivity_state"]
    , ["src/core", "json"]
    , ["src/core", "json_writer"]
    , ["src/core", "per_cpu"]
    , ["src/core", "ref_counted"]
    , ["src/core", "resolved_address"]
    , ["src/core", "slice"]
    , ["src/core", "time"]
    , ["src/core", "useful"]
    ]
  }
, "dynamic_annotations":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["dynamic_annotations"]
  , "hdrs": ["src/core/lib/iomgr/dynamic_annotations.h"]
  , "deps": ["gpr_public_hdrs"]
  }
, "call_combiner":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["call_combiner"]
  , "srcs": ["src/core/lib/iomgr/call_combiner.cc"]
  , "hdrs": ["src/core/lib/iomgr/call_combiner.h"]
  , "deps":
    [ "dynamic_annotations"
    , "exec_ctx"
    , "gpr"
    , "ref_counted_ptr"
    , "stats"
    , ["@", "absl", "absl/container", "inlined_vector"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["src/core", "closure"]
    , ["src/core", "gpr_atm"]
    , ["src/core", "ref_counted"]
    , ["src/core", "stats_data"]
    ]
  }
, "resource_quota_api":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["resource_quota_api"]
  , "srcs": ["src/core/lib/resource_quota/api.cc"]
  , "hdrs": ["src/core/lib/resource_quota/api.h"]
  , "deps":
    [ "channel_arg_names"
    , "config"
    , "event_engine_base_hdrs"
    , "exec_ctx"
    , "gpr_public_hdrs"
    , "grpc_public_hdrs"
    , "ref_counted_ptr"
    , ["@", "absl", "absl/strings", "strings"]
    , ["src/core", "channel_args"]
    , ["src/core", "memory_quota"]
    , ["src/core", "resource_quota"]
    , ["src/core", "thread_quota"]
    ]
  }
, "byte_buffer":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["byte_buffer"]
  , "srcs":
    [ "src/core/lib/surface/byte_buffer.cc"
    , "src/core/lib/surface/byte_buffer_reader.cc"
    ]
  , "deps":
    [ "exec_ctx"
    , "gpr_public_hdrs"
    , "grpc_public_hdrs"
    , ["@", "absl", "absl/log", "check"]
    , ["src/core", "compression"]
    , ["src/core", "slice"]
    ]
  }
, "iomgr":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["iomgr"]
  , "srcs":
    [ "src/core/lib/iomgr/cfstream_handle.cc"
    , "src/core/lib/iomgr/dualstack_socket_posix.cc"
    , "src/core/lib/iomgr/endpoint.cc"
    , "src/core/lib/iomgr/endpoint_cfstream.cc"
    , "src/core/lib/iomgr/endpoint_pair_posix.cc"
    , "src/core/lib/iomgr/endpoint_pair_windows.cc"
    , "src/core/lib/iomgr/error_cfstream.cc"
    , "src/core/lib/iomgr/ev_apple.cc"
    , "src/core/lib/iomgr/ev_epoll1_linux.cc"
    , "src/core/lib/iomgr/ev_poll_posix.cc"
    , "src/core/lib/iomgr/ev_posix.cc"
    , "src/core/lib/iomgr/fork_posix.cc"
    , "src/core/lib/iomgr/fork_windows.cc"
    , "src/core/lib/iomgr/iocp_windows.cc"
    , "src/core/lib/iomgr/iomgr.cc"
    , "src/core/lib/iomgr/iomgr_posix.cc"
    , "src/core/lib/iomgr/iomgr_posix_cfstream.cc"
    , "src/core/lib/iomgr/iomgr_windows.cc"
    , "src/core/lib/iomgr/lockfree_event.cc"
    , "src/core/lib/iomgr/polling_entity.cc"
    , "src/core/lib/iomgr/pollset.cc"
    , "src/core/lib/iomgr/pollset_set_windows.cc"
    , "src/core/lib/iomgr/pollset_windows.cc"
    , "src/core/lib/iomgr/resolve_address.cc"
    , "src/core/lib/iomgr/resolve_address_posix.cc"
    , "src/core/lib/iomgr/resolve_address_windows.cc"
    , "src/core/lib/iomgr/socket_factory_posix.cc"
    , "src/core/lib/iomgr/socket_utils_common_posix.cc"
    , "src/core/lib/iomgr/socket_utils_linux.cc"
    , "src/core/lib/iomgr/socket_utils_posix.cc"
    , "src/core/lib/iomgr/socket_windows.cc"
    , "src/core/lib/iomgr/systemd_utils.cc"
    , "src/core/lib/iomgr/tcp_client.cc"
    , "src/core/lib/iomgr/tcp_client_cfstream.cc"
    , "src/core/lib/iomgr/tcp_client_posix.cc"
    , "src/core/lib/iomgr/tcp_client_windows.cc"
    , "src/core/lib/iomgr/tcp_posix.cc"
    , "src/core/lib/iomgr/tcp_server.cc"
    , "src/core/lib/iomgr/tcp_server_posix.cc"
    , "src/core/lib/iomgr/tcp_server_utils_posix_common.cc"
    , "src/core/lib/iomgr/tcp_server_utils_posix_ifaddrs.cc"
    , "src/core/lib/iomgr/tcp_server_utils_posix_noifaddrs.cc"
    , "src/core/lib/iomgr/tcp_server_windows.cc"
    , "src/core/lib/iomgr/tcp_windows.cc"
    , "src/core/lib/iomgr/unix_sockets_posix.cc"
    , "src/core/lib/iomgr/unix_sockets_posix_noop.cc"
    , "src/core/lib/iomgr/vsock.cc"
    , "src/core/lib/iomgr/wakeup_fd_eventfd.cc"
    , "src/core/lib/iomgr/wakeup_fd_nospecial.cc"
    , "src/core/lib/iomgr/wakeup_fd_pipe.cc"
    , "src/core/lib/iomgr/wakeup_fd_posix.cc"
    , "src/core/lib/iomgr/event_engine_shims/closure.cc"
    , "src/core/lib/iomgr/event_engine_shims/endpoint.cc"
    , "src/core/lib/iomgr/event_engine_shims/tcp_client.cc"
    , "src/core/util/gethostname_fallback.cc"
    , "src/core/util/gethostname_host_name_max.cc"
    , "src/core/util/gethostname_sysconf.cc"
    ]
  , "hdrs":
    [ "src/core/lib/iomgr/block_annotate.h"
    , "src/core/lib/iomgr/cfstream_handle.h"
    , "src/core/lib/iomgr/endpoint.h"
    , "src/core/lib/iomgr/endpoint_cfstream.h"
    , "src/core/lib/iomgr/endpoint_pair.h"
    , "src/core/lib/iomgr/error_cfstream.h"
    , "src/core/lib/iomgr/ev_apple.h"
    , "src/core/lib/iomgr/ev_epoll1_linux.h"
    , "src/core/lib/iomgr/ev_poll_posix.h"
    , "src/core/lib/iomgr/ev_posix.h"
    , "src/core/lib/iomgr/iocp_windows.h"
    , "src/core/lib/iomgr/iomgr.h"
    , "src/core/lib/iomgr/lockfree_event.h"
    , "src/core/lib/iomgr/nameser.h"
    , "src/core/lib/iomgr/polling_entity.h"
    , "src/core/lib/iomgr/pollset.h"
    , "src/core/lib/iomgr/pollset_set_windows.h"
    , "src/core/lib/iomgr/pollset_windows.h"
    , "src/core/lib/iomgr/python_util.h"
    , "src/core/lib/iomgr/resolve_address.h"
    , "src/core/lib/iomgr/resolve_address_impl.h"
    , "src/core/lib/iomgr/resolve_address_posix.h"
    , "src/core/lib/iomgr/resolve_address_windows.h"
    , "src/core/lib/iomgr/sockaddr.h"
    , "src/core/lib/iomgr/sockaddr_posix.h"
    , "src/core/lib/iomgr/sockaddr_windows.h"
    , "src/core/lib/iomgr/socket_factory_posix.h"
    , "src/core/lib/iomgr/socket_utils_posix.h"
    , "src/core/lib/iomgr/socket_windows.h"
    , "src/core/lib/iomgr/systemd_utils.h"
    , "src/core/lib/iomgr/tcp_client.h"
    , "src/core/lib/iomgr/tcp_client_posix.h"
    , "src/core/lib/iomgr/tcp_posix.h"
    , "src/core/lib/iomgr/tcp_server.h"
    , "src/core/lib/iomgr/tcp_server_utils_posix.h"
    , "src/core/lib/iomgr/tcp_windows.h"
    , "src/core/lib/iomgr/unix_sockets_posix.h"
    , "src/core/lib/iomgr/vsock.h"
    , "src/core/lib/iomgr/wakeup_fd_pipe.h"
    , "src/core/lib/iomgr/wakeup_fd_posix.h"
    , "src/core/lib/iomgr/event_engine_shims/closure.h"
    , "src/core/lib/iomgr/event_engine_shims/endpoint.h"
    , "src/core/lib/iomgr/event_engine_shims/tcp_client.h"
    , "src/core/util/gethostname.h"
    , ["include/grpc", "grpc_public_event_engine_headers"]
    , ["include/grpc", "grpc_public_headers"]
    ]
  , "deps":
    [ "byte_buffer"
    , "channel_arg_names"
    , "config_vars"
    , "debug_location"
    , "exec_ctx"
    , "gpr"
    , "grpc_core_credentials_header"
    , "grpc_public_hdrs"
    , "grpc_trace"
    , "iomgr_buffer_list"
    , "iomgr_internal_errqueue"
    , "iomgr_timer"
    , "orphanable"
    , "parse_address"
    , "resource_quota_api"
    , "sockaddr_utils"
    , "stats"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/container", "flat_hash_map"]
    , ["@", "absl", "absl/container", "flat_hash_set"]
    , ["@", "absl", "absl/functional", "any_invocable"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/time", "time"]
    , ["@", "absl", "absl/types", "optional"]
    , ["@", "absl", "absl/utility", "utility"]
    , ["src/core", "1999"]
    , ["src/core", "channel_args"]
    , ["src/core", "channel_args_endpoint_config"]
    , ["src/core", "closure"]
    , ["src/core", "construct_destruct"]
    , ["src/core", "context"]
    , ["src/core", "default_event_engine"]
    , ["src/core", "error"]
    , ["src/core", "error_utils"]
    , ["src/core", "event_engine_common"]
    , ["src/core", "event_engine_extensions"]
    , ["src/core", "event_engine_memory_allocator_factory"]
    , ["src/core", "event_engine_query_extensions"]
    , ["src/core", "event_engine_shim"]
    , ["src/core", "event_engine_tcp_socket_utils"]
    , ["src/core", "event_log"]
    , ["src/core", "experiments"]
    , ["src/core", "gpr_atm"]
    , ["src/core", "gpr_manual_constructor"]
    , ["src/core", "grpc_sockaddr"]
    , ["src/core", "init_internally"]
    , ["src/core", "iomgr_fwd"]
    , ["src/core", "iomgr_port"]
    , ["src/core", "memory_quota"]
    , ["src/core", "no_destruct"]
    , ["src/core", "pollset_set"]
    , ["src/core", "posix_event_engine_base_hdrs"]
    , ["src/core", "posix_event_engine_endpoint"]
    , ["src/core", "resolved_address"]
    , ["src/core", "resource_quota"]
    , ["src/core", "slice"]
    , ["src/core", "slice_buffer"]
    , ["src/core", "slice_cast"]
    , ["src/core", "slice_refcount"]
    , ["src/core", "socket_mutator"]
    , ["src/core", "stats_data"]
    , ["src/core", "strerror"]
    , ["src/core", "time"]
    , ["src/core", "useful"]
    , ["src/core", "windows_event_engine"]
    , ["src/core", "windows_event_engine_listener"]
    ]
  }
, "call_tracer":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["call_tracer"]
  , "srcs": ["src/core/telemetry/call_tracer.cc"]
  , "hdrs": ["src/core/telemetry/call_tracer.h"]
  , "deps":
    [ "gpr"
    , "tcp_tracer"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    , ["src/core", "arena"]
    , ["src/core", "call_final_info"]
    , ["src/core", "channel_args"]
    , ["src/core", "context"]
    , ["src/core", "error"]
    , ["src/core", "metadata_batch"]
    , ["src/core", "ref_counted_string"]
    , ["src/core", "slice_buffer"]
    ]
  }
, "channel":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["channel"]
  , "srcs": ["src/core/lib/surface/channel.cc"]
  , "hdrs": ["src/core/lib/surface/channel.h"]
  , "deps":
    [ "channel_arg_names"
    , "channelz"
    , "cpp_impl_of"
    , "event_engine_base_hdrs"
    , "exec_ctx"
    , "gpr"
    , "grpc_public_hdrs"
    , "grpc_trace"
    , "ref_counted_ptr"
    , "stats"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    , ["src/core", "arena"]
    , ["src/core", "call_arena_allocator"]
    , ["src/core", "call_destination"]
    , ["src/core", "channel_args"]
    , ["src/core", "channel_stack_type"]
    , ["src/core", "compression"]
    , ["src/core", "connectivity_state"]
    , ["src/core", "iomgr_fwd"]
    , ["src/core", "ref_counted"]
    , ["src/core", "resource_quota"]
    , ["src/core", "slice"]
    , ["src/core", "stats_data"]
    , ["src/core", "time"]
    ]
  }
, "legacy_channel":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["legacy_channel"]
  , "srcs": ["src/core/lib/surface/legacy_channel.cc"]
  , "hdrs": ["src/core/lib/surface/legacy_channel.h"]
  , "deps":
    [ "channel"
    , "channelz"
    , "config"
    , "exec_ctx"
    , "gpr"
    , "grpc_base"
    , "grpc_client_channel"
    , "ref_counted_ptr"
    , "stats"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/types", "optional"]
    , ["src/core", "arena"]
    , ["src/core", "call_arena_allocator"]
    , ["src/core", "channel_args"]
    , ["src/core", "channel_args_endpoint_config"]
    , ["src/core", "channel_fwd"]
    , ["src/core", "channel_init"]
    , ["src/core", "channel_stack_type"]
    , ["src/core", "closure"]
    , ["src/core", "dual_ref_counted"]
    , ["src/core", "error"]
    , ["src/core", "init_internally"]
    , ["src/core", "iomgr_fwd"]
    , ["src/core", "metrics"]
    , ["src/core", "resource_quota"]
    , ["src/core", "slice"]
    , ["src/core", "stats_data"]
    , ["src/core", "time"]
    ]
  }
, "channel_create":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["channel_create"]
  , "srcs": ["src/core/lib/surface/channel_create.cc"]
  , "hdrs": ["src/core/lib/surface/channel_create.h"]
  , "deps":
    [ "channel"
    , "channel_arg_names"
    , "channelz"
    , "config"
    , "gpr"
    , "grpc_base"
    , "grpc_client_channel"
    , "grpc_public_hdrs"
    , "legacy_channel"
    , "ref_counted_ptr"
    , "stats"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    , ["src/core", "arena"]
    , ["src/core", "channel_args"]
    , ["src/core", "channel_stack_type"]
    , ["src/core", "direct_channel"]
    , ["src/core", "experiments"]
    , ["src/core", "iomgr_fwd"]
    , ["src/core", "ref_counted"]
    , ["src/core", "slice"]
    , ["src/core", "stats_data"]
    ]
  }
, "server":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["server"]
  , "srcs": ["src/core/server/server.cc"]
  , "hdrs": ["src/core/server/server.h"]
  , "deps":
    [ "call_combiner"
    , "call_tracer"
    , "channel"
    , "channel_arg_names"
    , "channelz"
    , "config"
    , "cpp_impl_of"
    , "debug_location"
    , "exec_ctx"
    , "gpr"
    , "grpc_base"
    , "grpc_public_hdrs"
    , "grpc_security_base"
    , "grpc_trace"
    , "iomgr"
    , "legacy_channel"
    , "orphanable"
    , "promise"
    , "ref_counted_ptr"
    , "sockaddr_utils"
    , "stats"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/cleanup", "cleanup"]
    , ["@", "absl", "absl/container", "flat_hash_map"]
    , ["@", "absl", "absl/container", "flat_hash_set"]
    , ["@", "absl", "absl/hash", "hash"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/random", "random"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    , ["src/core", "activity"]
    , ["src/core", "arena_promise"]
    , ["src/core", "cancel_callback"]
    , ["src/core", "channel_args"]
    , ["src/core", "channel_args_preconditioning"]
    , ["src/core", "channel_fwd"]
    , ["src/core", "channel_stack_type"]
    , ["src/core", "closure"]
    , ["src/core", "connection_quota"]
    , ["src/core", "connectivity_state"]
    , ["src/core", "context"]
    , ["src/core", "dual_ref_counted"]
    , ["src/core", "error"]
    , ["src/core", "error_utils"]
    , ["src/core", "experiments"]
    , ["src/core", "interception_chain"]
    , ["src/core", "iomgr_fwd"]
    , ["src/core", "map"]
    , ["src/core", "metadata_batch"]
    , ["src/core", "pipe"]
    , ["src/core", "poll"]
    , ["src/core", "pollset_set"]
    , ["src/core", "random_early_detection"]
    , ["src/core", "resolved_address"]
    , ["src/core", "seq"]
    , ["src/core", "server_interface"]
    , ["src/core", "slice"]
    , ["src/core", "slice_buffer"]
    , ["src/core", "status_helper"]
    , ["src/core", "time"]
    , ["src/core", "try_join"]
    , ["src/core", "try_seq"]
    , ["src/core", "useful"]
    ]
  }
, "grpc_base":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_base"]
  , "srcs":
    [ "src/core/lib/channel/channel_stack.cc"
    , "src/core/lib/channel/channel_stack_builder_impl.cc"
    , "src/core/lib/channel/connected_channel.cc"
    , "src/core/lib/channel/promise_based_filter.cc"
    , "src/core/lib/channel/status_util.cc"
    , "src/core/lib/compression/message_compress.cc"
    , "src/core/lib/surface/call.cc"
    , "src/core/lib/surface/call_details.cc"
    , "src/core/lib/surface/call_log_batch.cc"
    , "src/core/lib/surface/call_utils.cc"
    , "src/core/lib/surface/client_call.cc"
    , "src/core/lib/surface/completion_queue.cc"
    , "src/core/lib/surface/completion_queue_factory.cc"
    , "src/core/lib/surface/event_string.cc"
    , "src/core/lib/surface/filter_stack_call.cc"
    , "src/core/lib/surface/lame_client.cc"
    , "src/core/lib/surface/metadata_array.cc"
    , "src/core/lib/surface/server_call.cc"
    , "src/core/lib/surface/validate_metadata.cc"
    , "src/core/lib/surface/version.cc"
    , "src/core/lib/transport/transport.cc"
    , "src/core/lib/transport/transport_op_string.cc"
    ]
  , "hdrs":
    [ "src/core/lib/channel/channel_stack.h"
    , "src/core/lib/channel/channel_stack_builder_impl.h"
    , "src/core/lib/channel/connected_channel.h"
    , "src/core/lib/channel/promise_based_filter.h"
    , "src/core/lib/channel/status_util.h"
    , "src/core/lib/compression/message_compress.h"
    , "src/core/lib/surface/call.h"
    , "src/core/lib/surface/call_test_only.h"
    , "src/core/lib/surface/call_utils.h"
    , "src/core/lib/surface/client_call.h"
    , "src/core/lib/surface/completion_queue.h"
    , "src/core/lib/surface/completion_queue_factory.h"
    , "src/core/lib/surface/event_string.h"
    , "src/core/lib/surface/filter_stack_call.h"
    , "src/core/lib/surface/init.h"
    , "src/core/lib/surface/lame_client.h"
    , "src/core/lib/surface/server_call.h"
    , "src/core/lib/surface/validate_metadata.h"
    , "src/core/lib/transport/transport.h"
    , ["include/grpc", "grpc_public_event_engine_headers"]
    , ["include/grpc", "grpc_public_headers"]
    ]
  , "deps":
    [ "call_combiner"
    , "call_tracer"
    , "channel"
    , "channel_arg_names"
    , "channel_stack_builder"
    , "channelz"
    , "config"
    , "cpp_impl_of"
    , "debug_location"
    , "exec_ctx"
    , "gpr"
    , "grpc_core_credentials_header"
    , "grpc_public_hdrs"
    , "grpc_trace"
    , "iomgr"
    , "iomgr_timer"
    , "orphanable"
    , "promise"
    , "ref_counted_ptr"
    , "stats"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/container", "flat_hash_map"]
    , ["@", "absl", "absl/container", "inlined_vector"]
    , ["@", "absl", "absl/functional", "any_invocable"]
    , ["@", "absl", "absl/functional", "function_ref"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/meta", "type_traits"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/time", "time"]
    , ["@", "absl", "absl/types", "optional"]
    , ["@", "absl", "absl/utility", "utility"]
    , ["@", "zlib", "", "zlib"]
    , ["src/core", "1999"]
    , ["src/core", "activity"]
    , ["src/core", "all_ok"]
    , ["src/core", "arena"]
    , ["src/core", "arena_promise"]
    , ["src/core", "atomic_utils"]
    , ["src/core", "bitset"]
    , ["src/core", "blackboard"]
    , ["src/core", "call_destination"]
    , ["src/core", "call_filters"]
    , ["src/core", "call_final_info"]
    , ["src/core", "call_finalization"]
    , ["src/core", "call_spine"]
    , ["src/core", "cancel_callback"]
    , ["src/core", "channel_args"]
    , ["src/core", "channel_args_preconditioning"]
    , ["src/core", "channel_fwd"]
    , ["src/core", "channel_init"]
    , ["src/core", "channel_stack_type"]
    , ["src/core", "closure"]
    , ["src/core", "compression"]
    , ["src/core", "connectivity_state"]
    , ["src/core", "context"]
    , ["src/core", "default_event_engine"]
    , ["src/core", "error"]
    , ["src/core", "error_utils"]
    , ["src/core", "event_engine_common"]
    , ["src/core", "event_engine_context"]
    , ["src/core", "experiments"]
    , ["src/core", "filter_args"]
    , ["src/core", "for_each"]
    , ["src/core", "gpr_atm"]
    , ["src/core", "gpr_manual_constructor"]
    , ["src/core", "gpr_spinlock"]
    , ["src/core", "if"]
    , ["src/core", "iomgr_fwd"]
    , ["src/core", "latch"]
    , ["src/core", "latent_see"]
    , ["src/core", "loop"]
    , ["src/core", "map"]
    , ["src/core", "match"]
    , ["src/core", "message"]
    , ["src/core", "metadata"]
    , ["src/core", "metadata_batch"]
    , ["src/core", "metrics"]
    , ["src/core", "no_destruct"]
    , ["src/core", "pipe"]
    , ["src/core", "poll"]
    , ["src/core", "promise_status"]
    , ["src/core", "race"]
    , ["src/core", "ref_counted"]
    , ["src/core", "seq"]
    , ["src/core", "server_interface"]
    , ["src/core", "single_set_ptr"]
    , ["src/core", "slice"]
    , ["src/core", "slice_buffer"]
    , ["src/core", "slice_cast"]
    , ["src/core", "slice_refcount"]
    , ["src/core", "stats_data"]
    , ["src/core", "status_flag"]
    , ["src/core", "status_helper"]
    , ["src/core", "time"]
    , ["src/core", "transport_fwd"]
    , ["src/core", "try_seq"]
    , ["src/core", "unique_type_name"]
    , ["src/core", "useful"]
    ]
  }
, "lb_load_data_store":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["lb_load_data_store"]
  , "srcs": ["src/cpp/server/load_reporter/load_data_store.cc"]
  , "hdrs":
    [ "src/cpp/server/load_reporter/constants.h"
    , "src/cpp/server/load_reporter/load_data_store.h"
    ]
  , "deps":
    [ "gpr"
    , "gpr_platform"
    , "grpc++"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["src/core", "grpc_sockaddr"]
    ]
  }
, "lb_server_load_reporting_service_server_builder_plugin":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["lb_server_load_reporting_service_server_builder_plugin"]
  , "srcs":
    [ "src/cpp/server/load_reporter/load_reporting_service_server_builder_plugin.cc"
    ]
  , "hdrs":
    [ "src/cpp/server/load_reporter/load_reporting_service_server_builder_plugin.h"
    ]
  , "deps": ["gpr_platform", "grpc++", "lb_load_reporter_service"]
  }
, "grpcpp_server_load_reporting":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpcpp_server_load_reporting"]
  , "srcs":
    [ "src/cpp/server/load_reporter/load_reporting_service_server_builder_option.cc"
    , "src/cpp/server/load_reporter/util.cc"
    ]
  , "hdrs": ["include/grpcpp/ext/server_load_reporting.h"]
  , "deps":
    [ "channel_arg_names"
    , "gpr"
    , "gpr_platform"
    , "grpc"
    , "grpc++"
    , "grpc++_public_hdrs"
    , "grpc_public_hdrs"
    , "lb_server_load_reporting_service_server_builder_plugin"
    , ["@", "absl", "absl/log", "log"]
    , ["src/core", "lb_server_load_reporting_filter"]
    ]
  }
, "lb_load_reporter_service":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["lb_load_reporter_service"]
  , "srcs":
    ["src/cpp/server/load_reporter/load_reporter_async_service_impl.cc"]
  , "hdrs": ["src/cpp/server/load_reporter/load_reporter_async_service_impl.h"]
  , "deps":
    [ "gpr"
    , "grpc++"
    , "lb_load_reporter"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/memory", "memory"]
    , ["@", "protobuf", "", "libprotobuf"]
    , ["src/proto/grpc/lb/v1", "load_reporter_cc_grpc"]
    ]
  }
, "lb_get_cpu_stats":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["lb_get_cpu_stats"]
  , "srcs":
    [ "src/cpp/server/load_reporter/get_cpu_stats_linux.cc"
    , "src/cpp/server/load_reporter/get_cpu_stats_macos.cc"
    , "src/cpp/server/load_reporter/get_cpu_stats_unsupported.cc"
    , "src/cpp/server/load_reporter/get_cpu_stats_windows.cc"
    ]
  , "hdrs": ["src/cpp/server/load_reporter/get_cpu_stats.h"]
  , "deps": ["gpr", "gpr_platform", ["@", "absl", "absl/log", "log"]]
  }
, "lb_load_reporter":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["lb_load_reporter"]
  , "srcs": ["src/cpp/server/load_reporter/load_reporter.cc"]
  , "hdrs":
    [ "src/cpp/server/load_reporter/constants.h"
    , "src/cpp/server/load_reporter/load_reporter.h"
    ]
  , "deps":
    [ "gpr"
    , "lb_get_cpu_stats"
    , "lb_load_data_store"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "opencensus-stats", "", ""]
    , ["@", "opencensus-tags", "", ""]
    , ["@", "protobuf", "", "libprotobuf"]
    , ["src/proto/grpc/lb/v1", "load_reporter_cc_grpc"]
    ]
  }
, "grpc_security_base":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_security_base"]
  , "srcs":
    [ "src/core/handshaker/security/secure_endpoint.cc"
    , "src/core/handshaker/security/security_handshaker.cc"
    , "src/core/lib/security/context/security_context.cc"
    , "src/core/lib/security/credentials/call_creds_util.cc"
    , "src/core/lib/security/credentials/composite/composite_credentials.cc"
    , "src/core/lib/security/credentials/credentials.cc"
    , "src/core/lib/security/credentials/plugin/plugin_credentials.cc"
    , "src/core/lib/security/security_connector/security_connector.cc"
    , "src/core/lib/security/transport/client_auth_filter.cc"
    , "src/core/lib/security/transport/server_auth_filter.cc"
    ]
  , "hdrs":
    [ "src/core/handshaker/security/secure_endpoint.h"
    , "src/core/handshaker/security/security_handshaker.h"
    , "src/core/lib/security/context/security_context.h"
    , "src/core/lib/security/credentials/call_creds_util.h"
    , "src/core/lib/security/credentials/composite/composite_credentials.h"
    , "src/core/lib/security/credentials/credentials.h"
    , "src/core/lib/security/credentials/plugin/plugin_credentials.h"
    , "src/core/lib/security/security_connector/security_connector.h"
    , "src/core/lib/security/transport/auth_filters.h"
    , ["include/grpc", "grpc_public_headers"]
    ]
  , "deps":
    [ "channel_arg_names"
    , "channelz"
    , "config"
    , "debug_location"
    , "exec_ctx"
    , "gpr"
    , "grpc_base"
    , "grpc_core_credentials_header"
    , "grpc_public_hdrs"
    , "grpc_trace"
    , "handshaker"
    , "iomgr"
    , "orphanable"
    , "promise"
    , "ref_counted_ptr"
    , "resource_quota_api"
    , "stats"
    , "tsi_base"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/container", "inlined_vector"]
    , ["@", "absl", "absl/functional", "any_invocable"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    , ["src/core", "activity"]
    , ["src/core", "arena"]
    , ["src/core", "arena_promise"]
    , ["src/core", "channel_args"]
    , ["src/core", "channel_fwd"]
    , ["src/core", "closure"]
    , ["src/core", "connection_context"]
    , ["src/core", "context"]
    , ["src/core", "error"]
    , ["src/core", "event_engine_memory_allocator"]
    , ["src/core", "gpr_atm"]
    , ["src/core", "handshaker_factory"]
    , ["src/core", "handshaker_registry"]
    , ["src/core", "iomgr_fwd"]
    , ["src/core", "memory_quota"]
    , ["src/core", "metadata_batch"]
    , ["src/core", "poll"]
    , ["src/core", "ref_counted"]
    , ["src/core", "resource_quota"]
    , ["src/core", "seq"]
    , ["src/core", "slice"]
    , ["src/core", "slice_refcount"]
    , ["src/core", "stats_data"]
    , ["src/core", "status_helper"]
    , ["src/core", "try_seq"]
    , ["src/core", "unique_type_name"]
    , ["src/core", "useful"]
    ]
  }
, "tsi_base":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["tsi_base"]
  , "srcs":
    [ "src/core/tsi/transport_security.cc"
    , "src/core/tsi/transport_security_grpc.cc"
    ]
  , "hdrs":
    [ "src/core/tsi/transport_security.h"
    , "src/core/tsi/transport_security_grpc.h"
    , "src/core/tsi/transport_security_interface.h"
    ]
  , "deps": ["gpr", "grpc_public_hdrs", "grpc_trace"]
  }
, "grpc_core_credentials_header":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_core_credentials_header"]
  , "hdrs": [["include/grpc", "grpc_core_credentials_header"]]
  }
, "alts_util":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["alts_util"]
  , "srcs":
    [ "src/core/lib/security/credentials/alts/check_gcp_environment.cc"
    , "src/core/lib/security/credentials/alts/check_gcp_environment_linux.cc"
    , "src/core/lib/security/credentials/alts/check_gcp_environment_no_op.cc"
    , "src/core/lib/security/credentials/alts/check_gcp_environment_windows.cc"
    , "src/core/lib/security/credentials/alts/grpc_alts_credentials_client_options.cc"
    , "src/core/lib/security/credentials/alts/grpc_alts_credentials_options.cc"
    , "src/core/lib/security/credentials/alts/grpc_alts_credentials_server_options.cc"
    , "src/core/tsi/alts/handshaker/transport_security_common_api.cc"
    ]
  , "hdrs":
    [ ["include/grpc", "grpc_secure_public_headers"]
    , "src/core/lib/security/credentials/alts/check_gcp_environment.h"
    , "src/core/lib/security/credentials/alts/grpc_alts_credentials_options.h"
    , "src/core/tsi/alts/handshaker/transport_security_common_api.h"
    ]
  , "deps":
    [ "gpr"
    , "grpc_core_credentials_header"
    , "grpc_public_hdrs"
    , ["@", "absl", "absl/log", "log"]
    , ["src/core/ext/upb-gen", "upb-gen-lib"]
    , ["third_party/upb", "base"]
    , ["third_party/upb", "mem"]
    ]
  }
, "tsi":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["tsi"]
  , "deps":
    [ "gpr"
    , "tsi_alts_frame_protector"
    , "tsi_base"
    , "tsi_fake_credentials"
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "ssl", "", "crypto"]
    , ["@", "ssl", "", "ssl"]
    , ["src/core", "tsi_local_credentials"]
    , ["src/core", "useful"]
    , ["third_party/upb", "base"]
    , ["third_party/upb", "mem"]
    ]
  }
, "grpc++_base":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc++_base"]
  , "srcs":
    [ "src/cpp/client/insecure_credentials.cc"
    , "src/cpp/client/secure_credentials.cc"
    , "src/cpp/common/auth_property_iterator.cc"
    , "src/cpp/common/secure_auth_context.cc"
    , "src/cpp/common/secure_create_auth_context.cc"
    , "src/cpp/common/tls_certificate_provider.cc"
    , "src/cpp/common/tls_certificate_verifier.cc"
    , "src/cpp/common/tls_credentials_options.cc"
    , "src/cpp/server/insecure_server_credentials.cc"
    , "src/cpp/server/secure_server_credentials.cc"
    , ["", "grpcxx_sources"]
    ]
  , "hdrs":
    [ "src/cpp/client/secure_credentials.h"
    , "src/cpp/common/secure_auth_context.h"
    , "src/cpp/server/secure_server_credentials.h"
    , ["", "grpcxx_headers"]
    , ["include/grpc++", "grpc++_public_headers"]
    , ["include/grpcpp", "grpcpp_public_headers"]
    ]
  , "deps":
    [ "channel_arg_names"
    , "channel_stack_builder"
    , "config"
    , "exec_ctx"
    , "generic_stub_internal"
    , "global_callback_hook"
    , "gpr"
    , "grpc"
    , "grpc++_codegen_proto"
    , "grpc++_config_proto"
    , "grpc_base"
    , "grpc_core_credentials_header"
    , "grpc_credentials_util"
    , "grpc_public_hdrs"
    , "grpc_security_base"
    , "grpc_service_config_impl"
    , "grpc_trace"
    , "grpcpp_backend_metric_recorder"
    , "grpcpp_call_metric_recorder"
    , "grpcpp_status"
    , "iomgr"
    , "iomgr_timer"
    , "ref_counted_ptr"
    , "resource_quota_api"
    , "server"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/container", "inlined_vector"]
    , ["@", "absl", "absl/functional", "any_invocable"]
    , ["@", "absl", "absl/log", "absl_check"]
    , ["@", "absl", "absl/log", "absl_log"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/memory", "memory"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "cord"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/synchronization", "synchronization"]
    , ["@", "absl", "absl/types", "optional"]
    , ["@", "protobuf", "", "libprotobuf"]
    , ["src/core", "arena"]
    , ["src/core", "channel_args"]
    , ["src/core", "channel_fwd"]
    , ["src/core", "channel_init"]
    , ["src/core", "channel_stack_type"]
    , ["src/core", "closure"]
    , ["src/core", "default_event_engine"]
    , ["src/core", "env"]
    , ["src/core", "error"]
    , ["src/core", "experiments"]
    , ["src/core", "gpr_atm"]
    , ["src/core", "gpr_manual_constructor"]
    , ["src/core", "grpc_audit_logging"]
    , ["src/core", "grpc_backend_metric_provider"]
    , ["src/core", "grpc_crl_provider"]
    , ["src/core", "grpc_service_config"]
    , ["src/core", "grpc_tls_credentials"]
    , ["src/core", "grpc_transport_chttp2_server"]
    , ["src/core", "grpc_transport_inproc"]
    , ["src/core", "json"]
    , ["src/core", "json_reader"]
    , ["src/core", "load_file"]
    , ["src/core", "ref_counted"]
    , ["src/core", "resource_quota"]
    , ["src/core", "slice"]
    , ["src/core", "slice_buffer"]
    , ["src/core", "slice_refcount"]
    , ["src/core", "socket_mutator"]
    , ["src/core", "status_helper"]
    , ["src/core", "thread_quota"]
    , ["src/core", "time"]
    , ["src/core", "useful"]
    , ["src/core/ext/upb-gen", "upb-gen-lib"]
    , ["third_party/upb", "base"]
    , ["third_party/upb", "mem"]
    ]
  }
, "grpc++_base_unsecure":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc++_base_unsecure"]
  , "srcs": [["", "grpcxx_sources"]]
  , "hdrs":
    [ ["", "grpcxx_headers"]
    , ["include/grpc++", "grpc++_public_headers"]
    , ["include/grpcpp", "grpcpp_public_headers"]
    ]
  , "deps":
    [ "channel_arg_names"
    , "channel_stack_builder"
    , "config"
    , "exec_ctx"
    , "generic_stub_internal"
    , "global_callback_hook"
    , "gpr"
    , "grpc_base"
    , "grpc_core_credentials_header"
    , "grpc_health_upb"
    , "grpc_public_hdrs"
    , "grpc_security_base"
    , "grpc_service_config_impl"
    , "grpc_trace"
    , "grpc_transport_chttp2"
    , "grpc_unsecure"
    , "grpcpp_backend_metric_recorder"
    , "grpcpp_call_metric_recorder"
    , "grpcpp_status"
    , "iomgr"
    , "iomgr_timer"
    , "ref_counted_ptr"
    , "resource_quota_api"
    , "server"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/functional", "any_invocable"]
    , ["@", "absl", "absl/log", "absl_check"]
    , ["@", "absl", "absl/log", "absl_log"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/memory", "memory"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "cord"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/synchronization", "synchronization"]
    , ["@", "absl", "absl/types", "optional"]
    , ["@", "protobuf", "", "libprotobuf"]
    , ["src/core", "arena"]
    , ["src/core", "channel_args"]
    , ["src/core", "channel_init"]
    , ["src/core", "closure"]
    , ["src/core", "default_event_engine"]
    , ["src/core", "error"]
    , ["src/core", "experiments"]
    , ["src/core", "gpr_atm"]
    , ["src/core", "gpr_manual_constructor"]
    , ["src/core", "grpc_backend_metric_provider"]
    , ["src/core", "grpc_insecure_credentials"]
    , ["src/core", "grpc_service_config"]
    , ["src/core", "grpc_transport_chttp2_server"]
    , ["src/core", "grpc_transport_inproc"]
    , ["src/core", "ref_counted"]
    , ["src/core", "resource_quota"]
    , ["src/core", "slice"]
    , ["src/core", "socket_mutator"]
    , ["src/core", "thread_quota"]
    , ["src/core", "time"]
    , ["src/core", "useful"]
    , ["third_party/upb", "base"]
    , ["third_party/upb", "mem"]
    ]
  }
, "grpc++_codegen_proto":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc++_codegen_proto"]
  , "hdrs":
    [ ["./", "include/grpc++", "grpc++_codegen_proto_headers"]
    , ["./", "include/grpcpp", "grpcpp_codegen_proto_headers"]
    ]
  , "deps":
    [ "grpc++_config_proto"
    , "grpc++_public_hdrs"
    , "grpcpp_status"
    , ["@", "absl", "absl/strings", "cord"]
    , ["@", "protobuf", "", "libprotobuf"]
    ]
  }
, "grpc++_config_proto":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc++_config_proto"]
  , "hdrs":
    [ ["include/grpc++", "grpc++_config_proto_headers"]
    , ["include/grpcpp", "grpcpp_config_proto_headers"]
    ]
  , "deps":
    [ ["@", "absl", "absl/status", "status"]
    , ["@", "protobuf", "", "libprotobuf"]
    ]
  }
, "grpc++_reflection":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc++_reflection"]
  , "srcs":
    [ "src/cpp/ext/proto_server_reflection.cc"
    , "src/cpp/ext/proto_server_reflection_plugin.cc"
    ]
  , "hdrs":
    [ "src/cpp/ext/proto_server_reflection.h"
    , "include/grpc++/ext/proto_server_reflection_plugin.h"
    , "include/grpcpp/ext/proto_server_reflection_plugin.h"
    ]
  , "deps":
    [ "config_vars"
    , "grpc++"
    , "grpc++_config_proto"
    , ["@", "protobuf", "", "libprotobuf"]
    , ["src/proto/grpc/reflection/v1", "reflection_proto"]
    , ["src/proto/grpc/reflection/v1alpha", "reflection_proto"]
    ]
  }
, "grpcpp_call_metric_recorder":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpcpp_call_metric_recorder"]
  , "hdrs": [["include/grpcpp", "grpcpp_call_metric_recorder_headers"]]
  , "deps":
    [ "grpc++_public_hdrs"
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    ]
  }
, "grpcpp_backend_metric_recorder":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpcpp_backend_metric_recorder"]
  , "srcs": ["src/cpp/server/backend_metric_recorder.cc"]
  , "hdrs":
    [ "src/cpp/server/backend_metric_recorder.h"
    , ["include/grpcpp", "grpcpp_backend_metric_recorder_headers"]
    ]
  , "deps":
    [ "gpr"
    , "grpc++_public_hdrs"
    , "grpc_trace"
    , "grpcpp_call_metric_recorder"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["src/core", "grpc_backend_metric_data"]
    , ["src/core", "grpc_backend_metric_provider"]
    ]
  }
, "grpcpp_orca_service":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpcpp_orca_service"]
  , "srcs": ["src/cpp/server/orca/orca_service.cc"]
  , "hdrs": ["src/cpp/server/orca/orca_service.h"]
  , "deps":
    [ "debug_location"
    , "exec_ctx"
    , "gpr"
    , "grpc++"
    , "grpc_base"
    , "grpcpp_backend_metric_recorder"
    , "ref_counted_ptr"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/time", "time"]
    , ["@", "absl", "absl/types", "optional"]
    , ["@", "protobuf", "", "libprotobuf"]
    , ["src/core", "default_event_engine"]
    , ["src/core", "grpc_backend_metric_data"]
    , ["src/core", "ref_counted"]
    , ["src/core", "time"]
    , ["src/core/ext/upb-gen", "upb-gen-lib"]
    , ["third_party/upb", "base"]
    , ["third_party/upb", "mem"]
    ]
  }
, "grpcpp_channelz":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpcpp_channelz"]
  , "srcs":
    [ "src/cpp/server/channelz/channelz_service.cc"
    , "src/cpp/server/channelz/channelz_service_plugin.cc"
    ]
  , "hdrs":
    [ "src/cpp/server/channelz/channelz_service.h"
    , "include/grpcpp/ext/channelz_service_plugin.h"
    ]
  , "deps":
    [ "gpr"
    , "grpc"
    , "grpc++"
    , "grpc++_config_proto"
    , ["@", "protobuf", "", "libprotobuf"]
    , ["src/proto/grpc/channelz", "channelz_proto"]
    ]
  }
, "grpcpp_csds":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpcpp_csds"]
  , "srcs": ["src/cpp/server/csds/csds.cc"]
  , "hdrs": ["src/cpp/server/csds/csds.h"]
  , "deps":
    [ "gpr"
    , "grpc"
    , "grpc++_base"
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["src/proto/grpc/testing/xds/v3", "csds_cc_grpc"]
    ]
  }
, "grpcpp_admin":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpcpp_admin"]
  , "srcs": ["src/cpp/server/admin/admin_services.cc"]
  , "hdrs": ["include/grpcpp/ext/admin_services.h"]
  , "deps":
    [ "gpr"
    , "grpc++"
    , "grpcpp_channelz"
    , "grpcpp_csds"
    , ["@", "absl", "absl/memory", "memory"]
    ]
  }
, "grpc++_test":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc++_test"]
  , "srcs": ["src/cpp/client/channel_test_peer.cc"]
  , "hdrs":
    [ "include/grpc++/test/mock_stream.h"
    , "include/grpc++/test/server_context_test_spouse.h"
    , "include/grpcpp/test/channel_test_peer.h"
    , "include/grpcpp/test/client_context_test_peer.h"
    , "include/grpcpp/test/default_reactor_test_peer.h"
    , "include/grpcpp/test/mock_stream.h"
    , "include/grpcpp/test/server_context_test_spouse.h"
    ]
  , "deps": ["channel", "grpc++", "grpc_base", ["@", "gtest", "", ""]]
  }
, "grpc_opencensus_plugin":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_opencensus_plugin"]
  , "srcs":
    [ "src/cpp/ext/filters/census/client_filter.cc"
    , "src/cpp/ext/filters/census/context.cc"
    , "src/cpp/ext/filters/census/grpc_plugin.cc"
    , "src/cpp/ext/filters/census/measures.cc"
    , "src/cpp/ext/filters/census/rpc_encoding.cc"
    , "src/cpp/ext/filters/census/server_call_tracer.cc"
    , "src/cpp/ext/filters/census/views.cc"
    ]
  , "hdrs":
    [ "include/grpcpp/opencensus.h"
    , "src/cpp/ext/filters/census/client_filter.h"
    , "src/cpp/ext/filters/census/context.h"
    , "src/cpp/ext/filters/census/grpc_plugin.h"
    , "src/cpp/ext/filters/census/measures.h"
    , "src/cpp/ext/filters/census/open_census_call_tracer.h"
    , "src/cpp/ext/filters/census/rpc_encoding.h"
    , "src/cpp/ext/filters/census/server_call_tracer.h"
    ]
  , "deps":
    [ "call_tracer"
    , "config"
    , "gpr"
    , "grpc++_base"
    , "grpc_base"
    , "grpc_public_hdrs"
    , "tcp_tracer"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/base", "endian"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/time", "time"]
    , ["@", "absl", "absl/types", "optional"]
    , ["@", "opencensus-stats", "", ""]
    , ["@", "opencensus-tags", "", ""]
    , ["@", "opencensus-tags-context_util", "", ""]
    , ["@", "opencensus-trace", "", ""]
    , ["@", "opencensus-trace-context_util", "", ""]
    , ["@", "opencensus-trace-propagation", "", ""]
    , ["@", "opencensus-trace-span_context", "", ""]
    , ["src/core", "arena"]
    , ["src/core", "arena_promise"]
    , ["src/core", "channel_args"]
    , ["src/core", "channel_fwd"]
    , ["src/core", "channel_stack_type"]
    , ["src/core", "context"]
    , ["src/core", "error"]
    , ["src/core", "experiments"]
    , ["src/core", "logging_filter"]
    , ["src/core", "metadata_batch"]
    , ["src/core", "slice"]
    , ["src/core", "slice_buffer"]
    , ["src/core", "slice_refcount"]
    ]
  }
, "grpcpp_gcp_observability":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpcpp_gcp_observability"]
  , "hdrs": ["include/grpcpp/ext/gcp_observability.h"]
  , "deps": [["src/cpp/ext/gcp", "observability"]]
  }
, "grpcpp_csm_observability":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpcpp_csm_observability"]
  , "hdrs": ["include/grpcpp/ext/csm_observability.h"]
  , "deps": ["grpcpp_otel_plugin", ["src/cpp/ext/csm", "csm_observability"]]
  }
, "grpcpp_otel_plugin":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpcpp_otel_plugin"]
  , "hdrs": ["include/grpcpp/ext/otel_plugin.h"]
  , "deps": ["grpc++", ["src/cpp/ext/otel", "otel_plugin"]]
  }
, "generic_stub_internal":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["generic_stub_internal"]
  , "hdrs": ["include/grpcpp/impl/generic_stub_internal.h"]
  , "deps": ["grpc++_public_hdrs"]
  }
, "generic_stub":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["generic_stub"]
  , "hdrs": ["include/grpcpp/generic/generic_stub.h"]
  , "deps": ["generic_stub_internal"]
  }
, "generic_stub_callback":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["generic_stub_callback"]
  , "hdrs": ["include/grpcpp/generic/generic_stub_callback.h"]
  , "deps": ["generic_stub_internal"]
  }
, "async_generic_service":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["async_generic_service"]
  , "hdrs": ["include/grpcpp/generic/async_generic_service.h"]
  , "deps": ["grpc++_public_hdrs"]
  }
, "callback_generic_service":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["callback_generic_service"]
  , "hdrs": ["include/grpcpp/generic/callback_generic_service.h"]
  , "deps": ["grpc++_public_hdrs"]
  }
, "work_serializer":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["work_serializer"]
  , "srcs": ["src/core/util/work_serializer.cc"]
  , "hdrs": ["src/core/util/work_serializer.h"]
  , "deps":
    [ "debug_location"
    , "event_engine_base_hdrs"
    , "exec_ctx"
    , "gpr"
    , "grpc_trace"
    , "orphanable"
    , "stats"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/container", "inlined_vector"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["src/core", "experiments"]
    , ["src/core", "latent_see"]
    , ["src/core", "stats_data"]
    ]
  }
, "grpc_trace":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_trace"]
  , "srcs":
    ["src/core/lib/debug/trace.cc", "src/core/lib/debug/trace_flags.cc"]
  , "hdrs":
    [ "src/core/lib/debug/trace.h"
    , "src/core/lib/debug/trace_flags.h"
    , "src/core/lib/debug/trace_impl.h"
    ]
  , "deps":
    [ "config_vars"
    , "gpr"
    , "grpc_public_hdrs"
    , ["@", "absl", "absl/strings", "strings"]
    , ["src/core", "glob"]
    , ["src/core", "no_destruct"]
    ]
  }
, "load_config":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["load_config"]
  , "srcs": ["src/core/config/load_config.cc"]
  , "hdrs": ["src/core/config/load_config.h"]
  , "deps":
    [ "gpr_platform"
    , ["@", "absl", "absl/flags", "flag"]
    , ["@", "absl", "absl/flags", "marshalling"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    , ["src/core", "env"]
    ]
  }
, "config_vars":
  { "type": "export"
  , "target": "config_vars (unexported)"
  , "flexible_config":
    [ "OS"
    , "ARCH"
    , "HOST_ARCH"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    , "DEBUG"
    , "CC"
    , "CXX"
    , "CFLAGS"
    , "CXXFLAGS"
    , "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ENV"
    , "PKG_CONFIG_ARGS"
    ]
  }
, "config_vars (unexported)":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["config_vars"]
  , "srcs":
    [ "src/core/config/config_vars.cc"
    , "src/core/config/config_vars_non_generated.cc"
    ]
  , "hdrs": ["src/core/config/config_vars.h"]
  , "deps":
    [ "gpr_platform"
    , "load_config"
    , ["@", "absl", "absl/flags", "flag"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    ]
  }
, "config":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["config"]
  , "srcs": ["src/core/config/core_configuration.cc"]
  , "hdrs": ["src/core/config/core_configuration.h"]
  , "deps":
    [ "gpr"
    , "grpc_resolver"
    , ["@", "absl", "absl/functional", "any_invocable"]
    , ["@", "absl", "absl/log", "check"]
    , ["src/core", "certificate_provider_registry"]
    , ["src/core", "channel_args_preconditioning"]
    , ["src/core", "channel_creds_registry"]
    , ["src/core", "channel_init"]
    , ["src/core", "handshaker_registry"]
    , ["src/core", "lb_policy_registry"]
    , ["src/core", "proxy_mapper_registry"]
    , ["src/core", "service_config_parser"]
    ]
  }
, "debug_location":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["debug_location"]
  , "hdrs": ["src/core/util/debug_location.h"]
  , "deps": ["gpr_platform", ["@", "absl", "absl/strings", "strings"]]
  }
, "orphanable":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["orphanable"]
  , "hdrs": ["src/core/util/orphanable.h"]
  , "deps":
    [ "debug_location"
    , "gpr_platform"
    , "ref_counted_ptr"
    , ["src/core", "down_cast"]
    , ["src/core", "ref_counted"]
    ]
  }
, "promise":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["promise"]
  , "hdrs": ["src/core/lib/promise/promise.h"]
  , "deps":
    [ "gpr_platform"
    , ["@", "absl", "absl/functional", "any_invocable"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/types", "optional"]
    , ["src/core", "poll"]
    , ["src/core", "promise_like"]
    ]
  }
, "ref_counted_ptr":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["ref_counted_ptr"]
  , "hdrs": ["src/core/util/ref_counted_ptr.h"]
  , "deps":
    [ "debug_location"
    , "gpr_platform"
    , ["@", "absl", "absl/hash", "hash"]
    , ["src/core", "down_cast"]
    ]
  }
, "handshaker":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["handshaker"]
  , "srcs": ["src/core/handshaker/handshaker.cc"]
  , "hdrs": ["src/core/handshaker/handshaker.h"]
  , "deps":
    [ "debug_location"
    , "event_engine_base_hdrs"
    , "exec_ctx"
    , "gpr"
    , "grpc_base"
    , "grpc_public_hdrs"
    , "grpc_trace"
    , "iomgr"
    , "orphanable"
    , "ref_counted_ptr"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/container", "inlined_vector"]
    , ["@", "absl", "absl/functional", "any_invocable"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["src/core", "channel_args"]
    , ["src/core", "closure"]
    , ["src/core", "error"]
    , ["src/core", "ref_counted"]
    , ["src/core", "slice"]
    , ["src/core", "slice_buffer"]
    , ["src/core", "status_helper"]
    , ["src/core", "time"]
    ]
  }
, "http_connect_handshaker":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["http_connect_handshaker"]
  , "srcs": ["src/core/handshaker/http_connect/http_connect_handshaker.cc"]
  , "hdrs": ["src/core/handshaker/http_connect/http_connect_handshaker.h"]
  , "deps":
    [ "config"
    , "debug_location"
    , "exec_ctx"
    , "gpr"
    , "grpc_base"
    , "handshaker"
    , "httpcli"
    , "iomgr"
    , "ref_counted_ptr"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    , ["src/core", "channel_args"]
    , ["src/core", "closure"]
    , ["src/core", "error"]
    , ["src/core", "handshaker_factory"]
    , ["src/core", "handshaker_registry"]
    , ["src/core", "iomgr_fwd"]
    , ["src/core", "slice"]
    , ["src/core", "slice_buffer"]
    ]
  }
, "exec_ctx":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["exec_ctx"]
  , "srcs":
    [ "src/core/lib/iomgr/combiner.cc"
    , "src/core/lib/iomgr/exec_ctx.cc"
    , "src/core/lib/iomgr/executor.cc"
    , "src/core/lib/iomgr/iomgr_internal.cc"
    ]
  , "hdrs":
    [ "src/core/lib/iomgr/combiner.h"
    , "src/core/lib/iomgr/exec_ctx.h"
    , "src/core/lib/iomgr/executor.h"
    , "src/core/lib/iomgr/iomgr_internal.h"
    ]
  , "deps":
    [ "debug_location"
    , "gpr"
    , "grpc_public_hdrs"
    , "grpc_trace"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["src/core", "closure"]
    , ["src/core", "error"]
    , ["src/core", "experiments"]
    , ["src/core", "gpr_atm"]
    , ["src/core", "gpr_spinlock"]
    , ["src/core", "latent_see"]
    , ["src/core", "time"]
    , ["src/core", "useful"]
    ]
  }
, "sockaddr_utils":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["sockaddr_utils"]
  , "srcs": ["src/core/lib/address_utils/sockaddr_utils.cc"]
  , "hdrs": ["src/core/lib/address_utils/sockaddr_utils.h"]
  , "deps":
    [ "gpr"
    , "uri"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["src/core", "grpc_sockaddr"]
    , ["src/core", "iomgr_port"]
    , ["src/core", "resolved_address"]
    ]
  }
, "iomgr_timer":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["iomgr_timer"]
  , "srcs":
    [ "src/core/lib/iomgr/timer.cc"
    , "src/core/lib/iomgr/timer_generic.cc"
    , "src/core/lib/iomgr/timer_heap.cc"
    , "src/core/lib/iomgr/timer_manager.cc"
    ]
  , "hdrs":
    [ "src/core/lib/iomgr/iomgr.h"
    , "src/core/lib/iomgr/timer.h"
    , "src/core/lib/iomgr/timer_generic.h"
    , "src/core/lib/iomgr/timer_heap.h"
    , "src/core/lib/iomgr/timer_manager.h"
    ]
  , "deps":
    [ "event_engine_base_hdrs"
    , "exec_ctx"
    , "gpr"
    , "gpr_platform"
    , "grpc_trace"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["src/core", "closure"]
    , ["src/core", "gpr_manual_constructor"]
    , ["src/core", "gpr_spinlock"]
    , ["src/core", "iomgr_port"]
    , ["src/core", "time"]
    , ["src/core", "time_averaged_stats"]
    , ["src/core", "useful"]
    ]
  }
, "iomgr_internal_errqueue":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["iomgr_internal_errqueue"]
  , "srcs": ["src/core/lib/iomgr/internal_errqueue.cc"]
  , "hdrs": ["src/core/lib/iomgr/internal_errqueue.h"]
  , "deps":
    [ "gpr"
    , ["@", "absl", "absl/log", "log"]
    , ["src/core", "iomgr_port"]
    , ["src/core", "strerror"]
    ]
  }
, "iomgr_buffer_list":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["iomgr_buffer_list"]
  , "srcs": ["src/core/lib/iomgr/buffer_list.cc"]
  , "hdrs": ["src/core/lib/iomgr/buffer_list.h"]
  , "deps":
    [ "gpr"
    , "iomgr_internal_errqueue"
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    , ["src/core", "error"]
    , ["src/core", "iomgr_port"]
    ]
  }
, "uri":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["uri"]
  , "srcs": ["src/core/util/uri.cc"]
  , "hdrs": ["src/core/util/uri.h"]
  , "deps":
    [ "gpr"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["@", "absl", "absl/strings", "strings"]
    ]
  }
, "parse_address":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["parse_address"]
  , "srcs":
    [ "src/core/lib/address_utils/parse_address.cc"
    , "src/core/util/grpc_if_nametoindex_posix.cc"
    , "src/core/util/grpc_if_nametoindex_unsupported.cc"
    ]
  , "hdrs":
    [ "src/core/lib/address_utils/parse_address.h"
    , "src/core/util/grpc_if_nametoindex.h"
    ]
  , "deps":
    [ "gpr"
    , "uri"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["src/core", "error"]
    , ["src/core", "grpc_sockaddr"]
    , ["src/core", "iomgr_port"]
    , ["src/core", "resolved_address"]
    , ["src/core", "status_helper"]
    ]
  }
, "backoff":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["backoff"]
  , "srcs": ["src/core/util/backoff.cc"]
  , "hdrs": ["src/core/util/backoff.h"]
  , "deps":
    [ "gpr_platform"
    , ["@", "absl", "absl/random", "random"]
    , ["src/core", "experiments"]
    , ["src/core", "time"]
    ]
  }
, "stats":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["stats"]
  , "srcs": ["src/core/telemetry/stats.cc"]
  , "hdrs": ["src/core/telemetry/stats.h"]
  , "deps":
    [ "gpr"
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "span"]
    , ["src/core", "histogram_view"]
    , ["src/core", "no_destruct"]
    , ["src/core", "stats_data"]
    ]
  }
, "channel_stack_builder":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["channel_stack_builder"]
  , "srcs": ["src/core/lib/channel/channel_stack_builder.cc"]
  , "hdrs": ["src/core/lib/channel/channel_stack_builder.h"]
  , "deps":
    [ "gpr"
    , "ref_counted_ptr"
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["src/core", "channel_args"]
    , ["src/core", "channel_fwd"]
    , ["src/core", "channel_stack_type"]
    ]
  }
, "grpc_service_config_impl":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_service_config_impl"]
  , "srcs": ["src/core/service_config/service_config_impl.cc"]
  , "hdrs": ["src/core/service_config/service_config_impl.h"]
  , "deps":
    [ "config"
    , "gpr"
    , "ref_counted_ptr"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    , ["src/core", "channel_args"]
    , ["src/core", "grpc_service_config"]
    , ["src/core", "json"]
    , ["src/core", "json_args"]
    , ["src/core", "json_object_loader"]
    , ["src/core", "json_reader"]
    , ["src/core", "json_writer"]
    , ["src/core", "service_config_parser"]
    , ["src/core", "slice"]
    , ["src/core", "slice_refcount"]
    , ["src/core", "validation_errors"]
    ]
  }
, "endpoint_addresses":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["endpoint_addresses"]
  , "srcs": ["src/core/resolver/endpoint_addresses.cc"]
  , "hdrs": ["src/core/resolver/endpoint_addresses.h"]
  , "deps":
    [ "gpr"
    , "gpr_platform"
    , "sockaddr_utils"
    , ["@", "absl", "absl/functional", "function_ref"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["src/core", "channel_args"]
    , ["src/core", "resolved_address"]
    , ["src/core", "useful"]
    ]
  }
, "server_address":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["server_address"]
  , "hdrs": ["src/core/resolver/server_address.h"]
  , "deps": ["endpoint_addresses", "gpr_public_hdrs"]
  }
, "grpc_resolver":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_resolver"]
  , "srcs":
    ["src/core/resolver/resolver.cc", "src/core/resolver/resolver_registry.cc"]
  , "hdrs":
    [ "src/core/resolver/resolver.h"
    , "src/core/resolver/resolver_factory.h"
    , "src/core/resolver/resolver_registry.h"
    ]
  , "deps":
    [ "endpoint_addresses"
    , "gpr"
    , "grpc_trace"
    , "orphanable"
    , "ref_counted_ptr"
    , "server_address"
    , "uri"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["src/core", "channel_args"]
    , ["src/core", "grpc_service_config"]
    , ["src/core", "iomgr_fwd"]
    ]
  }
, "oob_backend_metric":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["oob_backend_metric"]
  , "srcs": ["src/core/load_balancing/oob_backend_metric.cc"]
  , "hdrs":
    [ "src/core/load_balancing/oob_backend_metric.h"
    , "src/core/load_balancing/oob_backend_metric_internal.h"
    ]
  , "deps":
    [ "channelz"
    , "debug_location"
    , "exec_ctx"
    , "gpr"
    , "grpc_client_channel"
    , "grpc_public_hdrs"
    , "grpc_trace"
    , "orphanable"
    , "ref_counted_ptr"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["src/core", "backend_metric_parser"]
    , ["src/core", "closure"]
    , ["src/core", "error"]
    , ["src/core", "grpc_backend_metric_data"]
    , ["src/core", "iomgr_fwd"]
    , ["src/core", "pollset_set"]
    , ["src/core", "slice"]
    , ["src/core", "subchannel_interface"]
    , ["src/core", "time"]
    , ["src/core", "unique_type_name"]
    , ["third_party/upb", "base"]
    , ["third_party/upb", "mem"]
    ]
  }
, "lb_child_policy_handler":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["lb_child_policy_handler"]
  , "srcs": ["src/core/load_balancing/child_policy_handler.cc"]
  , "hdrs": ["src/core/load_balancing/child_policy_handler.h"]
  , "deps":
    [ "config"
    , "debug_location"
    , "gpr_public_hdrs"
    , "grpc_public_hdrs"
    , "grpc_trace"
    , "orphanable"
    , "ref_counted_ptr"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["src/core", "channel_args"]
    , ["src/core", "connectivity_state"]
    , ["src/core", "delegating_helper"]
    , ["src/core", "lb_policy"]
    , ["src/core", "lb_policy_registry"]
    , ["src/core", "pollset_set"]
    , ["src/core", "resolved_address"]
    , ["src/core", "subchannel_interface"]
    ]
  }
, "grpc_client_channel":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_client_channel"]
  , "srcs":
    [ "src/core/client_channel/client_channel.cc"
    , "src/core/client_channel/client_channel_factory.cc"
    , "src/core/client_channel/client_channel_filter.cc"
    , "src/core/client_channel/client_channel_plugin.cc"
    , "src/core/client_channel/dynamic_filters.cc"
    , "src/core/client_channel/global_subchannel_pool.cc"
    , "src/core/client_channel/load_balanced_call_destination.cc"
    , "src/core/client_channel/local_subchannel_pool.cc"
    , "src/core/client_channel/retry_filter.cc"
    , "src/core/client_channel/retry_filter_legacy_call_data.cc"
    , "src/core/client_channel/subchannel.cc"
    , "src/core/client_channel/subchannel_stream_client.cc"
    ]
  , "hdrs":
    [ "src/core/client_channel/client_channel.h"
    , "src/core/client_channel/client_channel_factory.h"
    , "src/core/client_channel/client_channel_filter.h"
    , "src/core/client_channel/dynamic_filters.h"
    , "src/core/client_channel/global_subchannel_pool.h"
    , "src/core/client_channel/load_balanced_call_destination.h"
    , "src/core/client_channel/local_subchannel_pool.h"
    , "src/core/client_channel/retry_filter.h"
    , "src/core/client_channel/retry_filter_legacy_call_data.h"
    , "src/core/client_channel/subchannel.h"
    , "src/core/client_channel/subchannel_interface_internal.h"
    , "src/core/client_channel/subchannel_stream_client.h"
    ]
  , "deps":
    [ "backoff"
    , "call_combiner"
    , "call_tracer"
    , "channel"
    , "channel_arg_names"
    , "channelz"
    , "config"
    , "debug_location"
    , "endpoint_addresses"
    , "exec_ctx"
    , "gpr"
    , "grpc_base"
    , "grpc_public_hdrs"
    , "grpc_resolver"
    , "grpc_security_base"
    , "grpc_service_config_impl"
    , "grpc_trace"
    , "iomgr"
    , "lb_child_policy_handler"
    , "orphanable"
    , "promise"
    , "ref_counted_ptr"
    , "sockaddr_utils"
    , "stats"
    , "uri"
    , "work_serializer"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/cleanup", "cleanup"]
    , ["@", "absl", "absl/container", "flat_hash_set"]
    , ["@", "absl", "absl/container", "inlined_vector"]
    , ["@", "absl", "absl/functional", "any_invocable"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "cord"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    , ["@", "absl", "absl/types", "variant"]
    , ["@", "protobuf", "", "libprotobuf"]
    , ["src/core", "arena"]
    , ["src/core", "arena_promise"]
    , ["src/core", "backend_metric_parser"]
    , ["src/core", "blackboard"]
    , ["src/core", "call_destination"]
    , ["src/core", "call_filters"]
    , ["src/core", "call_spine"]
    , ["src/core", "cancel_callback"]
    , ["src/core", "channel_args"]
    , ["src/core", "channel_args_endpoint_config"]
    , ["src/core", "channel_fwd"]
    , ["src/core", "channel_init"]
    , ["src/core", "channel_stack_type"]
    , ["src/core", "client_channel_args"]
    , ["src/core", "client_channel_backup_poller"]
    , ["src/core", "client_channel_internal_header"]
    , ["src/core", "client_channel_service_config"]
    , ["src/core", "closure"]
    , ["src/core", "config_selector"]
    , ["src/core", "connectivity_state"]
    , ["src/core", "construct_destruct"]
    , ["src/core", "context"]
    , ["src/core", "dual_ref_counted"]
    , ["src/core", "error"]
    , ["src/core", "error_utils"]
    , ["src/core", "exec_ctx_wakeup_scheduler"]
    , ["src/core", "experiments"]
    , ["src/core", "gpr_manual_constructor"]
    , ["src/core", "grpc_backend_metric_data"]
    , ["src/core", "grpc_channel_idle_filter"]
    , ["src/core", "grpc_service_config"]
    , ["src/core", "idle_filter_state"]
    , ["src/core", "init_internally"]
    , ["src/core", "interception_chain"]
    , ["src/core", "iomgr_fwd"]
    , ["src/core", "json"]
    , ["src/core", "latch"]
    , ["src/core", "lb_metadata"]
    , ["src/core", "lb_policy"]
    , ["src/core", "lb_policy_registry"]
    , ["src/core", "loop"]
    , ["src/core", "map"]
    , ["src/core", "memory_quota"]
    , ["src/core", "metadata"]
    , ["src/core", "metadata_batch"]
    , ["src/core", "metrics"]
    , ["src/core", "observable"]
    , ["src/core", "pipe"]
    , ["src/core", "poll"]
    , ["src/core", "pollset_set"]
    , ["src/core", "proxy_mapper_registry"]
    , ["src/core", "ref_counted"]
    , ["src/core", "resolved_address"]
    , ["src/core", "resource_quota"]
    , ["src/core", "retry_interceptor"]
    , ["src/core", "retry_service_config"]
    , ["src/core", "retry_throttle"]
    , ["src/core", "seq"]
    , ["src/core", "single_set_ptr"]
    , ["src/core", "sleep"]
    , ["src/core", "slice"]
    , ["src/core", "slice_buffer"]
    , ["src/core", "slice_refcount"]
    , ["src/core", "stats_data"]
    , ["src/core", "status_helper"]
    , ["src/core", "subchannel_connector"]
    , ["src/core", "subchannel_interface"]
    , ["src/core", "subchannel_pool_interface"]
    , ["src/core", "time"]
    , ["src/core", "try_seq"]
    , ["src/core", "unique_type_name"]
    , ["src/core", "useful"]
    , ["src/core/ext/upb-gen", "upb-gen-lib"]
    ]
  }
, "grpc_resolver_dns_ares":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_resolver_dns_ares"]
  , "srcs":
    [ "src/core/resolver/dns/c_ares/dns_resolver_ares.cc"
    , "src/core/resolver/dns/c_ares/grpc_ares_ev_driver_posix.cc"
    , "src/core/resolver/dns/c_ares/grpc_ares_ev_driver_windows.cc"
    , "src/core/resolver/dns/c_ares/grpc_ares_wrapper.cc"
    , "src/core/resolver/dns/c_ares/grpc_ares_wrapper_posix.cc"
    , "src/core/resolver/dns/c_ares/grpc_ares_wrapper_windows.cc"
    ]
  , "hdrs":
    [ "src/core/resolver/dns/c_ares/dns_resolver_ares.h"
    , "src/core/resolver/dns/c_ares/grpc_ares_ev_driver.h"
    , "src/core/resolver/dns/c_ares/grpc_ares_wrapper.h"
    ]
  , "deps":
    [ "backoff"
    , "channel_arg_names"
    , "config"
    , "config_vars"
    , "debug_location"
    , "endpoint_addresses"
    , "exec_ctx"
    , "gpr"
    , "grpc_base"
    , "grpc_grpclb_balancer_addresses"
    , "grpc_resolver"
    , "grpc_service_config_impl"
    , "grpc_trace"
    , "iomgr"
    , "iomgr_timer"
    , "orphanable"
    , "parse_address"
    , "ref_counted_ptr"
    , "sockaddr_utils"
    , "uri"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/functional", "any_invocable"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    , ["@", "cares", "", "ares"]
    , ["src/core", "channel_args"]
    , ["src/core", "closure"]
    , ["src/core", "error"]
    , ["src/core", "error_utils"]
    , ["src/core", "grpc_service_config"]
    , ["src/core", "grpc_sockaddr"]
    , ["src/core", "iomgr_fwd"]
    , ["src/core", "iomgr_port"]
    , ["src/core", "polling_resolver"]
    , ["src/core", "pollset_set"]
    , ["src/core", "resolved_address"]
    , ["src/core", "service_config_helper"]
    , ["src/core", "slice"]
    , ["src/core", "status_helper"]
    , ["src/core", "time"]
    , ["third_party/address_sorting", "address_sorting"]
    ]
  }
, "httpcli":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["httpcli"]
  , "srcs":
    [ "src/core/util/http_client/format_request.cc"
    , "src/core/util/http_client/httpcli.cc"
    , "src/core/util/http_client/parser.cc"
    ]
  , "hdrs":
    [ "src/core/util/http_client/format_request.h"
    , "src/core/util/http_client/httpcli.h"
    , "src/core/util/http_client/parser.h"
    ]
  , "deps":
    [ "config"
    , "debug_location"
    , "event_engine_base_hdrs"
    , "exec_ctx"
    , "gpr"
    , "grpc_base"
    , "grpc_public_hdrs"
    , "grpc_security_base"
    , "grpc_trace"
    , "handshaker"
    , "iomgr"
    , "orphanable"
    , "ref_counted_ptr"
    , "resource_quota_api"
    , "uri"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/functional", "bind_front"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    , ["src/core", "channel_args"]
    , ["src/core", "channel_args_preconditioning"]
    , ["src/core", "closure"]
    , ["src/core", "error"]
    , ["src/core", "error_utils"]
    , ["src/core", "event_engine_common"]
    , ["src/core", "event_engine_tcp_socket_utils"]
    , ["src/core", "handshaker_registry"]
    , ["src/core", "iomgr_fwd"]
    , ["src/core", "pollset_set"]
    , ["src/core", "resource_quota"]
    , ["src/core", "slice"]
    , ["src/core", "slice_refcount"]
    , ["src/core", "status_helper"]
    , ["src/core", "tcp_connect_handshaker"]
    , ["src/core", "time"]
    ]
  }
, "grpc_alts_credentials":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_alts_credentials"]
  , "srcs":
    [ "src/core/lib/security/credentials/alts/alts_credentials.cc"
    , "src/core/lib/security/security_connector/alts/alts_security_connector.cc"
    ]
  , "hdrs":
    [ "src/core/lib/security/credentials/alts/alts_credentials.h"
    , "src/core/lib/security/security_connector/alts/alts_security_connector.h"
    ]
  , "deps":
    [ "alts_util"
    , "channel_arg_names"
    , "debug_location"
    , "exec_ctx"
    , "gpr"
    , "grpc_base"
    , "grpc_core_credentials_header"
    , "grpc_public_hdrs"
    , "grpc_security_base"
    , "handshaker"
    , "iomgr"
    , "promise"
    , "ref_counted_ptr"
    , "tsi_alts_credentials"
    , "tsi_base"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    , ["src/core", "arena_promise"]
    , ["src/core", "channel_args"]
    , ["src/core", "closure"]
    , ["src/core", "error"]
    , ["src/core", "iomgr_fwd"]
    , ["src/core", "slice"]
    , ["src/core", "slice_refcount"]
    , ["src/core", "unique_type_name"]
    , ["src/core", "useful"]
    ]
  }
, "tsi_fake_credentials":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["tsi_fake_credentials"]
  , "srcs": ["src/core/tsi/fake_transport_security.cc"]
  , "hdrs": ["src/core/tsi/fake_transport_security.h"]
  , "deps":
    [ "gpr"
    , "tsi_base"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["src/core", "dump_args"]
    , ["src/core", "slice"]
    , ["src/core", "useful"]
    ]
  }
, "grpc_jwt_credentials":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_jwt_credentials"]
  , "srcs":
    [ "src/core/lib/security/credentials/jwt/json_token.cc"
    , "src/core/lib/security/credentials/jwt/jwt_credentials.cc"
    , "src/core/lib/security/credentials/jwt/jwt_verifier.cc"
    ]
  , "hdrs":
    [ "src/core/lib/security/credentials/jwt/json_token.h"
    , "src/core/lib/security/credentials/jwt/jwt_credentials.h"
    , "src/core/lib/security/credentials/jwt/jwt_verifier.h"
    ]
  , "deps":
    [ "exec_ctx"
    , "gpr"
    , "grpc_base"
    , "grpc_core_credentials_header"
    , "grpc_credentials_util"
    , "grpc_security_base"
    , "grpc_trace"
    , "httpcli"
    , "iomgr"
    , "orphanable"
    , "promise"
    , "ref_counted_ptr"
    , "uri"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/time", "time"]
    , ["@", "absl", "absl/types", "optional"]
    , ["@", "ssl", "", "crypto"]
    , ["@", "ssl", "", "ssl"]
    , ["src/core", "arena_promise"]
    , ["src/core", "closure"]
    , ["src/core", "error"]
    , ["src/core", "gpr_manual_constructor"]
    , ["src/core", "httpcli_ssl_credentials"]
    , ["src/core", "iomgr_fwd"]
    , ["src/core", "json"]
    , ["src/core", "json_reader"]
    , ["src/core", "json_writer"]
    , ["src/core", "metadata_batch"]
    , ["src/core", "slice"]
    , ["src/core", "slice_refcount"]
    , ["src/core", "time"]
    , ["src/core", "tsi_ssl_types"]
    , ["src/core", "unique_type_name"]
    , ["src/core", "useful"]
    ]
  }
, "grpc_credentials_util":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_credentials_util"]
  , "srcs":
    [ "src/core/lib/security/credentials/tls/tls_utils.cc"
    , "src/core/lib/security/security_connector/load_system_roots_fallback.cc"
    , "src/core/lib/security/security_connector/load_system_roots_supported.cc"
    , "src/core/lib/security/security_connector/load_system_roots_windows.cc"
    , "src/core/lib/security/util/json_util.cc"
    ]
  , "hdrs":
    [ "src/core/lib/security/credentials/tls/tls_utils.h"
    , "src/core/lib/security/security_connector/load_system_roots.h"
    , "src/core/lib/security/security_connector/load_system_roots_supported.h"
    , "src/core/lib/security/util/json_util.h"
    ]
  , "deps":
    [ "config_vars"
    , "gpr"
    , "grpc_base"
    , "grpc_security_base"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["src/core", "error"]
    , ["src/core", "json"]
    , ["src/core", "load_file"]
    , ["src/core", "useful"]
    ]
  }
, "tsi_alts_credentials":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["tsi_alts_credentials"]
  , "srcs":
    [ "src/core/tsi/alts/handshaker/alts_handshaker_client.cc"
    , "src/core/tsi/alts/handshaker/alts_shared_resource.cc"
    , "src/core/tsi/alts/handshaker/alts_tsi_handshaker.cc"
    , "src/core/tsi/alts/handshaker/alts_tsi_utils.cc"
    ]
  , "hdrs":
    [ "src/core/tsi/alts/handshaker/alts_handshaker_client.h"
    , "src/core/tsi/alts/handshaker/alts_shared_resource.h"
    , "src/core/tsi/alts/handshaker/alts_tsi_handshaker.h"
    , "src/core/tsi/alts/handshaker/alts_tsi_handshaker_private.h"
    , "src/core/tsi/alts/handshaker/alts_tsi_utils.h"
    ]
  , "deps":
    [ "alts_util"
    , "channel"
    , "channel_create"
    , "exec_ctx"
    , "gpr"
    , "grpc_base"
    , "grpc_core_credentials_header"
    , "grpc_security_base"
    , "tsi_alts_frame_protector"
    , "tsi_base"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["src/core", "channel_args"]
    , ["src/core", "closure"]
    , ["src/core", "env"]
    , ["src/core", "pollset_set"]
    , ["src/core", "slice"]
    , ["src/core/ext/upb-gen", "upb-gen-lib"]
    , ["third_party/upb", "base"]
    , ["third_party/upb", "mem"]
    ]
  }
, "tsi_alts_frame_protector":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["tsi_alts_frame_protector"]
  , "srcs":
    [ "src/core/tsi/alts/crypt/aes_gcm.cc"
    , "src/core/tsi/alts/crypt/gsec.cc"
    , "src/core/tsi/alts/frame_protector/alts_counter.cc"
    , "src/core/tsi/alts/frame_protector/alts_crypter.cc"
    , "src/core/tsi/alts/frame_protector/alts_frame_protector.cc"
    , "src/core/tsi/alts/frame_protector/alts_record_protocol_crypter_common.cc"
    , "src/core/tsi/alts/frame_protector/alts_seal_privacy_integrity_crypter.cc"
    , "src/core/tsi/alts/frame_protector/alts_unseal_privacy_integrity_crypter.cc"
    , "src/core/tsi/alts/frame_protector/frame_handler.cc"
    , "src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_integrity_only_record_protocol.cc"
    , "src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_privacy_integrity_record_protocol.cc"
    , "src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol_common.cc"
    , "src/core/tsi/alts/zero_copy_frame_protector/alts_iovec_record_protocol.cc"
    , "src/core/tsi/alts/zero_copy_frame_protector/alts_zero_copy_grpc_protector.cc"
    ]
  , "hdrs":
    [ "src/core/tsi/alts/crypt/gsec.h"
    , "src/core/tsi/alts/frame_protector/alts_counter.h"
    , "src/core/tsi/alts/frame_protector/alts_crypter.h"
    , "src/core/tsi/alts/frame_protector/alts_frame_protector.h"
    , "src/core/tsi/alts/frame_protector/alts_record_protocol_crypter_common.h"
    , "src/core/tsi/alts/frame_protector/frame_handler.h"
    , "src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_integrity_only_record_protocol.h"
    , "src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_privacy_integrity_record_protocol.h"
    , "src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol.h"
    , "src/core/tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol_common.h"
    , "src/core/tsi/alts/zero_copy_frame_protector/alts_iovec_record_protocol.h"
    , "src/core/tsi/alts/zero_copy_frame_protector/alts_zero_copy_grpc_protector.h"
    ]
  , "deps":
    [ "event_engine_base_hdrs"
    , "exec_ctx"
    , "gpr"
    , "gpr_platform"
    , "tsi_base"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/types", "span"]
    , ["@", "ssl", "", "crypto"]
    , ["@", "ssl", "", "ssl"]
    , ["src/core", "slice"]
    , ["src/core", "slice_buffer"]
    , ["src/core", "useful"]
    ]
  }
, "tsi_ssl_session_cache":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["tsi_ssl_session_cache"]
  , "srcs":
    [ "src/core/tsi/ssl/session_cache/ssl_session_boringssl.cc"
    , "src/core/tsi/ssl/session_cache/ssl_session_cache.cc"
    , "src/core/tsi/ssl/session_cache/ssl_session_openssl.cc"
    ]
  , "hdrs":
    [ "src/core/tsi/ssl/session_cache/ssl_session.h"
    , "src/core/tsi/ssl/session_cache/ssl_session_cache.h"
    ]
  , "deps":
    [ "cpp_impl_of"
    , "gpr"
    , "grpc_public_hdrs"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/memory", "memory"]
    , ["@", "ssl", "", "ssl"]
    , ["src/core", "ref_counted"]
    , ["src/core", "slice"]
    ]
  }
, "tsi_ssl_credentials":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["tsi_ssl_credentials"]
  , "srcs":
    [ "src/core/lib/security/security_connector/ssl_utils.cc"
    , "src/core/tsi/ssl/key_logging/ssl_key_logging.cc"
    , "src/core/tsi/ssl_transport_security.cc"
    , "src/core/tsi/ssl_transport_security_utils.cc"
    ]
  , "hdrs":
    [ "src/core/lib/security/security_connector/ssl_utils.h"
    , "src/core/tsi/ssl/key_logging/ssl_key_logging.h"
    , "src/core/tsi/ssl_transport_security.h"
    , "src/core/tsi/ssl_transport_security_utils.h"
    ]
  , "deps":
    [ "channel_arg_names"
    , "config_vars"
    , "gpr"
    , "grpc_base"
    , "grpc_core_credentials_header"
    , "grpc_credentials_util"
    , "grpc_public_hdrs"
    , "grpc_security_base"
    , "ref_counted_ptr"
    , "tsi_base"
    , "tsi_ssl_session_cache"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "ssl", "", "crypto"]
    , ["@", "ssl", "", "ssl"]
    , ["src/core", "channel_args"]
    , ["src/core", "error"]
    , ["src/core", "grpc_crl_provider"]
    , ["src/core", "grpc_transport_chttp2_alpn"]
    , ["src/core", "load_file"]
    , ["src/core", "ref_counted"]
    , ["src/core", "slice"]
    , ["src/core", "tsi_ssl_types"]
    , ["src/core", "useful"]
    ]
  }
, "grpc_http_filters":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_http_filters"]
  , "srcs":
    [ "src/core/ext/filters/http/client/http_client_filter.cc"
    , "src/core/ext/filters/http/http_filters_plugin.cc"
    , "src/core/ext/filters/http/message_compress/compression_filter.cc"
    , "src/core/ext/filters/http/server/http_server_filter.cc"
    ]
  , "hdrs":
    [ "src/core/ext/filters/http/client/http_client_filter.h"
    , "src/core/ext/filters/http/message_compress/compression_filter.h"
    , "src/core/ext/filters/http/server/http_server_filter.h"
    ]
  , "deps":
    [ "call_tracer"
    , "channel_arg_names"
    , "config"
    , "gpr"
    , "grpc_base"
    , "grpc_public_hdrs"
    , "grpc_trace"
    , "promise"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    , ["src/core", "activity"]
    , ["src/core", "arena"]
    , ["src/core", "arena_promise"]
    , ["src/core", "channel_args"]
    , ["src/core", "channel_fwd"]
    , ["src/core", "channel_stack_type"]
    , ["src/core", "compression"]
    , ["src/core", "context"]
    , ["src/core", "experiments"]
    , ["src/core", "grpc_message_size_filter"]
    , ["src/core", "latch"]
    , ["src/core", "latent_see"]
    , ["src/core", "map"]
    , ["src/core", "metadata_batch"]
    , ["src/core", "percent_encoding"]
    , ["src/core", "pipe"]
    , ["src/core", "poll"]
    , ["src/core", "prioritized_race"]
    , ["src/core", "race"]
    , ["src/core", "slice"]
    , ["src/core", "slice_buffer"]
    , ["src/core", "status_conversion"]
    ]
  }
, "grpc_grpclb_balancer_addresses":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_grpclb_balancer_addresses"]
  , "srcs": ["src/core/load_balancing/grpclb/grpclb_balancer_addresses.cc"]
  , "hdrs": ["src/core/load_balancing/grpclb/grpclb_balancer_addresses.h"]
  , "deps":
    [ "endpoint_addresses"
    , "gpr_platform"
    , "grpc_public_hdrs"
    , ["src/core", "channel_args"]
    , ["src/core", "useful"]
    ]
  }
, "xds_client":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["xds_client"]
  , "srcs":
    [ "src/core/xds/xds_client/lrs_client.cc"
    , "src/core/xds/xds_client/xds_api.cc"
    , "src/core/xds/xds_client/xds_bootstrap.cc"
    , "src/core/xds/xds_client/xds_client.cc"
    ]
  , "hdrs":
    [ "src/core/xds/xds_client/lrs_client.h"
    , "src/core/xds/xds_client/xds_api.h"
    , "src/core/xds/xds_client/xds_bootstrap.h"
    , "src/core/xds/xds_client/xds_channel_args.h"
    , "src/core/xds/xds_client/xds_client.h"
    , "src/core/xds/xds_client/xds_locality.h"
    , "src/core/xds/xds_client/xds_metrics.h"
    , "src/core/xds/xds_client/xds_resource_type.h"
    , "src/core/xds/xds_client/xds_resource_type_impl.h"
    , "src/core/xds/xds_client/xds_transport.h"
    ]
  , "deps":
    [ "backoff"
    , "call_tracer"
    , "debug_location"
    , "endpoint_addresses"
    , "event_engine_base_hdrs"
    , "exec_ctx"
    , "gpr"
    , "grpc_trace"
    , "orphanable"
    , "ref_counted_ptr"
    , "uri"
    , "work_serializer"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/cleanup", "cleanup"]
    , ["@", "absl", "absl/container", "flat_hash_set"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/memory", "memory"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    , ["@", "protobuf", "", "libprotobuf"]
    , ["src/core", "default_event_engine"]
    , ["src/core", "dual_ref_counted"]
    , ["src/core", "env"]
    , ["src/core", "grpc_backend_metric_data"]
    , ["src/core", "json"]
    , ["src/core", "per_cpu"]
    , ["src/core", "ref_counted"]
    , ["src/core", "ref_counted_string"]
    , ["src/core", "time"]
    , ["src/core", "upb_utils"]
    , ["src/core", "useful"]
    , ["src/core", "xds_backend_metric_propagation"]
    , ["src/core/ext/upb-gen", "upb-gen-lib"]
    , ["src/core/ext/upbdefs-gen", "upbdefs-gen-lib"]
    , ["third_party/upb", "base"]
    , ["third_party/upb", "json"]
    , ["third_party/upb", "mem"]
    , ["third_party/upb", "reflection"]
    , ["third_party/upb", "text"]
    ]
  }
, "grpc_mock_cel":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_mock_cel"]
  , "hdrs":
    [ "src/core/lib/security/authorization/mock_cel/activation.h"
    , "src/core/lib/security/authorization/mock_cel/cel_expr_builder_factory.h"
    , "src/core/lib/security/authorization/mock_cel/cel_expression.h"
    , "src/core/lib/security/authorization/mock_cel/cel_value.h"
    , "src/core/lib/security/authorization/mock_cel/evaluator_core.h"
    , "src/core/lib/security/authorization/mock_cel/flat_expr_builder.h"
    ]
  , "deps":
    [ "gpr_public_hdrs"
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "span"]
    , ["src/core/ext/upb-gen", "upb-gen-lib"]
    ]
  }
, "grpc_resolver_fake":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_resolver_fake"]
  , "srcs": ["src/core/resolver/fake/fake_resolver.cc"]
  , "hdrs": ["src/core/resolver/fake/fake_resolver.h"]
  , "deps":
    [ "config"
    , "debug_location"
    , "gpr"
    , "grpc_public_hdrs"
    , "grpc_resolver"
    , "orphanable"
    , "ref_counted_ptr"
    , "server_address"
    , "uri"
    , "work_serializer"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["src/core", "channel_args"]
    , ["src/core", "notification"]
    , ["src/core", "ref_counted"]
    , ["src/core", "useful"]
    ]
  }
, "chttp2_frame":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["chttp2_frame"]
  , "srcs": ["src/core/ext/transport/chttp2/transport/frame.cc"]
  , "hdrs": ["src/core/ext/transport/chttp2/transport/frame.h"]
  , "deps":
    [ "gpr"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/status", "statusor"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "span"]
    , ["@", "absl", "absl/types", "variant"]
    , ["src/core", "slice"]
    , ["src/core", "slice_buffer"]
    ]
  }
, "chttp2_legacy_frame":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["chttp2_legacy_frame"]
  , "hdrs": ["src/core/ext/transport/chttp2/transport/legacy_frame.h"]
  , "deps": ["gpr"]
  }
, "hpack_parser_table":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["hpack_parser_table"]
  , "srcs": ["src/core/ext/transport/chttp2/transport/hpack_parser_table.cc"]
  , "hdrs": ["src/core/ext/transport/chttp2/transport/hpack_parser_table.h"]
  , "deps":
    [ "gpr"
    , "gpr_platform"
    , "grpc_trace"
    , "hpack_parse_result"
    , "stats"
    , ["@", "absl", "absl/functional", "function_ref"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["src/core", "hpack_constants"]
    , ["src/core", "metadata_batch"]
    , ["src/core", "no_destruct"]
    , ["src/core", "parsed_metadata"]
    , ["src/core", "slice"]
    , ["src/core", "unique_ptr_with_bitset"]
    ]
  }
, "hpack_parse_result":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["hpack_parse_result"]
  , "srcs": ["src/core/ext/transport/chttp2/transport/hpack_parse_result.cc"]
  , "hdrs": ["src/core/ext/transport/chttp2/transport/hpack_parse_result.h"]
  , "deps":
    [ "gpr"
    , "grpc_base"
    , "ref_counted_ptr"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    , ["src/core", "error"]
    , ["src/core", "hpack_constants"]
    , ["src/core", "ref_counted"]
    , ["src/core", "slice"]
    , ["src/core", "status_helper"]
    ]
  }
, "hpack_parser":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["hpack_parser"]
  , "srcs": ["src/core/ext/transport/chttp2/transport/hpack_parser.cc"]
  , "hdrs": ["src/core/ext/transport/chttp2/transport/hpack_parser.h"]
  , "deps":
    [ "call_tracer"
    , "chttp2_legacy_frame"
    , "gpr"
    , "gpr_platform"
    , "grpc_base"
    , "grpc_public_hdrs"
    , "grpc_trace"
    , "hpack_parse_result"
    , "hpack_parser_table"
    , "stats"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/random", "bit_gen_ref"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    , ["@", "absl", "absl/types", "span"]
    , ["@", "absl", "absl/types", "variant"]
    , ["src/core", "decode_huff"]
    , ["src/core", "error"]
    , ["src/core", "hpack_constants"]
    , ["src/core", "match"]
    , ["src/core", "metadata_batch"]
    , ["src/core", "metadata_info"]
    , ["src/core", "parsed_metadata"]
    , ["src/core", "random_early_detection"]
    , ["src/core", "slice"]
    , ["src/core", "slice_refcount"]
    , ["src/core", "stats_data"]
    ]
  }
, "hpack_encoder":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["hpack_encoder"]
  , "srcs": ["src/core/ext/transport/chttp2/transport/hpack_encoder.cc"]
  , "hdrs": ["src/core/ext/transport/chttp2/transport/hpack_encoder.h"]
  , "deps":
    [ "call_tracer"
    , "chttp2_bin_encoder"
    , "chttp2_legacy_frame"
    , "chttp2_varint"
    , "gpr"
    , "gpr_platform"
    , "grpc_base"
    , "grpc_public_hdrs"
    , "grpc_trace"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["src/core", "hpack_constants"]
    , ["src/core", "hpack_encoder_table"]
    , ["src/core", "metadata_batch"]
    , ["src/core", "metadata_compression_traits"]
    , ["src/core", "slice"]
    , ["src/core", "slice_buffer"]
    , ["src/core", "time"]
    , ["src/core", "timeout_encoding"]
    ]
  }
, "chttp2_bin_encoder":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["chttp2_bin_encoder"]
  , "srcs": ["src/core/ext/transport/chttp2/transport/bin_encoder.cc"]
  , "hdrs": ["src/core/ext/transport/chttp2/transport/bin_encoder.h"]
  , "deps":
    [ "gpr"
    , "gpr_platform"
    , ["@", "absl", "absl/log", "check"]
    , ["src/core", "huffsyms"]
    , ["src/core", "slice"]
    ]
  }
, "chttp2_varint":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["chttp2_varint"]
  , "srcs": ["src/core/ext/transport/chttp2/transport/varint.cc"]
  , "hdrs": ["src/core/ext/transport/chttp2/transport/varint.h"]
  , "deps":
    [ "gpr"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/log", "check"]
    ]
  }
, "chttp2_context_list_entry":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["chttp2_context_list_entry"]
  , "hdrs": ["src/core/ext/transport/chttp2/transport/context_list_entry.h"]
  , "deps": ["gpr", "tcp_tracer"]
  }
, "tcp_tracer":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["tcp_tracer"]
  , "hdrs": ["src/core/telemetry/tcp_tracer.h"]
  , "deps":
    [ "gpr"
    , ["@", "absl", "absl/time", "time"]
    , ["@", "absl", "absl/types", "optional"]
    ]
  }
, "grpc_http2_client_transport":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["chttp2_varint"]
  , "srcs":
    ["src/core/ext/transport/chttp2/transport/http2_client_transport.cc"]
  , "hdrs":
    ["src/core/ext/transport/chttp2/transport/http2_client_transport.h"]
  , "deps":
    [ "grpc_base"
    , "hpack_encoder"
    , "hpack_parser"
    , ["src/core", "grpc_promise_endoint"]
    ]
  }
, "grpc_http2_server_transport":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["chttp2_varint"]
  , "srcs":
    ["src/core/ext/transport/chttp2/transport/http2_server_transport.cc"]
  , "hdrs":
    ["src/core/ext/transport/chttp2/transport/http2_server_transport.h"]
  , "deps":
    [ "grpc_base"
    , "hpack_encoder"
    , "hpack_parser"
    , ["src/core", "grpc_promise_endoint"]
    ]
  }
, "grpc_transport_chttp2":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpc_transport_chttp2"]
  , "srcs":
    [ "src/core/ext/transport/chttp2/transport/bin_decoder.cc"
    , "src/core/ext/transport/chttp2/transport/call_tracer_wrapper.cc"
    , "src/core/ext/transport/chttp2/transport/chttp2_transport.cc"
    , "src/core/ext/transport/chttp2/transport/frame_data.cc"
    , "src/core/ext/transport/chttp2/transport/frame_goaway.cc"
    , "src/core/ext/transport/chttp2/transport/frame_ping.cc"
    , "src/core/ext/transport/chttp2/transport/frame_rst_stream.cc"
    , "src/core/ext/transport/chttp2/transport/frame_security.cc"
    , "src/core/ext/transport/chttp2/transport/frame_settings.cc"
    , "src/core/ext/transport/chttp2/transport/frame_window_update.cc"
    , "src/core/ext/transport/chttp2/transport/parsing.cc"
    , "src/core/ext/transport/chttp2/transport/stream_lists.cc"
    , "src/core/ext/transport/chttp2/transport/writing.cc"
    ]
  , "hdrs":
    [ "src/core/ext/transport/chttp2/transport/bin_decoder.h"
    , "src/core/ext/transport/chttp2/transport/call_tracer_wrapper.h"
    , "src/core/ext/transport/chttp2/transport/chttp2_transport.h"
    , "src/core/ext/transport/chttp2/transport/frame_data.h"
    , "src/core/ext/transport/chttp2/transport/frame_goaway.h"
    , "src/core/ext/transport/chttp2/transport/frame_ping.h"
    , "src/core/ext/transport/chttp2/transport/frame_rst_stream.h"
    , "src/core/ext/transport/chttp2/transport/frame_security.h"
    , "src/core/ext/transport/chttp2/transport/frame_settings.h"
    , "src/core/ext/transport/chttp2/transport/frame_window_update.h"
    , "src/core/ext/transport/chttp2/transport/internal.h"
    , "src/core/ext/transport/chttp2/transport/stream_lists.h"
    ]
  , "deps":
    [ "call_tracer"
    , "channel_arg_names"
    , "channelz"
    , "chttp2_context_list_entry"
    , "chttp2_legacy_frame"
    , "chttp2_varint"
    , "config_vars"
    , "debug_location"
    , "exec_ctx"
    , "gpr"
    , "grpc_base"
    , "grpc_public_hdrs"
    , "grpc_trace"
    , "hpack_encoder"
    , "hpack_parser"
    , "hpack_parser_table"
    , "httpcli"
    , "iomgr"
    , "iomgr_buffer_list"
    , "ref_counted_ptr"
    , "stats"
    , "tcp_tracer"
    , ["@", "absl", "absl/base", "core_headers"]
    , ["@", "absl", "absl/container", "flat_hash_map"]
    , ["@", "absl", "absl/functional", "bind_front"]
    , ["@", "absl", "absl/hash", "hash"]
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/meta", "type_traits"]
    , ["@", "absl", "absl/random", "bit_gen_ref"]
    , ["@", "absl", "absl/random", "distributions"]
    , ["@", "absl", "absl/random", "random"]
    , ["@", "absl", "absl/status", "status"]
    , ["@", "absl", "absl/strings", "cord"]
    , ["@", "absl", "absl/strings", "str_format"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "optional"]
    , ["@", "absl", "absl/types", "variant"]
    , ["src/core", "arena"]
    , ["src/core", "bdp_estimator"]
    , ["src/core", "bitset"]
    , ["src/core", "channel_args"]
    , ["src/core", "chttp2_flow_control"]
    , ["src/core", "closure"]
    , ["src/core", "connectivity_state"]
    , ["src/core", "error"]
    , ["src/core", "error_utils"]
    , ["src/core", "event_engine_extensions"]
    , ["src/core", "event_engine_query_extensions"]
    , ["src/core", "experiments"]
    , ["src/core", "gpr_manual_constructor"]
    , ["src/core", "http2_errors"]
    , ["src/core", "http2_settings"]
    , ["src/core", "init_internally"]
    , ["src/core", "iomgr_fwd"]
    , ["src/core", "iomgr_port"]
    , ["src/core", "match"]
    , ["src/core", "memory_quota"]
    , ["src/core", "metadata_batch"]
    , ["src/core", "metadata_info"]
    , ["src/core", "ping_abuse_policy"]
    , ["src/core", "ping_callbacks"]
    , ["src/core", "ping_rate_policy"]
    , ["src/core", "poll"]
    , ["src/core", "random_early_detection"]
    , ["src/core", "ref_counted"]
    , ["src/core", "resource_quota"]
    , ["src/core", "slice"]
    , ["src/core", "slice_buffer"]
    , ["src/core", "slice_refcount"]
    , ["src/core", "stats_data"]
    , ["src/core", "status_conversion"]
    , ["src/core", "status_helper"]
    , ["src/core", "time"]
    , ["src/core", "transport_framing_endpoint_extension"]
    , ["src/core", "useful"]
    , ["src/core", "write_size_policy"]
    ]
  }
, "grpcpp_status":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpcpp_status"]
  , "srcs": ["src/cpp/util/status.cc"]
  , "hdrs":
    [ "include/grpc++/impl/codegen/status.h"
    , "include/grpc++/support/status.h"
    , "include/grpcpp/impl/codegen/status.h"
    , "include/grpcpp/impl/status.h"
    , "include/grpcpp/support/status.h"
    ]
  , "deps": ["gpr_platform", "grpc++_public_hdrs", "grpc_public_hdrs"]
  }
, "grpcpp_chaotic_good":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["grpcpp_chaotic_good"]
  , "srcs": ["src/cpp/ext/chaotic_good.cc"]
  , "hdrs": ["src/cpp/ext/chaotic_good.h"]
  , "deps":
    [ "gpr"
    , "grpc++_base"
    , "grpc_public_hdrs"
    , ["src/core", "chaotic_good_connector"]
    , ["src/core", "chaotic_good_server"]
    ]
  }
, "subprocess":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["subprocess"]
  , "srcs":
    [ "src/core/util/subprocess_poxis.cc"
    , "src/core/util/subprocess_windows.cc"
    ]
  , "hdrs": ["src/core/util/subprocess.h"]
  , "deps":
    [ "gpr"
    , ["@", "absl", "absl/log", "check"]
    , ["@", "absl", "absl/log", "log"]
    , ["@", "absl", "absl/strings", "strings"]
    , ["@", "absl", "absl/types", "span"]
    , ["src/core", "strerror"]
    , ["src/core", "tchar"]
    ]
  }
, "global_callback_hook":
  { "type": ["@", "rules", "CC", "library"]
  , "name": ["global_callback_hook"]
  , "srcs": ["src/cpp/client/global_callback_hook.cc"]
  , "hdrs": [["include/grpcpp", "global_callback_hook_headers"]]
  , "deps":
    [ ["@", "absl", "absl/base", "no_destructor"]
    , ["@", "absl", "absl/functional", "function_ref"]
    , ["@", "absl", "absl/log", "check"]
    ]
  }
, "grpc_cpp_plugin":
  { "type": "export"
  , "target": ["src/compiler", "grpc_cpp_plugin"]
  , "flexible_config":
    [ "OS"
    , "ARCH"
    , "HOST_ARCH"
    , "TARGET_ARCH"
    , "TOOLCHAIN_CONFIG"
    , "DEBUG"
    , "CC"
    , "CXX"
    , "CFLAGS"
    , "CXXFLAGS"
    , "ADD_CFLAGS"
    , "ADD_CXXFLAGS"
    , "AR"
    , "ENV"
    , "PKG_CONFIG_ARGS"
    ]
  }
, "grpc_cpp_plugin (no debug)":
  { "type": "configure"
  , "target": "grpc_cpp_plugin"
  , "config": {"type": "'", "$1": {"DEBUG": null}}
  }
, "toolchain":
  { "type": ["@", "rules", "CC", "install-with-deps"]
  , "targets": ["grpc_cpp_plugin (no debug)"]
  }
}
