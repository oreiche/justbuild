{ "equality":
  { "type": ["@", "rules", "shell/test", "script"]
  , "name": ["equality"]
  , "test": ["action-equality.sh"]
  , "keep": ["graph.json"]
  , "deps": [["", "tool-under-test"]]
  }
, "equality-timeout":
  { "type": ["@", "rules", "shell/test", "script"]
  , "name": ["equality-timeout"]
  , "test": ["action-equality-timeout.sh"]
  , "keep":
    [ "rules/graph-null.json"
    , "rules/graph-1.json"
    , "rules/graph-2.json"
    , "generic/graph-null.json"
    , "generic/graph-1.json"
    , "generic/graph-2.json"
    ]
  , "deps": [["", "tool-under-test"]]
  }
, "equality-properties":
  { "type": ["@", "rules", "shell/test", "script"]
  , "name": ["equality-properties"]
  , "test": ["action-equality-properties.sh"]
  , "keep":
    [ "rules/graph-null.json"
    , "rules/graph-empty.json"
    , "rules/graph-set.json"
    , "generic/graph-null.json"
    , "generic/graph-empty.json"
    , "generic/graph-set.json"
    ]
  , "deps": [["", "tool-under-test"]]
  }
, "trees":
  { "type": ["@", "rules", "shell/test", "script"]
  , "name": ["trees"]
  , "test": ["nested-trees.sh"]
  , "keep": ["blobs.json", "trees.json", "out/index.txt"]
  , "deps": [["", "tool-under-test"]]
  }
, "conflicts":
  { "type": ["@", "rules", "shell/test", "script"]
  , "name": ["conflicts"]
  , "test": ["conflicts.sh"]
  , "deps": [["", "tool-under-test"]]
  }
, "incomplete-retry":
  { "type": ["end-to-end", "with remote"]
  , "name": ["incompete-retry"]
  , "test": ["incomplete-retry.sh"]
  , "deps": [["", "tool-under-test"]]
  }
, "error-reporting":
  { "type": ["@", "rules", "shell/test", "script"]
  , "name": ["error-reporting"]
  , "test": ["error-reporting.sh"]
  , "deps": [["", "tool-under-test"]]
  }
, "identical-inputs (real)":
  { "type": ["@", "rules", "shell/test", "script"]
  , "name": ["identical-inputs"]
  , "test": ["identical-inputs.sh"]
  , "deps": [["", "tool-under-test"]]
  }
, "identical-inputs":
  { "type": "configure"
  , "tainted": ["test"]
  , "target": "identical-inputs (real)"
  , "arguments_config": ["TIMEOUT_SCALE"]
  , "config":
    { "type": "singleton_map"
    , "key": "TIMEOUT_SCALE"
    , "value":
      { "type": "*"
      , "$1": [3, {"type": "var", "name": "TIMEOUT_SCALE", "default": 1.0}]
      }
    }
  }
, "cwd":
  { "type": ["@", "rules", "shell/test", "script"]
  , "name": ["cwd"]
  , "test": ["cwd.sh"]
  , "deps": [["", "tool-under-test"]]
  }
, "request-action-input":
  { "type": ["@", "rules", "shell/test", "script"]
  , "name": ["request-action-input"]
  , "test": ["request-action-input.sh"]
  , "deps": [["", "tool-under-test"]]
  }
, "tree-ops":
  { "type": ["@", "rules", "shell/test", "script"]
  , "name": ["tree-ops"]
  , "test": ["tree-ops.sh"]
  , "deps": [["", "tool-under-test"]]
  , "keep": ["out/graph.json", "out/artifacts.json"]
  }
, "tree-conflicts":
  { "type": ["@", "rules", "shell/test", "script"]
  , "name": ["tree-conflicts"]
  , "test": ["tree-conflicts.sh"]
  , "deps": [["", "tool-under-test"]]
  , "keep": ["out/graph.json", "out/artifacts.json", "out/log"]
  }
, "TESTS":
  { "type": ["@", "rules", "test", "suite"]
  , "arguments_config": ["DROP_IO_HEAVY_TESTS"]
  , "stage": ["actions"]
  , "deps":
    { "type": "++"
    , "$1":
      [ [ "equality"
        , "equality-timeout"
        , "equality-properties"
        , "trees"
        , "tree-ops"
        , "tree-conflicts"
        , "conflicts"
        , "incomplete-retry"
        , "error-reporting"
        , "cwd"
        , "request-action-input"
        ]
      , { "type": "if"
        , "cond": {"type": "var", "name": "DROP_IO_HEAVY_TESTS"}
        , "else": ["identical-inputs"]
        }
      ]
    }
  }
}
