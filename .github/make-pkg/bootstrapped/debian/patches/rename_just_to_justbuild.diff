Description: Rename just binary to justbuild
 Replace the binary name just by justbuild in man pages and completion files.
 Also set the default path of the just binary to /usr/bin/justbuild in just-mr.
 This is required due to conflicts with https://packages.debian.org/sid/just.
Author: Oliver Reiche <oliver.reiche@gmail.com>
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
Index: b/share/man/just-graph-file.5.md
===================================================================
--- a/share/man/just-graph-file.5.md
+++ b/share/man/just-graph-file.5.md
@@ -3,7 +3,7 @@
 NAME
 ====
 
-just graph file - The format of the action graph used by **`just`**(1)
+just graph file - The format of the action graph used by **`justbuild`**(1)
 
 DESCRIPTION
 ===========
@@ -124,7 +124,7 @@ ignore those. Implementations writing ac
 that a future version of this file format might give a specific meaning
 to those extra keys.
 
-Graphs written by **`just`**(1) have the additional key *`"origins"`* in
+Graphs written by **`justbuild`**(1) have the additional key *`"origins"`* in
 each action. The value is a list of all places where this action was
 requested (so often, but not always, the list has length 1). Each such
 place is described by a JSON object with the following keys.
@@ -143,4 +143,4 @@ place is described by a JSON object with
 See also
 ========
 
-**`just`**(1)
+**`justbuild`**(1)
Index: b/share/man/just-mr-repository-config.5.md
===================================================================
--- a/share/man/just-mr-repository-config.5.md
+++ b/share/man/just-mr-repository-config.5.md
@@ -10,7 +10,7 @@ DESCRIPTION
 ===========
 
 In order for the **`just-mr`**(1) tool to generate a repository
-configuration file usable by the **`just`**(1) multi-repository build
+configuration file usable by the **`justbuild`**(1) multi-repository build
 system, it requires a configuration file describing repositories and
 their dependencies.
 
@@ -112,7 +112,7 @@ The following fields are supported:
 
 It defines as workspace root a directory with the distribution archives
 of the specified repositories. Usually this root is realized as a Git
-tree in the Git repository in **`just`**'s local build root.
+tree in the Git repository in **`justbuild`**'s local build root.
 
 The following fields are supported:
 
@@ -131,7 +131,7 @@ supported. If its value is *`true`* then
 root should be returned as a Git tree. If the root directory is already
 part of a Git repository, its Git tree identifier is used; otherwise,
 the workspace root will be realized as a Git tree in the Git repository
-in **`just`**'s local build root.
+in **`justbuild`**'s local build root.
 
 For all workspace roots except *`"distdir"`* the pragma key *`"special"`* is
 supported. If its value is *`"ignore"`* then it indicates that the workspace
@@ -202,6 +202,6 @@ this format might give specific meanings
 See also
 ========
 
-**`just`**(1),
+**`justbuild`**(1),
 **`just-mr`**(1),
 **`just-repository-config`**(5)
Index: b/share/man/just-mr.1.md
===================================================================
--- a/share/man/just-mr.1.md
+++ b/share/man/just-mr.1.md
@@ -20,7 +20,7 @@ DESCRIPTION
 
 Just-MR is a configuration tool for the multi-repository Just build
 system. It can be used both standalone and as a launcher for
-**`just`**(1).
+**`justbuild`**(1).
 
 The tool performs specific operations, based on the invoked subcommand,
 on repositories described in a configuration file. All subcommands
@@ -54,7 +54,7 @@ file. See **`just-mrrc`**(5) for more de
 
 **`-D`**, **`--defines`** *`JSON`*  
 Defines, via an in-line JSON object, an overlay configuration for
-**`just`**(1); if used as a launcher for a subcommand known to support
+**`justbuild`**(1); if used as a launcher for a subcommand known to support
 **`--defines`**, this defines value is forwarded, otherwise it is
 ignored. If **`-D`** is given several times, the **`-D`** options
 overlay (in the sense of *`map_union`*) in the order they are given on
@@ -117,8 +117,8 @@ Path to the CA certificate bundle contai
 be used to peer verify archive fetches from remote.
 
 **`--just`** *`PATH`*  
-Name of the just binary in *`PATH`* or path to the just binary.  
-Default: *`"just"`*.
+Name of the justbuild binary in *`PATH`* or path to the justbuild binary.  
+Default: *`"/usr/bin/justbuild"`*.
 
 **`--rc`** *`PATH`*  
 Path to the just-mrrc file to use. See **`just-mrrc`**(5) for more
@@ -141,14 +141,14 @@ SUBCOMMANDS
 
 Print on stdout a JSON object providing version information for this
 tool itself; the **`version`** subcommand calls the **`version`** subcommand of
-just. The version information for just-mr is in the same format that
-also **`just`** uses.
+justbuild. The version information for just-mr is in the same format that
+also **`justbuild`** uses.
 
 **`setup`**|**`setup-env`**
 ---------------------------
 
 These subcommands fetch all required repositories and generate an
-appropriate multi-repository **`just`** configuration file. The resulting
+appropriate multi-repository **`justbuild`** configuration file. The resulting
 file is stored in CAS and its path is printed to stdout. See
 **`just-repository-config`**(5) for more details on the resulting
 configuration file format.
@@ -163,7 +163,7 @@ from the input configuration file, use t
 The behavior of the two subcommands differs only with respect to the
 main repository. In the case of **`setup-env`**, the workspace root of the
 main repository is left out, such that it can be deduced from the
-working directory when **`just`** is invoked. In this way, working on a
+working directory when **`justbuild`** is invoked. In this way, working on a
 checkout of that repository is possible, while having all of its
 dependencies properly set up. In the case of **`setup`**, the workspace root
 of the main repository is taken as-is into the output configuration
@@ -175,7 +175,7 @@ fetch
 This subcommand prepares all archive-type workspace roots for an offline
 build by fetching all their required source files from the specified
 locations given in the input configuration file. Any subsequent
-**`just-mr`** or **`just`** invocations containing fetched archive workspace
+**`just-mr`** or **`justbuild`** invocations containing fetched archive workspace
 roots will thus need no further network connections.
 
 If a main repository is provided in the input configuration or on
@@ -210,9 +210,9 @@ configuration file.
 do
 --
 
-This subcommand is used as the canonical way of specifying just
-arguments and calling **`just`** via **`execvp`**(2). Any subsequent argument
-is unconditionally forwarded to **`just`**. For *known* subcommands
+This subcommand is used as the canonical way of specifying justbuild
+arguments and calling **`justbuild`** via **`execvp`**(2). Any subsequent argument
+is unconditionally forwarded to **`justbuild`**. For *known* subcommands
 (**`version`**, **`describe`**, **`analyse`**, **`build`**, **`install`**, **`install-cas`**, **`rebuild`**), the
 **`just-mr setup`** step is performed first for those commands accepting a
 configuration and the produced configuration is prefixed to the provided
@@ -221,20 +221,20 @@ the configuration or on the command line
 provided, the lexicographical first repository from the configuration is
 used.
 
-All logging arguments given to **`just-mr`** are passed to **`just`** as early
+All logging arguments given to **`just-mr`** are passed to **`justbuild`** as early
 arguments. If log files are provided, an unconditional
 **`--log-append`** argument is passed as well, which ensures no log
 messages will get overwritten.
 
-The **`--local-launcher`** argument is passed to **`just`** as early
+The **`--local-launcher`** argument is passed to **`justbuild`** as early
 argument for those *known* subcommands that accept it (build, install,
 rebuild).
 
 **`version`**|**`describe`**|**`analyse`**|**`build`**|**`install`**|**`install-cas`**|**`rebuild`**|**`gc`**
 -------------------------------------------------------------------------------------------------------------
 
-This subcommand is the explicit way of specifying *known* just
-subcommands and calling **`just`** via **`execvp`**(2). The same description
+This subcommand is the explicit way of specifying *known* justbuild
+subcommands and calling **`justbuild`** via **`execvp`**(2). The same description
 as for the **`do`** subcommand applies.
 
 EXIT STATUS
@@ -253,7 +253,7 @@ The exit status of **`just-mr`** is one
  - 71: error during setup
 
 Any other exit code that does not have bit 64 set is a status value from
-**`just`**, if **`just-mr`** is used as a launcher. See **`just`**(1) for more
+**`justbuild`**, if **`just-mr`** is used as a launcher. See **`justbuild`**(1) for more
 details.
 
 See also
@@ -261,4 +261,4 @@ See also
 
 **`just-mr-repository-config`**(5),
 **`just-repository-config`**(5),
-**`just`**(1)
+**`justbuild`**(1)
Index: b/share/man/just-mrrc.5.md
===================================================================
--- a/share/man/just-mrrc.5.md
+++ b/share/man/just-mrrc.5.md
@@ -66,7 +66,7 @@ The just-mrrc is given by a JSON object.
    details, see **`just-mr`**(1).
 
  - The value for the key *`"just"`* is a single location object,
-   specifying the path to the **`just`** binary to use for execution, if
+   specifying the path to the **`justbuild`** binary to use for execution, if
    **`just-mr`** is used as a launcher.
 
  - The value for the key *`"git"`* is a single location object,
@@ -88,8 +88,8 @@ The just-mrrc is given by a JSON object.
    on the command line.
 
  - The value for the key *`"just args"`* is a JSON object. Its keys are
-   **`just`** subcommands and its value is a JSON list of strings. For the
-   corresponding subcommand, these strings are prefixed to the **`just`**
+   **`justbuild`** subcommands and its value is a JSON list of strings. For the
+   corresponding subcommand, these strings are prefixed to the **`justbuild`**
    argument vector, if **`just-mr`** is used as a launcher.
 
 EXAMPLE
@@ -110,7 +110,7 @@ An example just-mrrc file could look lik
 , "log limit": 4
 , "log files": [{"root": "home", "path": ".log/just/latest-invocation"}]
 , "distdirs": [{"root": "home", "path": ".distfiles"}]
-, "just": {"root": "system", "path": "usr/bin/just"}
+, "just": {"root": "system", "path": "usr/bin/justbuild"}
 , "git": {"root": "system", "path": "usr/bin/git"}
 , "just args":
   { "build": ["-r", "10.0.0.1:8980", "--remote-execution-property", "OS:Linux"]
Index: b/share/man/just-repository-config.5.md
===================================================================
--- a/share/man/just-repository-config.5.md
+++ b/share/man/just-repository-config.5.md
@@ -4,12 +4,12 @@ NAME
 ====
 
 just repository config - The format of the repository config used by
-**`just`**(1)
+**`justbuild`**(1)
 
 DESCRIPTION
 ===========
 
-**`just`**'s repository configuration is read as JSON. Any other
+**`justbuild`**'s repository configuration is read as JSON. Any other
 serialization describing the same JSON object is equivalent. We assume,
 that in JSON objects, each key occurs at most once; it is implementation
 defined how repetitions of the same key are treated.
@@ -43,7 +43,7 @@ contains *`file roots`*, file names, and
 Specifically the following fields are supported:
 
  - *`"workspace_root"`* contains the *`file root`* where source files
-   are located. If this entry is missing for the main repository, **`just`**
+   are located. If this entry is missing for the main repository, **`justbuild`**
    will perform the normal workspace root resolution starting from the
    current working directory.
 
@@ -103,6 +103,6 @@ configuration generation, but not necess
 See also
 ========
 
-**`just`**(1),
+**`justbuild`**(1),
 **`just-mr`**(1),
 **`just-mr-repository-config`**(5)
Index: b/share/man/just.1.md
===================================================================
--- a/share/man/just.1.md
+++ b/share/man/just.1.md
@@ -1,22 +1,22 @@
-% JUST(1) | General Commands Manual
+% JUSTBUILD(1) | General Commands Manual
 
 NAME
 ====
 
-just - a generic build tool
+justbuild - a generic build tool
 
 SYNOPSIS
 ========
 
-**`just`** **`version`**  
-**`just`** {**`analyse`**|**`build`**} \[*`OPTION`*\]... \[\[*`module`*\] *`target`*\]  
-**`just`** **`install`** \[*`OPTION`*\]... **`-o`** *`OUTPUT_DIR`* \[\[*`module`*\] *`target`*\]  
-**`just`** **`install-cas`** \[*`OPTION`*\]... *`OBJECT_ID`*  
-**`just`** **`describe`** \[*`OPTION`*\]... \[\[*`module`*\] *`target`*\]  
-**`just`** **`rebuild`** \[*`OPTION`*\]... \[\[*`module`*\] *`target`*\]  
-**`just`** **`traverse`** \[*`OPTION`*\]... **`-o`** *`OUTPUT_DIR`* **`-g`** *`GRAPH_FILE`*  
-**`just`** **`gc`** \[*`OPTION`*\]...  
-**`just`** **`execute`** \[*`OPTION`*\]...
+**`justbuild`** **`version`**  
+**`justbuild`** {**`analyse`**|**`build`**} \[*`OPTION`*\]... \[\[*`module`*\] *`target`*\]  
+**`justbuild`** **`install`** \[*`OPTION`*\]... **`-o`** *`OUTPUT_DIR`* \[\[*`module`*\] *`target`*\]  
+**`justbuild`** **`install-cas`** \[*`OPTION`*\]... *`OBJECT_ID`*  
+**`justbuild`** **`describe`** \[*`OPTION`*\]... \[\[*`module`*\] *`target`*\]  
+**`justbuild`** **`rebuild`** \[*`OPTION`*\]... \[\[*`module`*\] *`target`*\]  
+**`justbuild`** **`traverse`** \[*`OPTION`*\]... **`-o`** *`OUTPUT_DIR`* **`-g`** *`GRAPH_FILE`*  
+**`justbuild`** **`gc`** \[*`OPTION`*\]...  
+**`justbuild`** **`execute`** \[*`OPTION`*\]...
 
 DESCRIPTION
 ===========
@@ -37,7 +37,7 @@ the empty string. Specifying the correct
 module, and target name allows to process that target independently of
 the current working directory.
 
-If the module is not specified on the command line, **`just`** sets the
+If the module is not specified on the command line, **`justbuild`** sets the
 module corresponding to the current working directory.
 
 If a target is not specified, the lexicographically-first target,
@@ -45,7 +45,7 @@ according to native byte order, is used.
 empty string will always be the default target for that module.
 
 If a target depends on other targets defined in other modules or
-repositories, **`just`** will recursively visit all and only the required
+repositories, **`justbuild`** will recursively visit all and only the required
 modules.
 
 The main repository is the repository containing the target specified on
@@ -61,8 +61,8 @@ file is used as main.
 The *`workspace_root`* of the main repository is then defined as
 follows. If the option **`--workspace-root`** is provided, then
 *`workspace_root`* is set accordingly. If the option is not provided,
-**`just`** checks if it is specified within the multi-repository
-configuration file. If it is, then it is set accordingly. If not, **`just`**
+**`justbuild`** checks if it is specified within the multi-repository
+configuration file. If it is, then it is set accordingly. If not, **`justbuild`**
 starts looking for a marker in the current directory first, then in all
 the parent directories until it finds one. The supported markers are
 
@@ -71,7 +71,7 @@ the parent directories until it finds on
  - *`.git`* (can be either a file - empty or not, content is ignored -
    or the famous directory)
 
-If it fails, **`just`** errors out.
+If it fails, **`justbuild`** errors out.
 
 For non-main repositories, the *`workspace_root`* entry must be declared
 in the multi-repository configuration file.
@@ -155,7 +155,7 @@ described in the *`TARGETS`* file. Since
 the CAS, the user has to use either the **`install`** or **`install-cas`**
 subcommand to get them.
 
-**`just`** allows for both local (i.e., on the same machine where **`just`** is
+**`justbuild`** allows for both local (i.e., on the same machine where **`justbuild`** is
 used) and remote compilation (i.e., by sending requests over a TCP
 connection, e.g., to a different machine, cluster or cloud
 infrastructure). In case of a remote compilation, artifacts are compiled
@@ -206,7 +206,7 @@ rules, to make usage simpler.
  - If the size is missing (e.g., because the argument contains no
    colon), or cannot be parsed as a number, this is not an error, and
    the value 0 is assumed. While this is almost never the correct size,
-   many CAS implementations, including the local CAS of just itself,
+   many CAS implementations, including the local CAS of justbuild itself,
    ignore the size for lookups.
  - From the type, only the first letter (*`f`* for non-executable file,
    *`x`* for executable file, and *`t`* for tree) is significant; the
@@ -408,7 +408,7 @@ File path for writing the action graph d
 Supported by: analyse|build|install|rebuild.
 
 **`-f`**, **`--log-file`** *`PATH`*  
-Path to local log file. **`just`** will store the information printed on
+Path to local log file. **`justbuild`** will store the information printed on
 stderr in the log file along with the thread id and timestamp when the
 output has been generated.  
 Supported by:
@@ -682,7 +682,7 @@ operations will be removed, in a FIFO sc
 EXIT STATUS
 ===========
 
-The exit status of **`just`** is one of the following values:
+The exit status of **`justbuild`** is one of the following values:
 
  - 0: the command completed successfully
  - 1: the command could not complete due to some errors (e.g.,
Index: b/share/just_complete.bash
===================================================================
--- a/share/just_complete.bash
+++ b/share/just_complete.bash
@@ -12,17 +12,17 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-########################### just completion
+########################### justbuild completion
 
-_just_subcommand_options(){
+_justbuild_subcommand_options(){
     local cmd=$1
-    for w in $(just $cmd --help)
+    for w in $(justbuild $cmd --help)
     do
         [[ $w =~ ^-. ]] &&  printf "%s\n" ${w//,/" "}
     done
 }
 
-_just_targets(){
+_justbuild_targets(){
     command -v python3 &>/dev/null || return
     python3 - <<EOF
 from json import load
@@ -77,7 +77,7 @@ main('$1', '$2', '$3')
 EOF
 }
 
-_just_completion(){
+_justbuild_completion(){
     local readonly SUBCOMMANDS=(build analyse describe install-cas install rebuild gc execute -h --help version)
     local word=${COMP_WORDS[$COMP_CWORD]}
     local prev=${COMP_WORDS[$((COMP_CWORD-1))]}
@@ -91,12 +91,12 @@ _just_completion(){
         COMPREPLY=($(compgen -W "${SUBCOMMANDS[*]}" -- $word))
     elif [[ $cmd =~ ^(install-cas|execute|gc) ]]
     then
-        local _opts=($(_just_subcommand_options $cmd))
+        local _opts=($(_justbuild_subcommand_options $cmd))
         COMPREPLY=($(compgen -f -W "${_opts[*]}" -- $word ))
         compopt -o plusdirs -o bashdefault -o default
     elif [[ $cmd =~ ^(build|analyse|describe|install|rebuild) ]]
     then
-        local _opts=($(_just_subcommand_options $cmd))
+        local _opts=($(_justbuild_subcommand_options $cmd))
         # look for -C and --main
         for i in "${!COMP_WORDS[@]}"
         do
@@ -113,7 +113,7 @@ _just_completion(){
         # we use the auto-generated conf file
         if [ -z "$conf" ]; then conf="${justmrconf}"; 
         fi
-        local _targets=($(_just_targets "$conf" "$main" "$prev" 2>/dev/null))
+        local _targets=($(_justbuild_targets "$conf" "$main" "$prev" 2>/dev/null))
         COMPREPLY=($(compgen -f -W "${_opts[*]} ${_targets[*]}" -- $word ))
         compopt -o plusdirs -o bashdefault -o default
     else
@@ -121,7 +121,7 @@ _just_completion(){
     fi
 }
 
-complete -F _just_completion just
+complete -F _justbuild_completion justbuild
 
 ########################### just-mr completion
 _just-mr_options(){
@@ -186,10 +186,10 @@ _just-mr_completion(){
         COMPREPLY=($(compgen -f -W "${_opts[*]} ${_repos[*]}" -- $word ))
     elif [[ "$cmd" =~ ^(version|build|analyse|describe|install-cas|install|rebuild|gc|execute) ]]
     then
-        # just subcommand options and modules/targets eventually using the
+        # justbuild subcommand options and modules/targets eventually using the
         # auto-generated configuration
         local justmrconf=$(just-mr setup --all 2>/dev/null)
-        _just_completion
+        _justbuild_completion
     else
         # just-mr top-level options
         local _opts=($(_just-mr_options "just-mr"))
Index: b/src/other_tools/just_mr/utils.hpp
===================================================================
--- a/src/other_tools/just_mr/utils.hpp
+++ b/src/other_tools/just_mr/utils.hpp
@@ -28,7 +28,7 @@
 std::unordered_set<std::string> const kLocationTypes{"workspace",
                                                      "home",
                                                      "system"};
-auto const kDefaultJustPath = "just";
+auto const kDefaultJustPath = "/usr/bin/justbuild";
 auto const kDefaultGitPath = "git";
 auto const kDefaultRCPath = StorageConfig::GetUserHome() / ".just-mrrc";
 auto const kDefaultBuildRoot = StorageConfig::kDefaultBuildRoot;
