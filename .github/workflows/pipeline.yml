name: Bootstrap and Deploy

on:
  push:
    tags:
      - 'v*'
    branches:
      - github-ci

jobs:
  x86_64-linux:
    name: x86_64 Linux
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Read commit info
        run: |
          git fetch https://github.com/just-buildsystem/justbuild master
          BASE_COMMIT="$(git merge-base ${GITHUB_REF_NAME} FETCH_HEAD)"
          COMMIT_TIME="$(git log -n1 ${BASE_COMMIT} --format=%ct)"
          COMMIT_HASH="$(git log -n1 ${BASE_COMMIT} --format=%h)"
          echo "COMMIT_TIME=${COMMIT_TIME}" >> $GITHUB_ENV
          echo "COMMIT_HASH=${COMMIT_HASH}" >> $GITHUB_ENV

      - name: Run and prepare docker image
        run: |
          docker run -it -d --name ubuntu -v $GITHUB_WORKSPACE:/workspace -w /workspace ubuntu:20.04
          docker exec ubuntu apt update

      - name: Bootstrap justbuild
        run: |
          docker exec ubuntu bash -c "\
            set -e; \
            apt install --yes wget python3 clang libstdc++-10-dev unzip patch; \
            export JUST_BUILD_CONF='{\"SOURCE_DATE_EPOCH\":\"'${COMMIT_TIME}'\"}'; \
            ./bin/bootstrap.py . /tmp/justbuild"

      - name: Build just-mr
        run: |
          docker exec ubuntu bash -c "\
            set -e; \
            apt install --yes git; \
            export PATH=/tmp/justbuild/out/bin:\$PATH; \
            echo '{\"SOURCE_DATE_EPOCH\":\"'${COMMIT_TIME}'\"}' > build.conf; \
            ./bin/just-mr.py install -c build.conf -o /tmp/justbuild/out/ 'installed just-mr'"

      - name: Determine package name
        run: |
          if [ "${GITHUB_REF_TYPE}" = "tag" ]; then
            UNTAGGED=false
            TAG_NAME="${GITHUB_REF_NAME}"
          elif [ "${GITHUB_REF_TYPE}" = "branch" ]; then
            UNTAGGED=true
            docker exec ubuntu bash -c "\
              set -e; \
              apt install --yes jq; \
              /tmp/justbuild/out/bin/just version | jq -r '(.version | join(\".\"))+.suffix' > version.txt"
            VERSION="$(cat version.txt | tr '~' '-')"
            TAG_NAME="v${VERSION}-${COMMIT_TIME}-g${COMMIT_HASH}"
          else
            echo "Error: unsupported ref type"
            exit 1
          fi
          echo "UNTAGGED=${UNTAGGED}" >> $GITHUB_ENV
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          echo "PKG_NAME=justbuild-${TAG_NAME}-x86_64-linux" >> $GITHUB_ENV

      - name: Build man pages
        run: |
          docker exec ubuntu bash -c "\
            set -e; \
            apt install --yes pandoc; \
            mkdir -p $PKG_NAME/share/man/man{1,5}; \
            pandoc -s -t man ./share/man/just.1.org -o $PKG_NAME/share/man/man1/just.1; \
            pandoc -s -t man ./share/man/just-mr.1.org -o $PKG_NAME/share/man/man1/just-mr.1; \
            pandoc -s -t man ./share/man/just-import-git.1.org -o $PKG_NAME/share/man/man1/just-import-git.1; \
            pandoc -s -t man ./share/man/just-mrrc.5.org -o $PKG_NAME/share/man/man5/just-mrrc.5; \
            pandoc -s -t man ./share/man/just-graph-file.5.org -o $PKG_NAME/share/man/man5/just-graph-file.5; \
            pandoc -s -t man ./share/man/just-repository-config.5.org -o $PKG_NAME/share/man/man5/just-repository-config.5; \
            pandoc -s -t man ./share/man/just-mr-repository-config.5.org -o $PKG_NAME/share/man/man5/just-mr-repository-config.5"

      - name: Create package
        run: |
          docker exec ubuntu bash -c "\
            set -e; \
            mkdir -p $PKG_NAME/{bin,etc/bash_completion.d}; \
            cp /tmp/justbuild/out/bin/just $PKG_NAME/bin/just; \
            cp /tmp/justbuild/out/bin/just-mr $PKG_NAME/bin/just-mr; \
            cp ./bin/just-import-git.py $PKG_NAME/bin/just-import-git; \
            cp ./share/just_complete.bash $PKG_NAME/etc/bash_completion.d/just"
          tar --sort=name --owner=root:0 --group=root:0 --mtime='UTC 1970-01-01' -czvf $PKG_NAME.tar.gz $PKG_NAME
          sha256sum $PKG_NAME.tar.gz | tee SHA256SUMS

      - name: Upload package checksum
        uses: actions/upload-artifact@v3
        with:
          name: SHA256SUMS
          path: SHA256SUMS
          if-no-files-found: error

      - name: Upload package release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "*.tar.gz;SHA256SUMS"
          tag_name: ${{ env.TAG_NAME }}
          prerelease: ${{ env.UNTAGGED }}
          tags: false
          draft: false
          overwrite: true

